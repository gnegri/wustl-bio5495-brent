(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    108363,       2796]
NotebookOptionsPosition[    101574,       2572]
NotebookOutlinePosition[    101967,       2589]
CellTagsIndexPosition[    101924,       2586]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Using ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " for combinatorics and probability"
}], "Section",
 CellChangeTimes->{{3.5841264074948*^9, 3.584126429874805*^9}, {
  3.58412654460423*^9, 3.584126545554195*^9}}],

Cell["\<\
In this notebook, we will provide the input cells for the examples -- you \
should evaluate each input cell to see the outputs. In some cases, later \
examples may not work if you haven\[CloseCurlyQuote]t evaluated all the \
previous input cells, so please evaluate each example.\
\>", "Text",
 CellChangeTimes->{{3.585425130149922*^9, 3.5854251400352373`*^9}, {
  3.585425346362123*^9, 3.58542535362204*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Using ",
 StyleBox["Tuples",
  FontFamily->"Courier"],
 " to enumerate finite sample spaces"
}], "Subsection",
 CellChangeTimes->{{3.5841410978643436`*^9, 3.58414111555546*^9}}],

Cell[TextData[{
 "You can use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to count the number of possible outcomes of an experiment that satisfy a \
certain criterion. For example, suppose you role two six-side dice. You can \
generate a list all the possible outcomes for this experiment using the \
built-in function ",
 StyleBox["Tuples",
  FontFamily->"Courier"],
 ". "
}], "Text",
 CellChangeTimes->{{3.584126518044018*^9, 3.584126518324312*^9}, {
   3.5841265526266203`*^9, 3.584126573171239*^9}, {3.584126689220394*^9, 
   3.584126778842473*^9}, {3.584126915213667*^9, 3.584126925394765*^9}, {
   3.584126969947505*^9, 3.5841269712105627`*^9}, {3.58412709825135*^9, 
   3.584127100298648*^9}, 3.58437419338892*^9, {3.585425008938169*^9, 
   3.585425068317033*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sampleSpace", "=", 
  RowBox[{"Tuples", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", " ", "2", ",", " ", "3", ",", " ", "4", ",", " ", "5", ",", 
      " ", "6"}], "}"}], ",", " ", "2"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.584126935536023*^9, 3.584126957756084*^9}, {
  3.5841273043720818`*^9, 3.584127307084401*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.609680181897874*^9}]
}, Open  ]],

Cell[TextData[{
 "In the output, the first number is the face shown on the first die rolled \
and the second number is the face shown on the second die. If you\
\[CloseCurlyQuote]re interested in the probabilities of events when rolling \
two fair dice then you can assume all possible outcomes are equally likely. \
Now suppose you are interested in the probability of the event consisting of \
all possible outcomes in which the sum of the numbers on the two faces is \
even. First, we need to know how many of the possible outcomes have an even \
sum. We can pick those outcomes out of the list of all outcomes by using the \
built-in function ",
 StyleBox["Select",
  FontFamily->"Courier"],
 ", which takes a list and a function. It applies the function to each \
element of the list. For example,"
}], "Text",
 CellChangeTimes->{{3.584126987059704*^9, 3.584127070354542*^9}, {
   3.5841271120103407`*^9, 3.584127125706531*^9}, {3.584127176219054*^9, 
   3.584127293306407*^9}, {3.584127336418653*^9, 3.584127343026614*^9}, {
   3.5841273917805767`*^9, 3.5841274833709373`*^9}, {3.584127518490346*^9, 
   3.584127596931047*^9}, {3.584127687467107*^9, 3.584127689083267*^9}, 
   3.584374215751636*^9, {3.5843742481057177`*^9, 3.584374250007432*^9}, {
   3.585407409535577*^9, 3.585407417390073*^9}, {3.5854250715820093`*^9, 
   3.5854251253508*^9}, {3.5854251558315477`*^9, 3.585425179404461*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "2", ",", " ", "3", ",", " ", "4", ",", " ", "5"}],
     "}"}], ",", " ", "EvenQ"}], "]"}]], "Input",
 CellChangeTimes->{{3.584127633141732*^9, 3.584127656972046*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.6096802035669317`*^9}]
}, Open  ]],

Cell[TextData[{
 "The return value is a new list consisting of the elements of the original \
list on which the function returned ",
 StyleBox["True",
  FontFamily->"Courier"],
 ". In this case we used the built-in function ",
 StyleBox["EvenQ",
  FontFamily->"Courier"],
 ". The Q at the end signifies a query function that tests whether something \
meets a criterion -- thus, ",
 StyleBox["PrimeQ",
  FontFamily->"Courier"],
 " tests whether its argument is a prime number. But for our dice example we \
can\[CloseCurlyQuote]t use ",
 StyleBox["EvenQ",
  FontFamily->"Courier"],
 " directly because we have a list of lists and what we want to know is \
whether the total of the numbers on the inner list (the die faces) is even. \
So we need to apply Total before we apply ",
 StyleBox["EvenQ",
  FontFamily->"Courier"],
 ". An elegant way to do that is as follows:"
}], "Text",
 CellChangeTimes->{
  3.5841276272776337`*^9, {3.584127685538134*^9, 3.584128036298811*^9}, {
   3.5854253060526047`*^9, 3.585425306368429*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"evenSumEvent", "=", 
  RowBox[{"Select", "[", 
   RowBox[{"sampleSpace", ",", " ", 
    RowBox[{
     RowBox[{"EvenQ", "[", 
      RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5841280392825003`*^9, 3.5841280687317133`*^9}, {
   3.584128754164874*^9, 3.5841287610354967`*^9}, 3.609680297700688*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6096802892462597`*^9, 3.6096802997028723`*^9}}]
}, Open  ]],

Cell[TextData[{
 "The expression  ",
 StyleBox["EvenQ[Total[#]] &",
  FontFamily->"Courier"],
 " defines a function of one argument that first applies ",
 StyleBox["Total",
  FontFamily->"Courier"],
 " to its argument and then applies ",
 StyleBox["EvenQ",
  FontFamily->"Courier"],
 " to the result. The ",
 StyleBox["#",
  FontFamily->"Courier"],
 " (called sharp) refers to the argument and the ",
 StyleBox["&",
  FontFamily->"Courier"],
 " (called ampersand) indicates that the preceding expression should be \
treated as a function. This is called an anonymous function because it doesn\
\[CloseCurlyQuote]t have a name -- it is defined just long enough to be used \
in this one expression. The ampersand is a shorthand notation for ",
 StyleBox["Function",
  FontFamily->"Courier"],
 ", which we could have used instead:"
}], "Text",
 CellChangeTimes->{{3.584128083214389*^9, 3.584128326307376*^9}, {
   3.584128462316907*^9, 3.58412849259516*^9}, 3.585407423798994*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"evenSumEvent", "=", 
  RowBox[{"Select", "[", 
   RowBox[{"sampleSpace", ",", " ", 
    RowBox[{"Function", "[", 
     RowBox[{"EvenQ", "[", 
      RowBox[{"Total", "[", "#", "]"}], "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.584128507388942*^9, 3.5841285168462677`*^9}, {
  3.5841287730320997`*^9, 3.584128774332693*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.609680303950077*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " has many of these shorthand symbols and most of them are better forgotten \
-- they make code unreadable. However, the ampersand and sharp combination is \
used almost universally for defining anonymous functions. You can also define \
anonymous functions with more than one argument and you can name the \
arguments instead of using ",
 StyleBox["#",
  FontFamily->"Courier"],
 " if you want, although this is done rarely. See the documentation on ",
 StyleBox["Function",
  FontFamily->"Courier"],
 " when you\[CloseCurlyQuote]re ready to learn more about this (but you don\
\[CloseCurlyQuote]t have to read it now). \n\nNow all that\[CloseCurlyQuote]s \
left is to count the number of outcomes in the event and divide by the total \
number of outcomes. The function ",
 StyleBox["Length",
  FontFamily->"Courier"],
 " gives the number of elements in a list:"
}], "Text",
 CellChangeTimes->{{3.5841285260131197`*^9, 3.5841285923788157`*^9}, {
   3.584128629139804*^9, 3.584128691906448*^9}, {3.584128731606599*^9, 
   3.5841287389624243`*^9}, {3.584128786779657*^9, 3.584128822539068*^9}, {
   3.584374354019437*^9, 3.5843743833594103`*^9}, {3.584374430081164*^9, 
   3.584374441606943*^9}, 3.5854074261915283`*^9, {3.585425420486082*^9, 
   3.585425423497118*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "evenSumEvent", "]"}]], "Input",
 CellChangeTimes->{{3.5841288241092377`*^9, 3.584128835919304*^9}}],

Cell[BoxData["18"], "Output",
 CellChangeTimes->{3.609680334053513*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "sampleSpace", "]"}]], "Input",
 CellChangeTimes->{{3.5841288397630568`*^9, 3.5841288459679213`*^9}}],

Cell[BoxData["36"], "Output",
 CellChangeTimes->{3.609680336069253*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"probEvenSumEvent", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Length", "[", "evenSumEvent", "]"}], "/", 
    RowBox[{"Length", "[", "sampleSpace", "]"}]}], "//", "N"}]}]], "Input",
 CellChangeTimes->{{3.5854013427147903`*^9, 3.5854013669587793`*^9}, {
  3.585401400890246*^9, 3.5854014025591183`*^9}, {3.5854033704858637`*^9, 
  3.585403371641748*^9}},
 FontColor->RGBColor[0.5, 0, 0.5]],

Cell[BoxData["0.5`"], "Output",
 CellChangeTimes->{3.609680338317288*^9}]
}, Open  ]],

Cell[TextData[{
 "The ",
 StyleBox["// N",
  FontFamily->"Courier"],
 " at the end means that we want to evaluate the built-in function ",
 StyleBox["N",
  FontFamily->"Courier"],
 " on the preceding expression, to get its decimal value rather than the \
fraction that is otherwise returned and we were lazy about it by placing the \
function name at the end.  We could have used functional syntax like so: "
}], "Text",
 CellChangeTimes->{{3.585401419854151*^9, 3.585401516581843*^9}, {
   3.585401549389285*^9, 3.585401780475678*^9}, {3.585401840771674*^9, 
   3.585401864553729*^9}, {3.58540191803483*^9, 3.585402029257895*^9}, {
   3.585402151177514*^9, 3.5854021737117434`*^9}, 3.5854025021748257`*^9, {
   3.58540361926271*^9, 3.5854036194151773`*^9}, 3.585407428678709*^9, {
   3.585425636099989*^9, 3.585425658895705*^9}, {3.5854257185908833`*^9, 
   3.5854258098463993`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{"probEvenSumEvent", " ", "=", " ", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"Length", "[", "evenSumEvent", "]"}], "/", 
     RowBox[{"Length", "[", "sampleSpace", "]"}]}], "]"}]}],
  FontColor->RGBColor[0.5, 0, 0.5]]], "Input",
 CellChangeTimes->{{3.5854013427147903`*^9, 3.5854013669587793`*^9}, {
  3.585401400890246*^9, 3.5854014025591183`*^9}, {3.5854020373258133`*^9, 
  3.585402040005416*^9}, {3.585403374724786*^9, 3.585403377716056*^9}},
 FontColor->RGBColor[0.5, 0, 0.5]],

Cell[BoxData["0.5`"], "Output",
 CellChangeTimes->{3.6096803527185783`*^9}]
}, Open  ]],

Cell[TextData[{
 "Placing the function at the beginning or end of an expression is a matter \
of style and readability -- in general, I prefer it at the beginning. \
However,  functions that modify the output format, e.g., ",
 StyleBox["N",
  FontFamily->"Courier"],
 " and ",
 StyleBox["MatrixForm",
  FontFamily->"Courier"],
 ", are often written in this postfix notation, perhaps because such output \
modifiers are often afterthoughts to the main computation."
}], "Text",
 CellChangeTimes->{{3.585402256960517*^9, 3.585402483551083*^9}, {
   3.585402573054446*^9, 3.585402616916527*^9}, {3.585402684893652*^9, 
   3.585402699525403*^9}, 3.585402781565366*^9, {3.5854036210859118`*^9, 
   3.58540362271122*^9}, {3.5854074304707747`*^9, 3.5854074321911592`*^9}, {
   3.5854258208364267`*^9, 3.585425982515905*^9}}],

Cell[TextData[{
 "Did you really need ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to figure out that the probability of getting an even sum when rolling two \
fair dice is 0.5? Of course not! But here\[CloseCurlyQuote]s a problem that \
will make you grateful you don\[CloseCurlyQuote]t have to do it by hand."
}], "Text",
 CellChangeTimes->{{3.584128852661235*^9, 3.584128938274972*^9}}],

Cell[CellGroupData[{

Cell["\<\
Practice: Using lists to count the number of outcomes in an event\
\>", "Subsubsubsection",
 CellChangeTimes->{{3.584128958790194*^9, 3.584129040530682*^9}}],

Cell["\<\
Suppose you are rolling the following dice, each of which has an equal \
probability of turning up each of its faces: two 4-sided dice, three 6-sided, \
and one 12-sided. Calculate the probability that the sum of the faces is a \
prime number.

Here\[CloseCurlyQuote]s how to approach it. \
\>", "Text",
 CellChangeTimes->{{3.584129050854735*^9, 3.5841291573945293`*^9}, {
  3.584129397460286*^9, 3.584129399602581*^9}, {3.584129435723102*^9, 
  3.584129613914554*^9}, {3.5841296507703867`*^9, 3.584130013338787*^9}, {
  3.584130049214407*^9, 3.5841301137624683`*^9}, {3.584130158434498*^9, 
  3.584130171819374*^9}, {3.5843744850672483`*^9, 3.584374523426578*^9}, {
  3.584374582287572*^9, 3.584374589503428*^9}, {3.584696438215898*^9, 
  3.5846964504464006`*^9}, {3.5854028858643093`*^9, 3.5854028888323717`*^9}, {
  3.58540296762677*^9, 3.585402970633978*^9}, {3.585426011709279*^9, 
  3.585426012462529*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Use ",
 StyleBox["Tuples",
  FontFamily->"Courier"],
 " to create a list of all possible outcomes (the sample space). Since your \
dice are not identical, you\[CloseCurlyQuote]ll have to pass ",
 StyleBox["Tuples",
  FontFamily->"Courier"],
 " a list of lists of possible outcomes for the dice. Please read the \
documentation on ",
 StyleBox["Tuples",
  FontFamily->"Courier"],
 " far enough to figure out how to do this. The resulting sample space is big \
so you will probably want to assign the list representing it to a variable \
like ",
 StyleBox["sampleSpace",
  FontFamily->"Courier"],
 " and put a semi-colon at the end of the line to suppress the printing of \
the result. If you want to avoid typing in the lists of possible outcomes on \
each die you can look up and use the function ",
 StyleBox["Range",
  FontFamily->"Courier"],
 ", which generates lists of successive integers. Before going on, check the \
number of outcomes in the ",
 StyleBox["sampleSpace",
  FontFamily->"Courier"],
 " by using ",
 StyleBox["Length",
  FontFamily->"Courier"],
 " and verify that it is correct."
}], "ItemNumbered",
 CellChangeTimes->{{3.585402917584004*^9, 3.5854029204759607`*^9}, 
   3.585407445648408*^9},
 FontSize->14],

Cell[TextData[{
 "Select out the outcomes whose sum is prime and assign them to a variable \
with a name like ",
 StyleBox["primeSumEvent",
  FontFamily->"Courier"],
 ". The functions ",
 StyleBox["Total",
  FontFamily->"Courier"],
 " and ",
 StyleBox["PrimeQ",
  FontFamily->"Courier"],
 " will be handy for this. "
}], "ItemNumbered",
 CellChangeTimes->{{3.5854029451484118`*^9, 3.5854029473875437`*^9}}],

Cell["\<\
Calculate the actual probability of getting a prime sum on these dice\
\>", "ItemNumbered",
 CellChangeTimes->{{3.585402961499565*^9, 3.5854029632995243`*^9}}]
}, Open  ]],

Cell["\<\
Once you\[CloseCurlyQuote]ve solved this or any other practice problem, \
please neaten up the notebook, deleting things that you tried along the way \
but weren\[CloseCurlyQuote]t critical to the final solution, just as you \
would recopy the essentials from your scratchpaper for a handwritten solution.\
\>", "Text",
 CellChangeTimes->{{3.5854263782488413`*^9, 3.585426468910321*^9}, 
   3.609680383648738*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "[", "n_", "]"}], ":=", 
  RowBox[{"Range", "[", "n", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ss", "=", 
   RowBox[{"Tuples", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"d", "[", "4", "]"}], ",", 
      RowBox[{"d", "[", "4", "]"}], ",", 
      RowBox[{"d", "[", "6", "]"}], ",", 
      RowBox[{"d", "[", "6", "]"}], ",", 
      RowBox[{"d", "[", "6", "]"}], ",", 
      RowBox[{"d", "[", "12", "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ssL", "=", 
   RowBox[{"Length", "[", "ss", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pSE", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"ss", ",", 
     RowBox[{
      RowBox[{"PrimeQ", "[", 
       RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pSEL", "=", 
   RowBox[{"Length", "[", "pSE", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"prob", "=", 
  RowBox[{
   FractionBox["pSEL", "ssL"], "//", "N"}]}]}], "Input",
 CellChangeTimes->{{3.6096815668524857`*^9, 3.609681582992289*^9}, {
  3.609687599431034*^9, 3.6096876311753902`*^9}}],

Cell[BoxData["0.2647569444444444`"], "Output",
 CellChangeTimes->{
  3.6096815847049026`*^9, {3.609687620346081*^9, 3.60968763175173*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Permutations and Combinations in Mathematica", "Subsection",
 CellChangeTimes->{{3.584141749084115*^9, 3.5841417577866497`*^9}}],

Cell[TextData[{
 "You can use the built in function ",
 StyleBox["Permutations",
  FontFamily->"Courier New"],
 " to enumerate all the permutations of a set represented as list. This lists \
all the permutations of length exactly 3 (see the reference page on ",
 StyleBox["Permutations",
  FontFamily->"Courier"],
 " for other ways of using it)."
}], "Text",
 CellChangeTimes->{{3.584141872827388*^9, 3.5841419455144453`*^9}, {
  3.584142132770536*^9, 3.584142177554976*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Permutations", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "2", ",", " ", "3", ",", " ", "4", ",", " ", "5"}],
     "}"}], ",", " ", 
   RowBox[{"{", "3", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5841415379452333`*^9, 3.584141557686878*^9}, {
  3.584141606565291*^9, 3.584141607868393*^9}, {3.584141801852932*^9, 
  3.584141843837227*^9}, {3.584141950661264*^9, 3.584141968676568*^9}, {
  3.584142012659925*^9, 3.584142108283642*^9}, {3.584374752847312*^9, 
  3.5843747695121403`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.609681608566916*^9}]
}, Open  ]],

Cell["\<\
Note that the 3 indicating the number of elements you want in the \
permutations is actually a list containing the number three, {3}. Built in \
functions are usually heavily overloaded, meaning they do different things \
depending on what types of arguments you give them. Sometimes arguments have \
to appear in a list to communicate exactly what you want done with them. In \
this case, giving just the number 3 instead of the list {3} as the third \
argument would produce all permutations of size 3 or less, whereas you want \
permutations of size exactly three. You couldn\[CloseCurlyQuote]t have \
guessed this -- you just have to read the documentation on the function.\
\>", "Text",
 CellChangeTimes->{{3.5841422736046886`*^9, 3.584142286170878*^9}, {
  3.5843746415389214`*^9, 3.584374741255247*^9}, {3.5843747751613407`*^9, 
  3.5843748677351418`*^9}, {3.5843750512726173`*^9, 3.5843750874592657`*^9}, {
  3.584696500381179*^9, 3.58469651397906*^9}}],

Cell[TextData[{
 "To get all the combinations of a certain size you can use the function ",
 StyleBox["Subsets",
  FontFamily->"Courier"],
 ", which works analogously to ",
 StyleBox["Permutations",
  FontFamily->"Courier"],
 ", in that you indicate an exact size by putting the second argument in a \
list."
}], "Text",
 CellChangeTimes->{{3.5843750914190807`*^9, 3.5843751039069023`*^9}, {
  3.584375167067278*^9, 3.5843752287409573`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Subsets", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "2", ",", " ", "3", ",", " ", "4"}], "}"}], ",", 
   " ", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.584141627297798*^9, 3.5841416532760897`*^9}, {
  3.584141776733157*^9, 3.5841417773886433`*^9}, {3.6096816479993563`*^9, 
  3.609681662414217*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.609681635032854*^9, 3.609681663120727*^9}}]
}, Open  ]],

Cell[TextData[{
 "Compare the result to the result of calling ",
 StyleBox["Permutations",
  FontFamily->"Courier"],
 " with the same arguments:"
}], "Text",
 CellChangeTimes->{{3.584375265637044*^9, 3.584375311075368*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Permutations", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "2", ",", " ", "3", ",", " ", "4"}], "}"}], ",", 
   " ", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.584375296462429*^9, 3.584375298519538*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6096816670569687`*^9}]
}, Open  ]],

Cell[TextData[{
 "In comparing them, think about the following questions. For any two \
numbers, how many of the pairs in the ",
 StyleBox["Subsets",
  FontFamily->"Courier New"],
 " output contain them? How many of the pairs in the ",
 StyleBox["Permutations",
  FontFamily->"Courier"],
 " output contain them?"
}], "Text",
 CellChangeTimes->{{3.584375337715583*^9, 3.5843753966592407`*^9}, {
  3.584375619019113*^9, 3.5843756677233343`*^9}, {3.585426656001109*^9, 
  3.5854266678468122`*^9}, {3.609681672748642*^9, 3.609681679003169*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Working with probability distributions", "Subsection",
 CellChangeTimes->{{3.584378008775268*^9, 3.584378022363152*^9}}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " knows about a lot of families of probability distributions. One of the \
simplest is the discrete uniform distribution. For example, ",
 StyleBox["DiscreteUniformDistribution[{1,10}] ",
  FontFamily->"Courier"],
 "represents the uniform distribution on the integers from 1 to 10 -- the \
distribution under which all those integers are equally likely to be chosen."
}], "Text",
 CellChangeTimes->{{3.584378026205285*^9, 3.584378136491639*^9}, {
  3.5843781669315233`*^9, 3.584378205310512*^9}, {3.584378235491486*^9, 
  3.5843783110513153`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscreteUniformDistribution", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "10"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.5843781864454947`*^9, 3.584378186447949*^9}}],

Cell[BoxData[
 RowBox[{"DiscreteUniformDistribution", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "10"}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.609681751738223*^9}]
}, Open  ]],

Cell[TextData[{
 "As you can see, it evaluates to itself -- there is no way to simplify or \
reduce it. It doesn\[CloseCurlyQuote]t do anything until you pass it in to \
another function, such as ",
 StyleBox["RandomVariate",
  FontFamily->"Courier"],
 ". RandomVariate  samples from a distribution, as in"
}], "Text",
 CellChangeTimes->{{3.584378326467071*^9, 3.584378412474815*^9}, {
  3.584696154212379*^9, 3.584696157586411*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVariate", "[", 
  RowBox[{"DiscreteUniformDistribution", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "10"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.584378416210537*^9, 3.5843784198033733`*^9}, {
  3.584378451592374*^9, 3.5843784623512707`*^9}}],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{{3.609681759263482*^9, 3.6096817641794653`*^9}}]
}, Open  ]],

Cell["\<\
This in essence \[OpenCurlyDoubleQuote]simulates\[CloseCurlyDoubleQuote] a \
process that follows the distribution you pass in. You can give the number of \
samples you want as a second argument:\
\>", "Text",
 CellChangeTimes->{{3.584378480589398*^9, 3.584378547619459*^9}, {
  3.5846961785484324`*^9, 3.584696191771069*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVariate", "[", 
  RowBox[{
   RowBox[{"DiscreteUniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "10"}], "}"}], "]"}], ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.58437856658885*^9, 3.584378567541295*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", "6", ",", "6", ",", "4", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.609681767551319*^9}]
}, Open  ]],

Cell[TextData[{
 "This gets more interesting and useful when the distribution isn\
\[CloseCurlyQuote]t uniform. For example, ",
 StyleBox["EmpiricalDistribution",
  FontFamily->"Courier New"],
 " allows you to specify the probability of each outcome explicitly, as in"
}], "Text",
 CellChangeTimes->{{3.584378595686606*^9, 3.584378626986724*^9}, {
  3.5843789159812*^9, 3.584378916483268*^9}, {3.584379037843196*^9, 
  3.584379059611329*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ed", "=", 
  RowBox[{"EmpiricalDistribution", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{".2", ",", " ", ".6", ",", " ", ".1", ",", " ", ".1"}], "}"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "2", ",", " ", "3", ",", " ", "4"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.584379062122855*^9, 3.584379196437636*^9}, {
  3.584379612654625*^9, 3.584379616669759*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"DataDistribution", "[", "\[LeftSkeleton]", 
   TagBox["\<\"Empirical\"\>",
    Editable -> False], "\[RightSkeleton]", ",", 
   TagBox[
    RowBox[{"{", "4", "}"}],
    Editable -> False], "]"}],
  InterpretTemplate[
  DataDistribution[#, {{0.2, 0.6, 0.1, 0.1}, {1, 2, 3, 4}, False}, 1, 
    First[#2]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{3.609681776231514*^9}]
}, Open  ]],

Cell["\<\
Now if we sample from it, we\[CloseCurlyQuote]ll get a lot more 2\
\[CloseCurlyQuote]s than anything else, then 1\[CloseCurlyQuote]s, and \
occasional 3\[CloseCurlyQuote]s and 4\[CloseCurlyQuote]s.  \
\>", "Text",
 CellChangeTimes->{{3.584379175916274*^9, 3.584379237258976*^9}, {
  3.584379651010683*^9, 3.584379665938959*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"RandomVariate", "[", 
   RowBox[{"ed", ",", "100"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.584379240656541*^9, 3.5843792624688597`*^9}, {
  3.584379324757411*^9, 3.584379326364738*^9}, {3.584379561255114*^9, 
  3.584379583141326*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "4", ",", "1", ",", "2", ",", "4", ",", "2", ",", "2", ",", "2", 
   ",", "1", ",", "1", ",", "1", ",", "2", ",", "3", ",", "1", ",", "1", ",", 
   "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "2", ",", "3", 
   ",", "4", ",", "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "3", ",", "2", ",", "2", ",", "4", ",", "2", ",", "2", ",", "2", ",", 
   "3", ",", "2", ",", "2", ",", "4", ",", "2", ",", "1", ",", "2", ",", "4", 
   ",", "2", ",", "2", ",", "1", ",", "3", ",", "1", ",", "2", ",", "2", ",", 
   "2", ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "3", ",", "3", 
   ",", "2", ",", "1", ",", "2", ",", "1", ",", "2", ",", "1", ",", "4", ",", 
   "2", ",", "2", ",", "3", ",", "2", ",", "4", ",", "1", ",", "2", ",", "2", 
   ",", "4", ",", "2", ",", "3", ",", "4", ",", "2", ",", "1", ",", "3", ",", 
   "2", ",", "2", ",", "2", ",", "3", ",", "1", ",", "2", ",", "3", ",", "4", 
   ",", "3", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.609681785815866*^9}]
}, Open  ]],

Cell["\<\
You can also just pass in a list and it will use the frequencies from the \
list to generate an empirical distribution:\
\>", "Text",
 CellChangeTimes->{{3.584379284091758*^9, 3.584379308907339*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ed2", "=", 
  RowBox[{"EmpiricalDistribution", "[", "data", "]"}]}]], "Input",
 CellChangeTimes->{{3.584379350722941*^9, 3.584379353862749*^9}, {
  3.584379397902841*^9, 3.5843794046304407`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"DataDistribution", "[", "\[LeftSkeleton]", 
   TagBox["\<\"Empirical\"\>",
    Editable -> False], "\[RightSkeleton]", ",", 
   TagBox[
    RowBox[{"{", "100", "}"}],
    Editable -> False], "]"}],
  InterpretTemplate[DataDistribution[#, {{
      Rational[1, 5], 
      Rational[27, 50], 
      Rational[3, 20], 
      Rational[11, 100]}, {1, 2, 3, 4}, False}, 1, 
    First[#2]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{3.6096817903684587`*^9}]
}, Open  ]],

Cell["\<\
Here\[CloseCurlyQuote]s an example of sampling approximate reals from a \
continuous distribution -- the normal (Gaussian) distribution with mean 5 and \
standard deviation 2:\
\>", "Text",
 CellChangeTimes->{{3.584379779843131*^9, 3.584379809738839*^9}, {
  3.5843800581891603`*^9, 3.58438008125887*^9}, {3.5843801168833847`*^9, 
  3.584380162307317*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVariate", "[", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"5", ",", " ", "2"}], "]"}], ",", " ", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.584380083668263*^9, 3.584380106300906*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6.452994109645219`", ",", "9.50774839487232`", ",", "4.708764275849209`", 
   ",", "2.953213818553793`", ",", "5.770479156909611`", ",", 
   "9.687295121010584`", ",", "5.27311321770851`", ",", "3.918848764552171`", 
   ",", "6.649482631354463`", ",", "6.025280895303348`", ",", 
   "5.17455878335966`", ",", "5.638749160736139`", ",", "3.3375930403875995`",
    ",", "4.235991505375479`", ",", "1.3423733356119936`", ",", 
   "2.7676094485622174`", ",", "5.569152285053863`", ",", 
   "7.935139599934411`", ",", "1.811964578332383`", ",", 
   "9.255909767981912`"}], "}"}]], "Output",
 CellChangeTimes->{3.609681815232377*^9}]
}, Open  ]],

Cell["\<\
We can plot a histogram of a larger sample to see the familiar \
\[OpenCurlyDoubleQuote]bell curve\[CloseCurlyDoubleQuote] shape:\
\>", "Text",
 CellChangeTimes->{{3.584380183051044*^9, 3.584380199786744*^9}, {
  3.5843809629948587`*^9, 3.584380974347088*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"RandomVariate", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"5", ",", " ", "2"}], "]"}], ",", " ", "5000"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.584380210854854*^9, 3.584380261325149*^9}, {
  3.5843809193913403`*^9, 3.584380942597533*^9}}],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
   EdgeForm[Opacity[0.48299999999999993`]], {}, 
   {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
    EdgeForm[Opacity[0.48299999999999993`]], 
    RectangleBox[{-3., 0}, {-2.5, 1},
     RoundingRadius->0], RectangleBox[{-2.5, 0}, {-2., 2},
     RoundingRadius->0], RectangleBox[{-2., 0}, {-1.5, 3},
     RoundingRadius->0], RectangleBox[{-1.5, 0}, {-1., 1},
     RoundingRadius->0], RectangleBox[{-1., 0}, {-0.5, 10},
     RoundingRadius->0], RectangleBox[{-0.5, 0}, {0., 14},
     RoundingRadius->0], RectangleBox[{0., 0}, {0.5, 35},
     RoundingRadius->0], RectangleBox[{0.5, 0}, {1., 50},
     RoundingRadius->0], RectangleBox[{1., 0}, {1.5, 85},
     RoundingRadius->0], RectangleBox[{1.5, 0}, {2., 142},
     RoundingRadius->0], RectangleBox[{2., 0}, {2.5, 181},
     RoundingRadius->0], RectangleBox[{2.5, 0}, {3., 281},
     RoundingRadius->0], RectangleBox[{3., 0}, {3.5, 358},
     RoundingRadius->0], RectangleBox[{3.5, 0}, {4., 440},
     RoundingRadius->0], RectangleBox[{4., 0}, {4.5, 401},
     RoundingRadius->0], RectangleBox[{4.5, 0}, {5., 520},
     RoundingRadius->0], RectangleBox[{5., 0}, {5.5, 464},
     RoundingRadius->0], RectangleBox[{5.5, 0}, {6., 455},
     RoundingRadius->0], RectangleBox[{6., 0}, {6.5, 391},
     RoundingRadius->0], RectangleBox[{6.5, 0}, {7., 357},
     RoundingRadius->0], RectangleBox[{7., 0}, {7.5, 271},
     RoundingRadius->0], RectangleBox[{7.5, 0}, {8., 194},
     RoundingRadius->0], RectangleBox[{8., 0}, {8.5, 149},
     RoundingRadius->0], RectangleBox[{8.5, 0}, {9., 88},
     RoundingRadius->0], RectangleBox[{9., 0}, {9.5, 49},
     RoundingRadius->0], RectangleBox[{9.5, 0}, {10., 31},
     RoundingRadius->0], RectangleBox[{10., 0}, {10.5, 14},
     RoundingRadius->0], RectangleBox[{10.5, 0}, {11., 6},
     RoundingRadius->0], RectangleBox[{11., 0}, {11.5, 3},
     RoundingRadius->0], RectangleBox[{11.5, 0}, {12., 3},
     RoundingRadius->0], RectangleBox[{12., 0}, {12.5, 1},
     RoundingRadius->0]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-3., 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  PlotRange->{{-3., 12.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.1]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.609681825248664*^9, 3.609681837987512*^9}}]
}, Open  ]],

Cell["\<\
That was a plot of a sample, but we can also plot the distribution itself:\
\>", "Text",
 CellChangeTimes->{{3.5843810163254128`*^9, 3.584381030875126*^9}, {
  3.585484690521886*^9, 3.5854846997752132`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"5", ",", " ", "2"}], "]"}], ",", " ", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "1"}], ",", " ", "11"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.584381032881579*^9, 3.584381035366859*^9}, {
  3.584381091910618*^9, 3.5843811252693243`*^9}, {3.584381156467105*^9, 
  3.584381174117605*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
Zuwfy8tEPv////z/AfieCM0=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-1, 11}, {0., 0.19947111893221017`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.609681828406929*^9}]
}, Open  ]],

Cell[TextData[{
 "The function",
 StyleBox[" ",
  FontColor->RGBColor[0.5, 0, 0.5]],
 StyleBox["PDF",
  FontFamily->"Courier"],
 " (for \[OpenCurlyDoubleQuote]probability density function\
\[CloseCurlyDoubleQuote]) gives the probability density at a particular \
point. For example,"
}], "Text",
 CellChangeTimes->{{3.584381329012973*^9, 3.5843813467711563`*^9}, {
  3.584381443635228*^9, 3.584381507090798*^9}, {3.585404623841002*^9, 
  3.585404641272805*^9}, {3.58540471400035*^9, 3.585404741183934*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"5", ",", " ", "2"}], "]"}], ",", " ", "7"}], "]"}]], "Input",
 CellChangeTimes->{{3.584381508765068*^9, 3.584381515277293*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"2", " ", 
   SqrtBox[
    RowBox[{"2", " ", "\[ExponentialE]", " ", "\[Pi]"}]]}]]], "Output",
 CellChangeTimes->{3.6096818417958107`*^9}]
}, Open  ]],

Cell[TextData[{
 "This gives the probability density at 7 as an exact real. To get an \
approximate decimal, use ",
 StyleBox["N",
  FontFamily->"Courier"],
 ":"
}], "Text",
 CellChangeTimes->{{3.584381543480145*^9, 3.584381580610499*^9}, {
  3.584697038589933*^9, 3.58469703879451*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"5", ",", " ", "2"}], "]"}], ",", " ", "7"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5843815821034117`*^9, 3.584381594721027*^9}}],

Cell[BoxData["0.12098536225957168`"], "Output",
 CellChangeTimes->{3.60968184607821*^9}]
}, Open  ]],

Cell[TextData[{
 "The second argument to ",
 StyleBox["Plot, {x, -1, 11}",
  FontFamily->"Courier"],
 ", indicates that the ",
 StyleBox["x",
  FontFamily->"Courier"],
 " in the first argument should be varied from -1 to 11."
}], "Text",
 CellChangeTimes->{{3.584384657091729*^9, 3.584384705603332*^9}}],

Cell[CellGroupData[{

Cell["\<\
Practice: Plotting samples and probability distributions\
\>", "Subsubsubsection",
 CellChangeTimes->{{3.584383138605159*^9, 3.5843831563312807`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Use ",
 StyleBox["BinomialDistribution",
  FontFamily->"Courier",
  FontSize->14],
 " to simulate the number of heads produced in 10 tosses of a coin with \
probability 0.8 of producing a heads on each flip (called a success)."
}], "ItemNumbered",
 CellChangeTimes->{{3.58438316531501*^9, 3.584383166763172*^9}, {
  3.584383219901576*^9, 3.584383325787224*^9}, {3.584383393691124*^9, 
  3.5843834225635977`*^9}, {3.584383503842915*^9, 3.5843835277150507`*^9}, {
  3.584383757341432*^9, 3.5843837704427357`*^9}, {3.584383835802979*^9, 
  3.584383835808395*^9}}],

Cell["\<\
Plot a histogram of the numbers of heads produced in 1,000 such experiments.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.58438316531501*^9, 3.584383166763172*^9}, {
  3.584383219901576*^9, 3.584383325787224*^9}, {3.584383393691124*^9, 
  3.5843834225635977`*^9}, {3.584383503842915*^9, 3.5843835277150507`*^9}, {
  3.584383757341432*^9, 3.5843837704427357`*^9}, {3.584383835802979*^9, 
  3.5843838706959352`*^9}}],

Cell[TextData[{
 "Plot the actual probability function of the binomial distribution with \
these parameters, from 0 to 10. The only values with non-zero probability are \
the integers from 0 to 10, so will want to use ",
 StyleBox["DiscretePlot",
  FontFamily->"Courier",
  FontSize->14],
 " instead of ",
 StyleBox["Plot",
  FontFamily->"Courier",
  FontSize->14],
 " for this."
}], "ItemNumbered",
 CellChangeTimes->{{3.58438316531501*^9, 3.584383166763172*^9}, {
   3.584383219901576*^9, 3.584383325787224*^9}, {3.584383393691124*^9, 
   3.5843834225635977`*^9}, {3.584383503842915*^9, 3.5843835277150507`*^9}, {
   3.584383757341432*^9, 3.5843837704427357`*^9}, {3.584383835802979*^9, 
   3.58438389006645*^9}, {3.584383934299135*^9, 3.584383971906814*^9}, {
   3.58438402189141*^9, 3.584384060235767*^9}, {3.584384759259287*^9, 
   3.584384827739265*^9}, 3.585405313364026*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Histogram", "[", 
  RowBox[{"RandomVariate", "[", 
   RowBox[{
    RowBox[{"BinomialDistribution", "[", 
     RowBox[{"10", ",", "0.8"}], "]"}], ",", "1000"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"BinomialDistribution", "[", 
      RowBox[{"10", ",", "0.8"}], "]"}], ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.609682176694889*^9, 3.609682256632695*^9}, {
  3.60968230180829*^9, 3.609682365569111*^9}, {3.609682530663512*^9, 
  3.609682564327032*^9}, {3.609682607247138*^9, 3.609682678149632*^9}}],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
   EdgeForm[Opacity[0.644]], {}, 
   {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
    EdgeForm[Opacity[0.644]], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{3., 0}, {4., 1}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{22.5, 64.63061224489796}, {90.58035130276768, 
         92.19761682108961}}],
       StatusArea[#, 1]& ,
       TagBoxNote->"1"],
      StyleBox["1", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[1, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{4., 0}, {5., 6}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{63.63061224489796, 105.76122448979594`}, {
         87.49402371115802, 92.19761682108961}}],
       StatusArea[#, 6]& ,
       TagBoxNote->"6"],
      StyleBox["6", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[6, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{5., 0}, {6., 32}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{104.76122448979594`, 146.89183673469387`}, {
         71.44512023478781, 92.19761682108961}}],
       StatusArea[#, 32]& ,
       TagBoxNote->"32"],
      StyleBox["32", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[32, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{6., 0}, {7., 79}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{145.89183673469387`, 188.02244897959184`}, {
         42.433640873657026`, 92.19761682108961}}],
       StatusArea[#, 79]& ,
       TagBoxNote->"79"],
      StyleBox["79", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[79, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{7., 0}, {8., 203}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{187.02244897959184`, 
         229.15306122448982`}, {-34.10728339826247, 92.19761682108961}}],
       StatusArea[#, 203]& ,
       TagBoxNote->"203"],
      StyleBox["203", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[203, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{8., 0}, {9., 302}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{228.15306122448982`, 
         270.2836734693878}, {-95.21656971213369, 92.19761682108961}}],
       StatusArea[#, 302]& ,
       TagBoxNote->"302"],
      StyleBox["302", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[302, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{9., 0}, {10., 263}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{269.2836734693878, 
         311.41428571428577`}, {-71.14321449757836, 92.19761682108961}}],
       StatusArea[#, 263]& ,
       TagBoxNote->"263"],
      StyleBox["263", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[263, {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{10., 0}, {11., 114}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{310.41428571428577`, 352.5448979591837}, {
         20.829347732389422`, 92.19761682108961}}],
       StatusArea[#, 114]& ,
       TagBoxNote->"114"],
      StyleBox["114", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[114, {
        GrayLevel[0]}], "Tooltip"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{3., 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  PlotRange->{{3., 11.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.1]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.609682317115158*^9, 3.609682355484478*^9, {3.609682537229966*^9, 
   3.609682564830151*^9}, {3.609682614241342*^9, 3.609682620726338*^9}, {
   3.60968265413195*^9, 3.609682678688921*^9}, 3.60968270874482*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.24720000000000014`, 0.24, 0.6], {
     {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], LineBox[{},
       VertexColors->None]}, 
     {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], 
      LineBox[{{{0., 1.0240000000000004`*^-7}, {0., 0}}, {{1., 
         4.095999999999993*^-6}, {1., 0}}, {{2., 0.00007372799999999966}, {
         2., 0}}, {{3., 0.000786432}, {3., 0}}, {{4., 0.005505024000000001}, {
         4., 0}}, {{5., 0.02642411519999998}, {5., 0}}, {{6., 
         0.08808038399999996}, {6., 0}}, {{7., 0.20132659200000028`}, {
         7., 0}}, {{8., 0.30198988799999893`}, {8., 0}}, {{9., 0.268435456}, {
         9., 0}}, {{10., 0.10737418240000005`}, {10., 0}}},
       VertexColors->None]}}}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], {}, 
    PointBox[{{0., 1.0240000000000004`*^-7}, {1., 4.095999999999993*^-6}, {2.,
      0.00007372799999999966}, {3., 0.000786432}, {4., 
     0.005505024000000001}, {5., 0.02642411519999998}, {6., 
     0.08808038399999996}, {7., 0.20132659200000028`}, {8., 
     0.30198988799999893`}, {9., 0.268435456}, {10., 
     0.10737418240000005`}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Method->{"MessagesHead" -> DiscretePlot},
  PlotRange->{{0, 10}, {0, 0.30198988799999893`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}}]], "Output",
 CellChangeTimes->{
  3.609682317115158*^9, 3.609682355484478*^9, {3.609682537229966*^9, 
   3.609682564830151*^9}, {3.609682614241342*^9, 3.609682620726338*^9}, {
   3.60968265413195*^9, 3.609682678688921*^9}, 3.609682708762334*^9}],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.609682856514779*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculating the probabilities of events", "Subsubsection",
 CellChangeTimes->{{3.584697248895364*^9, 3.584697277146717*^9}, 
   3.58540745291847*^9}],

Cell[TextData[{
 "When working with probability distributions, often you will want to know \
the cumulative distribution function (CDF) rather than the probability \
density function (PDF). For a discrete random variable, the CDF evaluated at \
some number x is the sum of the probabilities of all numbers less than or \
equal to x. For a continuous random variable, it is the integral of the PDF \
from -\[Infinity] to x. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " will provide CDF for any distribution it knows:  "
}], "Text",
 CellChangeTimes->{{3.584697296691525*^9, 3.584697476362776*^9}, {
  3.584698227918256*^9, 3.5846983873149757`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"N", "[", 
  RowBox[{"CDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"5", ",", " ", "2"}], "]"}], ",", " ", "7"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"5", ",", " ", "2"}], "]"}], ",", " ", "7"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.584698405116144*^9, 3.584698422149107*^9}, {
  3.585484489361618*^9, 3.5854845081722813`*^9}, {3.609682902890733*^9, 
  3.609682910131139*^9}, {3.609684013791562*^9, 3.609684042871924*^9}}],

Cell[BoxData["0.8413447460685429`"], "Output",
 CellChangeTimes->{{3.6096828968280363`*^9, 3.609682910588176*^9}, {
  3.609684015600896*^9, 3.609684043263793*^9}}],

Cell[BoxData["0.12098536225957168`"], "Output",
 CellChangeTimes->{{3.6096828968280363`*^9, 3.609682910588176*^9}, {
  3.609684015600896*^9, 3.609684043266242*^9}}]
}, Open  ]],

Cell["\<\
This is the probability of selecting a number less than or equal 7 from the \
specified distribution. Notice how different it is than the PDF of the same \
distribution evaluated at 7. We can also plot the CDF, which always ranges \
from 0 to 1:\
\>", "Text",
 CellChangeTimes->{{3.584698427774714*^9, 3.584698513042485*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"5", ",", " ", "2"}], "]"}], ",", " ", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "1"}], ",", " ", "11"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"5", ",", " ", "2"}], "]"}], ",", " ", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "1"}], ",", " ", "11"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.584698530975116*^9, 3.584698531573057*^9}, {
  3.5854844425365143`*^9, 3.585484469342917*^9}, {3.609682928050927*^9, 
  3.609682932179631*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
/h+4NE93
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-1, 11}, {0., 0.9986501014256944}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.609682918643807*^9, 3.609682932625599*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
Zuwfy8tEPv////z/AfieCM0=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-1, 11}, {0., 0.19947111893221017`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.609682918643807*^9, 3.60968293263912*^9}}]
}, Open  ]],

Cell["\<\
Compare this to the PDF we graphed for the same function above. You can see \
that the CDF rises steeply where the PDF is high and slowly where the PDF is \
low. This is because the PDF is the derivative of the CDF.\
\>", "Text",
 CellChangeTimes->{{3.584698547051714*^9, 3.584698611058814*^9}, 
   3.5854051567091637`*^9}],

Cell[CellGroupData[{

Cell["\<\
Practice: Cumulative Probability Distributions\
\>", "Subsubsubsection",
 CellChangeTimes->{{3.584383138605159*^9, 3.5843831563312807`*^9}, {
  3.5846986315654573`*^9, 3.584698643930005*^9}}],

Cell[TextData[{
 "Use ",
 StyleBox["DiscretePlot",
  FontFamily->"Courier",
  FontSize->14],
 " and ",
 StyleBox["CDF",
  FontFamily->"Courier"],
 " to plot the cumulative distribution function of the binomial distribution \
for 10 tosses of a coin with probability 0.8 of producing a heads. Compare to \
your plot of the probability function for the same distribution. To make the \
y-axes comparable, you may want to add the following option to ",
 StyleBox["DiscretePlot: PlotRange -> {0, 1}",
  FontFamily->"Courier",
  FontSize->14],
 ". Options like this are like optional arguments to the function -- they go \
after all the other arguments, separated by commas. See documentation on ",
 StyleBox["Plot",
  FontFamily->"Courier",
  FontSize->14],
 " for examples."
}], "ItemNumbered",
 CellChangeTimes->{{3.584699101016225*^9, 3.5846991047019978`*^9}, {
  3.585428955453547*^9, 3.585428972106011*^9}, {3.585484546172307*^9, 
  3.585484608107052*^9}, {3.58548465158629*^9, 3.58548466668517*^9}, {
  3.585484742864291*^9, 3.5854847628292294`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"DiscretePlot", "[", 
    RowBox[{
     RowBox[{"CDF", "[", 
      RowBox[{
       RowBox[{"BinomialDistribution", "[", 
        RowBox[{"10", ",", "0.8"}], "]"}], ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"DiscretePlot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"BinomialDistribution", "[", 
        RowBox[{"10", ",", "0.8"}], "]"}], ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6096831777839117`*^9, 3.6096832615931664`*^9}, {
  3.609683302800303*^9, 3.609683392072003*^9}, {3.609683437503169*^9, 
  3.609683441254825*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.24720000000000014`, 0.24, 0.6], {
      {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], LineBox[{},
        VertexColors->None]}, 
      {RGBColor[0.24720000000000014`, 0.24, 0.6], Opacity[0.2], 
       LineBox[{{{0., 1.0239999999999974`*^-7}, {0., 0}}, {{1., 
          4.198399999999992*^-6}, {1., 0}}, {{2., 0.00007792639999999986}, {
          2., 0}}, {{3., 0.0008643583999999986}, {3., 0}}, {{4., 
          0.006369382399999995}, {4., 0}}, {{5., 0.032793497599999964`}, {
          5., 0}}, {{6., 0.12087388159999987`}, {6., 0}}, {{7., 
          0.32220047360000004`}, {7., 0}}, {{8., 0.6241903615999993}, {
          8., 0}}, {{9., 0.8926258175999999}, {9., 0}}, {{10., 1.}, {10., 0}}},
        VertexColors->None]}}}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], {}, 
     PointBox[{{0., 1.0239999999999974`*^-7}, {1., 4.198399999999992*^-6}, {
      2., 0.00007792639999999986}, {3., 0.0008643583999999986}, {4., 
      0.006369382399999995}, {5., 0.032793497599999964`}, {6., 
      0.12087388159999987`}, {7., 0.32220047360000004`}, {8., 
      0.6241903615999993}, {9., 0.8926258175999999}, {10., 1.}}], {}}}, {
    {RGBColor[1, 0, 0], {
      {RGBColor[1, 0, 0], Opacity[0.2], LineBox[{},
        VertexColors->None]}, 
      {RGBColor[1, 0, 0], Opacity[0.2], 
       LineBox[{{{0., 1.0240000000000004`*^-7}, {0., 0}}, {{1., 
          4.095999999999993*^-6}, {1., 0}}, {{2., 0.00007372799999999966}, {
          2., 0}}, {{3., 0.000786432}, {3., 0}}, {{4., 
          0.005505024000000001}, {4., 0}}, {{5., 0.02642411519999998}, {
          5., 0}}, {{6., 0.08808038399999996}, {6., 0}}, {{7., 
          0.20132659200000028`}, {7., 0}}, {{8., 0.30198988799999893`}, {
          8., 0}}, {{9., 0.268435456}, {9., 0}}, {{10., 
          0.10737418240000005`}, {10., 0}}},
        VertexColors->None]}}}, 
    {RGBColor[1, 0, 0], {}, 
     PointBox[{{0., 1.0240000000000004`*^-7}, {1., 4.095999999999993*^-6}, {
      2., 0.00007372799999999966}, {3., 0.000786432}, {4., 
      0.005505024000000001}, {5., 0.02642411519999998}, {6., 
      0.08808038399999996}, {7., 0.20132659200000028`}, {8., 
      0.30198988799999893`}, {9., 0.268435456}, {10., 
      0.10737418240000005`}}], {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Method->{"MessagesHead" -> DiscretePlot},
  PlotRange->{{0, 10}, {0, 1.}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}}]], "Output",
 CellChangeTimes->{{3.609683385236479*^9, 3.609683392608714*^9}, 
   3.609683441648499*^9}]
}, Open  ]],

Cell[TextData[{
 "Now plot the CDF for the tosses of a coin with probability 0.7 of producing \
heads. Now try 0.6. Write a comment on what happens as you decrease the \
probability of heads. To make the graphs comparable, you may want to add the \
following option to ",
 StyleBox["DiscretePlot: PlotRange -> {0, 1}",
  FontFamily->"Courier",
  FontSize->14],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.584699101016225*^9, 3.584699163178584*^9}, {
  3.585428985349828*^9, 3.585428992997347*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DiscretePlot", "[", 
     RowBox[{
      RowBox[{"CDF", "[", 
       RowBox[{
        RowBox[{"BinomialDistribution", "[", 
         RowBox[{"10", ",", "0.7"}], "]"}], ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"DiscretePlot", "[", 
     RowBox[{
      RowBox[{"CDF", "[", 
       RowBox[{
        RowBox[{"BinomialDistribution", "[", 
         RowBox[{"10", ",", "0.6"}], "]"}], ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"DiscretePlot", "[", 
     RowBox[{
      RowBox[{"CDF", "[", 
       RowBox[{
        RowBox[{"BinomialDistribution", "[", 
         RowBox[{"10", ",", "0.5"}], "]"}], ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Magenta"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "As", " ", "the", " ", "probability", " ", "of", " ", "a", " ", "heads", 
     " ", "decreases"}], ",", " ", 
    RowBox[{"the", " ", "CDF"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.6096834646935043`*^9, 3.609683569977449*^9}, {
  3.609683655923514*^9, 3.609683675057685*^9}, {3.6096837945976753`*^9, 
  3.6096838223082867`*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0, 0, 1], {
      {RGBColor[0, 0, 1], Opacity[0.2], LineBox[{},
        VertexColors->None]}, 
      {RGBColor[0, 0, 1], Opacity[0.2], 
       LineBox[{{{0., 5.904900000000008*^-6}, {0., 0}}, {{1., 
          0.0001436859000000002}, {1., 0}}, {{2., 0.0015903864000000004`}, {
          2., 0}}, {{3., 0.010592078400000007`}, {3., 0}}, {{4., 
          0.04734898740000002}, {4., 0}}, {{5., 0.15026833260000014`}, {
          5., 0}}, {{6., 0.35038928160000016`}, {6., 0}}, {{7., 
          0.6172172136000004}, {7., 0}}, {{8., 0.8506916541}, {8., 0}}, {{9., 
          0.9717524751000001}, {9., 0}}, {{10., 1.}, {10., 0}}},
        VertexColors->None]}}}, 
    {RGBColor[0, 0, 1], {}, 
     PointBox[{{0., 5.904900000000008*^-6}, {1., 0.0001436859000000002}, {2., 
      0.0015903864000000004`}, {3., 0.010592078400000007`}, {4., 
      0.04734898740000002}, {5., 0.15026833260000014`}, {6., 
      0.35038928160000016`}, {7., 0.6172172136000004}, {8., 0.8506916541}, {
      9., 0.9717524751000001}, {10., 1.}}], {}}}, {
    {RGBColor[1, 0, 0], {
      {RGBColor[1, 0, 0], Opacity[0.2], LineBox[{},
        VertexColors->None]}, 
      {RGBColor[1, 0, 0], Opacity[0.2], 
       LineBox[{{{0., 0.00010485760000000013`}, {0., 0}}, {{1., 
          0.0016777216000000007`}, {1., 0}}, {{2., 0.012294553600000008`}, {
          2., 0}}, {{3., 0.0547618816}, {3., 0}}, {{4., 
          0.16623861760000003`}, {4., 0}}, {{5., 0.36689674240000003`}, {
          5., 0}}, {{6., 0.6177193984000002}, {6., 0}}, {{7., 0.8327102464}, {
          7., 0}}, {{8., 0.9536425984}, {8., 0}}, {{9., 0.9939533824}, {
          9., 0}}, {{10., 1.}, {10., 0}}},
        VertexColors->None]}}}, 
    {RGBColor[1, 0, 0], {}, 
     PointBox[{{0., 0.00010485760000000013`}, {1., 0.0016777216000000007`}, {
      2., 0.012294553600000008`}, {3., 0.0547618816}, {4., 
      0.16623861760000003`}, {5., 0.36689674240000003`}, {6., 
      0.6177193984000002}, {7., 0.8327102464}, {8., 0.9536425984}, {9., 
      0.9939533824}, {10., 1.}}], {}}}, {
    {RGBColor[1, 0, 1], {
      {RGBColor[1, 0, 1], Opacity[0.2], LineBox[{},
        VertexColors->None]}, 
      {RGBColor[1, 0, 1], Opacity[0.2], 
       LineBox[{{{0., 0.0009765625}, {0., 0}}, {{1., 0.0107421875}, {
          1., 0}}, {{2., 0.05468749999999999}, {2., 0}}, {{3., 
          0.17187499999999994`}, {3., 0}}, {{4., 0.37695312499999983`}, {
          4., 0}}, {{5., 0.6230468750000002}, {5., 0}}, {{6., 0.828125}, {
          6., 0}}, {{7., 0.9453125}, {7., 0}}, {{8., 0.9892578125}, {
          8., 0}}, {{9., 0.9990234375}, {9., 0}}, {{10., 1.}, {10., 0}}},
        VertexColors->None]}}}, 
    {RGBColor[1, 0, 1], {}, 
     PointBox[{{0., 0.0009765625}, {1., 0.0107421875}, {2., 
      0.05468749999999999}, {3., 0.17187499999999994`}, {4., 
      0.37695312499999983`}, {5., 0.6230468750000002}, {6., 0.828125}, {7., 
      0.9453125}, {8., 0.9892578125}, {9., 0.9990234375}, {10., 1.}}], {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Method->{"MessagesHead" -> DiscretePlot},
  PlotRange->{{0, 10}, {0, 1.}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}}]], "Output",
 CellChangeTimes->{
  3.609683675399321*^9, {3.609683795896462*^9, 3.609683822698813*^9}}]
}, Open  ]],

Cell["\<\
You can use the CDF to calculate the probability of a number sampled from the \
distribution falling in a certain interval. For example, the probability of a \
number being between 3 and 7 is simply the probability of its being below 7 \
minus the probability of its being below 3. That is, the value of the CDF at \
7 minus the value of the CDF at 3.\
\>", "Text",
 CellChangeTimes->{{3.584699179724372*^9, 3.584699362970335*^9}, {
  3.58540579186451*^9, 3.585405792248815*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"5", ",", " ", "2"}], "]"}], ",", " ", "7"}], "]"}], "]"}], " ",
   "-", " ", 
  RowBox[{"N", "[", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"5", ",", " ", "2"}], "]"}], ",", " ", "3"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.584699370988934*^9, 3.5846993802933483`*^9}}],

Cell[BoxData["0.6826894921370859`"], "Output",
 CellChangeTimes->{3.6096836877202883`*^9}]
}, Open  ]],

Cell[TextData[{
 "But you don\[CloseCurlyQuote]t actually have to subtract the CDF values \
explicitly -- ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " does this and much more with the function ",
 StyleBox["Probability",
  FontFamily->"Courier"],
 ". "
}], "Text",
 CellChangeTimes->{{3.58469940618897*^9, 3.584699520202217*^9}, 
   3.5854074579903193`*^9, {3.585429036747788*^9, 3.585429039800228*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Probability", "[", 
    RowBox[{
     RowBox[{"z", "<", "7"}], ",", 
     RowBox[{"z", " ", "\[Distributed]", " ", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"5", ",", " ", "2"}], "]"}]}]}], "]"}], "]"}], " "}]], "Input",\

 CellChangeTimes->{{3.58469954292702*^9, 3.584699544348127*^9}, {
   3.5846995805982637`*^9, 3.5846995967583027`*^9}, {3.58469983193219*^9, 
   3.584699877412569*^9}, {3.5846999766947527`*^9, 3.58469999369425*^9}, {
   3.5854060520906553`*^9, 3.585406096107877*^9}, 3.585406302390272*^9}],

Cell[BoxData["0.8413447460685429`"], "Output",
 CellChangeTimes->{3.6096836916685762`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Probability", "[", 
   RowBox[{
    RowBox[{"3", "<", "z", "<", "7"}], ",", 
    RowBox[{"z", " ", "\[Distributed]", " ", 
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"5", ",", " ", "2"}], "]"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.58469954292702*^9, 3.584699544348127*^9}, {
  3.5846995805982637`*^9, 3.5846995967583027`*^9}, {3.58469983193219*^9, 
  3.584699877412569*^9}, {3.5846999766947527`*^9, 3.58469999369425*^9}, {
  3.584700528637967*^9, 3.584700536389813*^9}}],

Cell[BoxData["0.6826894921370859`"], "Output",
 CellChangeTimes->{3.6096836961012363`*^9}]
}, Open  ]],

Cell[TextData[{
 "Notice that these are the same numbers we got by using ",
 StyleBox["CDF",
  FontFamily->"Courier"],
 ". The first argument to ",
 StyleBox["Probability",
  FontFamily->"Courier"],
 " is a predicate -- something that evaluates to True or False -- involving \
an undefined variable. The second argument gives the distribution of that \
variable. The little squiggle, \[Distributed], is read \
\[OpenCurlyDoubleQuote]is distributed according to\[CloseCurlyDoubleQuote] \
and can be obtained by typing the escape key, \[OpenCurlyDoubleQuote]dist\
\[CloseCurlyDoubleQuote], and escape again. What\[CloseCurlyQuote]s cool \
about ",
 StyleBox["Probability",
  FontFamily->"Courier"],
 " is that you can give it complicated predicates, as in "
}], "Text",
 CellChangeTimes->{{3.584700020584186*^9, 3.5847000595068617`*^9}, {
  3.5847001499029922`*^9, 3.584700153861115*^9}, {3.584700276541069*^9, 
  3.584700374867017*^9}, {3.584700495142702*^9, 3.584700511164365*^9}, {
  3.584700543755582*^9, 3.584700573931123*^9}, {3.585406337285797*^9, 
  3.585406389020859*^9}, {3.585406618211502*^9, 3.585406631514522*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Probability", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"2", "<", 
      RowBox[{"Sqrt", "[", "z", "]"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"z", "^", "3"}], "<", "125"}]}], ",", 
    RowBox[{"z", " ", "\[Distributed]", " ", 
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"5", ",", " ", "2"}], "]"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.584700592204899*^9, 3.5847006637408123`*^9}}],

Cell[BoxData["0.19146246127401312`"], "Output",
 CellChangeTimes->{3.60968372691658*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6096868086622562`*^9, 3.609686822882741*^9}}],

Cell[TextData[{
 "This gives the probability of selecting a number whose square root is \
greater than two and whose cube is less than 125. By using ",
 StyleBox["&&",
  FontFamily->"Courier New"],
 " (and) and ",
 StyleBox["||",
  FontFamily->"Courier New"],
 " (or) you can make very complex predicates to calculate the probability of. \
One thing to beware of is that if you try this with a variable that has a \
defined value ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " will simply replace it by its value before evaluating the rest of the \
expression. This doesn\[CloseCurlyQuote]t do what you want -- it usually \
returns a probably of 1 or 0, depending on whether the value of the variable \
does or does not satisfy your predicate. So you want to make sure your \
variable is colored blue, indicating undefined, when you use ",
 StyleBox["Probability",
  FontFamily->"Courier"],
 ".\n\nIf you\[CloseCurlyQuote]re interested in getting out decimal numbers \
rather than big symbolic expressions, you can use the function ",
 StyleBox["NProbability",
  FontFamily->"Courier"],
 ", which in some cases may be faster than computing a symbolic expression \
for the probability first and then passing it to ",
 StyleBox["N",
  FontFamily->"Courier"],
 "."
}], "Text",
 CellChangeTimes->{{3.584700673212648*^9, 3.58470090781087*^9}, {
  3.584728109694655*^9, 3.5847281456248817`*^9}, {3.584728227810615*^9, 
  3.584728298592731*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Practice: Using ",
 StyleBox["Probability",
  FontFamily->"Courier",
  FontWeight->"Plain"]
}], "Subsubsubsection",
 CellChangeTimes->{{3.584383138605159*^9, 3.5843831563312807`*^9}, {
  3.5846986315654573`*^9, 3.584698643930005*^9}, {3.584700987669651*^9, 
  3.584700991698124*^9}}],

Cell[TextData[{
 "Suppose you \[OpenCurlyDoubleQuote]flip a coin\[CloseCurlyDoubleQuote] that \
has probability 0.75 of producing heads 20 times and add up the number of \
heads actually produced. You then square that number. Use ",
 StyleBox["Probability",
  FontFamily->"Courier New"],
 " to figure out the probability that the result will lie in the interval \
between 20 and 100."
}], "Text",
 CellChangeTimes->{{3.5847010043313847`*^9, 3.584701006426652*^9}, {
   3.584701064475349*^9, 3.5847011640190353`*^9}, 3.585407473453524*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NProbability", "[", 
  RowBox[{
   RowBox[{"20", "\[LessEqual]", 
    SuperscriptBox["z", "2"], "\[LessEqual]", "100"}], ",", 
   RowBox[{"z", "\[Distributed]", 
    RowBox[{"BinomialDistribution", "[", 
     RowBox[{"20", ",", ".75"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.609685525378291*^9, 3.609685676982929*^9}, {
  3.609685892653028*^9, 3.609685913996296*^9}, {3.60968656859713*^9, 
  3.60968657611814*^9}, {3.609686764292306*^9, 3.6096868012039824`*^9}, {
  3.6096868379639463`*^9, 3.609686848075289*^9}, {3.609686899962974*^9, 
  3.6096869199696198`*^9}, {3.609686983610651*^9, 3.6096869866490927`*^9}, {
  3.609687332423451*^9, 3.6096873344465218`*^9}}],

Cell[BoxData["0.013864030412150896`"], "Output",
 CellChangeTimes->{
  3.6096868485544157`*^9, {3.6096869024042797`*^9, 3.609686920576638*^9}, 
   3.609686989057968*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
InitializationCellWarning->False,
WindowSize->{769, 756},
WindowMargins->{{Automatic, -10}, {130, Automatic}},
ShowSelection->True,
FrontEndVersion->"9.0 for Linux x86 (64-bit) (January 25, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 240, 7, 117, "Section"],
Cell[822, 31, 419, 7, 71, "Text"],
Cell[CellGroupData[{
Cell[1266, 42, 195, 6, 46, "Subsection"],
Cell[1464, 50, 782, 17, 92, "Text"],
Cell[CellGroupData[{
Cell[2271, 71, 372, 9, 32, "Input"],
Cell[2646, 82, 2219, 75, 99, "Output"]
}, Open  ]],
Cell[4880, 160, 1401, 22, 172, "Text"],
Cell[CellGroupData[{
Cell[6306, 186, 261, 6, 32, "Input"],
Cell[6570, 194, 117, 3, 32, "Output"]
}, Open  ]],
Cell[6702, 200, 1025, 25, 155, "Text"],
Cell[CellGroupData[{
Cell[7752, 229, 367, 8, 32, "Input"],
Cell[8122, 239, 1185, 39, 55, "Output"]
}, Open  ]],
Cell[9322, 281, 977, 25, 135, "Text"],
Cell[CellGroupData[{
Cell[10324, 310, 359, 8, 32, "Input"],
Cell[10686, 320, 1157, 39, 55, "Output"]
}, Open  ]],
Cell[11858, 362, 1335, 26, 194, "Text"],
Cell[CellGroupData[{
Cell[13218, 392, 138, 2, 32, "Input"],
Cell[13359, 396, 71, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13467, 402, 139, 2, 32, "Input"],
Cell[13609, 406, 71, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13717, 412, 420, 9, 32, "Input"],
Cell[14140, 423, 73, 1, 32, "Output"]
}, Open  ]],
Cell[14228, 427, 884, 17, 92, "Text"],
Cell[CellGroupData[{
Cell[15137, 448, 523, 11, 32, "Input"],
Cell[15663, 461, 75, 1, 32, "Output"]
}, Open  ]],
Cell[15753, 465, 817, 16, 92, "Text"],
Cell[16573, 483, 399, 8, 71, "Text"],
Cell[CellGroupData[{
Cell[16997, 495, 167, 3, 29, "Subsubsubsection"],
Cell[17167, 500, 922, 16, 111, "Text"],
Cell[CellGroupData[{
Cell[18114, 520, 1246, 33, 179, "ItemNumbered"],
Cell[19363, 555, 406, 13, 69, "ItemNumbered"],
Cell[19772, 570, 169, 3, 30, "ItemNumbered"]
}, Open  ]],
Cell[19956, 576, 423, 7, 71, "Text"],
Cell[CellGroupData[{
Cell[20404, 587, 1166, 34, 166, "Input"],
Cell[21573, 623, 138, 2, 65, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21772, 632, 134, 1, 45, "Subsection"],
Cell[21909, 635, 475, 11, 73, "Text"],
Cell[CellGroupData[{
Cell[22409, 650, 533, 11, 32, "Input"],
Cell[22945, 663, 4235, 123, 231, "Output"]
}, Open  ]],
Cell[27195, 789, 971, 14, 171, "Text"],
Cell[28169, 805, 441, 11, 73, "Text"],
Cell[CellGroupData[{
Cell[28635, 820, 370, 9, 32, "Input"],
Cell[29008, 831, 473, 15, 32, "Output"]
}, Open  ]],
Cell[29496, 849, 223, 6, 32, "Text"],
Cell[CellGroupData[{
Cell[29744, 859, 271, 7, 32, "Input"],
Cell[30018, 868, 805, 27, 55, "Output"]
}, Open  ]],
Cell[30838, 898, 540, 12, 72, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31415, 915, 126, 1, 45, "Subsection"],
Cell[31544, 918, 613, 12, 112, "Text"],
Cell[CellGroupData[{
Cell[32182, 934, 196, 4, 32, "Input"],
Cell[32381, 940, 171, 4, 32, "Output"]
}, Open  ]],
Cell[32567, 947, 433, 9, 72, "Text"],
Cell[CellGroupData[{
Cell[33025, 960, 289, 6, 32, "Input"],
Cell[33317, 968, 96, 1, 32, "Output"]
}, Open  ]],
Cell[33428, 972, 336, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[33789, 982, 261, 6, 32, "Input"],
Cell[34053, 990, 145, 3, 32, "Output"]
}, Open  ]],
Cell[34213, 996, 442, 9, 72, "Text"],
Cell[CellGroupData[{
Cell[34680, 1009, 428, 11, 32, "Input"],
Cell[35111, 1022, 461, 14, 32, "Output"]
}, Open  ]],
Cell[35587, 1039, 338, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[35950, 1049, 285, 6, 32, "Input"],
Cell[36238, 1057, 1150, 17, 99, "Output"]
}, Open  ]],
Cell[37403, 1077, 209, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[37637, 1085, 219, 4, 32, "Input"],
Cell[37859, 1091, 540, 17, 32, "Output"]
}, Open  ]],
Cell[38414, 1111, 366, 7, 51, "Text"],
Cell[CellGroupData[{
Cell[38805, 1122, 237, 5, 32, "Input"],
Cell[39045, 1129, 670, 12, 77, "Output"]
}, Open  ]],
Cell[39730, 1144, 270, 5, 31, "Text"],
Cell[CellGroupData[{
Cell[40025, 1153, 332, 8, 32, "Input"],
Cell[40360, 1163, 2586, 51, 241, "Output"]
}, Open  ]],
Cell[42961, 1217, 217, 4, 31, "Text"],
Cell[CellGroupData[{
Cell[43203, 1225, 478, 12, 32, "Input"],
Cell[43684, 1239, 8387, 145, 253, "Output"]
}, Open  ]],
Cell[52086, 1387, 506, 12, 52, "Text"],
Cell[CellGroupData[{
Cell[52617, 1403, 226, 5, 32, "Input"],
Cell[52846, 1410, 181, 5, 55, "Output"]
}, Open  ]],
Cell[53042, 1418, 287, 8, 53, "Text"],
Cell[CellGroupData[{
Cell[53354, 1430, 262, 7, 32, "Input"],
Cell[53619, 1439, 88, 1, 32, "Output"]
}, Open  ]],
Cell[53722, 1443, 303, 9, 52, "Text"],
Cell[CellGroupData[{
Cell[54050, 1456, 160, 3, 29, "Subsubsubsection"],
Cell[CellGroupData[{
Cell[54235, 1463, 578, 12, 69, "ItemNumbered"],
Cell[54816, 1477, 423, 7, 30, "ItemNumbered"],
Cell[55242, 1486, 882, 19, 69, "ItemNumbered"]
}, Open  ]],
Cell[56139, 1508, 706, 17, 55, InheritFromParent],
Cell[56848, 1527, 6004, 182, 241, "Output"],
Cell[62855, 1711, 1714, 34, 240, "Output"],
Cell[64572, 1747, 69, 1, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64678, 1753, 155, 2, 35, "Subsubsection"],
Cell[64836, 1757, 657, 12, 111, "Text"],
Cell[CellGroupData[{
Cell[65518, 1773, 603, 15, 55, "Input"],
Cell[66124, 1790, 163, 2, 32, "Output"],
Cell[66290, 1794, 164, 2, 32, "Output"]
}, Open  ]],
Cell[66469, 1799, 335, 6, 71, "Text"],
Cell[CellGroupData[{
Cell[66829, 1809, 796, 22, 55, "Input"],
Cell[67628, 1833, 6807, 119, 253, "Output"],
Cell[74438, 1954, 8410, 145, 253, "Output"]
}, Open  ]],
Cell[82863, 2102, 333, 6, 71, "Text"],
Cell[CellGroupData[{
Cell[83221, 2112, 201, 4, 29, "Subsubsubsection"],
Cell[83425, 2118, 1052, 25, 147, "ItemNumbered"],
Cell[CellGroupData[{
Cell[84502, 2147, 873, 23, 99, "Input"],
Cell[85378, 2172, 2646, 51, 245, "Output"]
}, Open  ]],
Cell[88039, 2226, 500, 11, 88, "ItemNumbered"],
Cell[CellGroupData[{
Cell[88564, 2241, 1587, 42, 209, "Input"],
Cell[90154, 2285, 3361, 65, 245, "Output"]
}, Open  ]],
Cell[93530, 2353, 489, 8, 91, "Text"],
Cell[CellGroupData[{
Cell[94044, 2365, 472, 14, 55, "Input"],
Cell[94519, 2381, 90, 1, 32, "Output"]
}, Open  ]],
Cell[94624, 2385, 413, 11, 52, "Text"],
Cell[CellGroupData[{
Cell[95062, 2400, 584, 13, 32, "Input"],
Cell[95649, 2415, 90, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95776, 2421, 541, 11, 32, "Input"],
Cell[96320, 2434, 90, 1, 32, "Output"]
}, Open  ]],
Cell[96425, 2438, 1125, 22, 134, "Text"],
Cell[CellGroupData[{
Cell[97575, 2464, 464, 12, 55, "Input"],
Cell[98042, 2478, 88, 1, 32, "Output"]
}, Open  ]],
Cell[98145, 2482, 141, 2, 32, "Input"],
Cell[98289, 2486, 1446, 32, 255, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99772, 2523, 301, 8, 30, "Subsubsubsection"],
Cell[100076, 2533, 538, 10, 92, "Text"],
Cell[CellGroupData[{
Cell[100639, 2547, 699, 13, 37, "Input"],
Cell[101341, 2562, 169, 3, 65, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
