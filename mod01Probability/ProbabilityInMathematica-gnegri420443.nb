(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     94945,       2406]
NotebookOptionsPosition[     90378,       2251]
NotebookOutlinePosition[     90765,       2268]
CellTagsIndexPosition[     90722,       2265]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Using ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " for probability"
}], "Section",
 CellChangeTimes->{{3.5841264074948*^9, 3.584126429874805*^9}, {
  3.58412654460423*^9, 3.584126545554195*^9}, {3.618584346784507*^9, 
  3.618584347375312*^9}}],

Cell["\<\
In this notebook, we will provide the input cells for the examples -- you \
should evaluate each input cell to see the outputs. In some cases, later \
examples may not work if you haven\[CloseCurlyQuote]t evaluated all the \
previous input cells, so please evaluate each example.\
\>", "Text",
 CellChangeTimes->{{3.585425130149922*^9, 3.5854251400352373`*^9}, {
  3.585425346362123*^9, 3.58542535362204*^9}}],

Cell[CellGroupData[{

Cell["Working with probability distributions", "Subsection",
 CellChangeTimes->{{3.584378008775268*^9, 3.584378022363152*^9}}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " knows about a lot of families of probability distributions. One of the \
simplest is the discrete uniform distribution. For example, ",
 StyleBox["DiscreteUniformDistribution[{1,10}] ",
  FontFamily->"Courier"],
 "represents the uniform distribution on the integers from 1 to 10 -- the \
distribution under which all those integers are equally likely to be chosen."
}], "Text",
 CellChangeTimes->{{3.584378026205285*^9, 3.584378136491639*^9}, {
  3.5843781669315233`*^9, 3.584378205310512*^9}, {3.584378235491486*^9, 
  3.5843783110513153`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscreteUniformDistribution", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "10"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.5843781864454947`*^9, 3.584378186447949*^9}}],

Cell[BoxData[
 RowBox[{"DiscreteUniformDistribution", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "10"}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.61876289104441*^9}]
}, Open  ]],

Cell[TextData[{
 "As you can see, it evaluates to itself -- there is no way to simplify or \
reduce it. It doesn\[CloseCurlyQuote]t do anything until you pass it in to \
another function, such as ",
 StyleBox["RandomVariate",
  FontFamily->"Courier"],
 ". RandomVariate  samples from a distribution, as in"
}], "Text",
 CellChangeTimes->{{3.584378326467071*^9, 3.584378412474815*^9}, {
  3.584696154212379*^9, 3.584696157586411*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVariate", "[", 
  RowBox[{"DiscreteUniformDistribution", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "10"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.584378416210537*^9, 3.5843784198033733`*^9}, {
  3.584378451592374*^9, 3.5843784623512707`*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.618762891156683*^9}]
}, Open  ]],

Cell["\<\
This in essence \[OpenCurlyDoubleQuote]simulates\[CloseCurlyDoubleQuote] a \
process that follows the distribution you pass in. You can give the number of \
samples you want as a second argument:\
\>", "Text",
 CellChangeTimes->{{3.584378480589398*^9, 3.584378547619459*^9}, {
  3.5846961785484324`*^9, 3.584696191771069*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVariate", "[", 
  RowBox[{
   RowBox[{"DiscreteUniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "10"}], "}"}], "]"}], ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.58437856658885*^9, 3.584378567541295*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "7", ",", "7", ",", "7", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.618762891200445*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInteger", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "10"}], "}"}], ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.618584417648806*^9, 3.618584442200295*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8", ",", "5", ",", "8", ",", "2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.618762891250517*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["RandomVariate",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " gets more interesting and useful when the distribution isn't uniform. For \
example, ",
 StyleBox["EmpiricalDistribution",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " allows you to specify the probability of each outcome explicitly, as in"
}], "Text",
 CellChangeTimes->{{3.584378595686606*^9, 3.584378626986724*^9}, {
  3.5843789159812*^9, 3.584378916483268*^9}, {3.584379037843196*^9, 
  3.584379059611329*^9}, {3.6185843903439617`*^9, 3.618584415435638*^9}, {
  3.618584461302215*^9, 3.6185844644195833`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eDist", "=", 
  RowBox[{"EmpiricalDistribution", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{".2", ",", ".6", ",", ".1", ",", ".1"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.618762950575502*^9, 3.618762952761476*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DataDistribution",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQ/Xmu+cn//+/vZ4CCC1M/TWa6cwfO38s482xKyU04
/7jcgZ2dbtfg/Je6ZtOXalyG802T9I879p2H8y+e+nxkr91JOL9Xun/Bj/RD
+2fNBIGT9p8WTNjrlLQdyr9pXzaPm8Nu+1I4/+nEnefMz7Taw/ht95KiXc6v
g/NfPvaf8/Dqbjhfw2XB8sCVR+B8JRNxGd0vp+D8f3Ojb6o8vgDnX14fY2xj
cwXO7xG4e2tC9HU43/RvoXDbvltw/kGLtpk7nt+F8+Ubwm+4rnpgb2IMAo/t
L2W5vN4c8QjO//7nwxKHV4/hfJGr6svnzn0K5y8KkQuQNHkO56tE5zbMPPQC
zp+33O3ny6JXcH7X7PsSkWxv4Py8q0yNM3a/hfPdptUV3Ml4D+d7/I9pnl/z
Ac7PvLb/047Qj3C+c2PT1kSFT3D+9PyPu3meI/jPG5Y+m7/vM5z/IXVnyqH2
L3D+11wh9rOJX+H8zZ6n/6TpfoOGz0v71xkGZsxfEXz51bcmt5/9DufzHHzi
Mnv6Dzj/609jqelFP+0hqeWDfUSZvvFUz19wfsmxrvlKQr/h/B5LbYMZrxH8
2AZtkbnb/sD5K7huWC+p/Qvnv99+sn1y6D84/52FtLqQ/H84v/a576f//3Hx
GRgA8dtlww==
           "], {{{}, 
             {GrayLevel[0.85], EdgeForm[None], 
              GraphicsGroupBox[
               PolygonBox[{{7, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40,
                 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 
                24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9,
                 8}}]]}, {}, {}}, {{}, {}, 
             {GrayLevel[0.55], AbsoluteThickness[1.5], Opacity[1.], 
              LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
               17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,
                33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 
               48, 49, 50}]}}}],
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{0, 0},
          Background->GrayLevel[0.93],
          BaseStyle->{FontFamily -> "Arial"},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          LabelStyle->{FontFamily -> "Arial"},
          Method->{"ScalingFunctions" -> None, "AxesInFront" -> True},
          PlotRange->{All, All},
          PlotRangeClipping->True,
          PlotRangePadding->{{0, 0}, {0, 0.1}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Empirical\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["4",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQ/Xmu+cn//+/vZ4CCC1M/TWa6cwfO38s482xKyU04
/7jcgZ2dbtfg/Je6ZtOXalyG802T9I879p2H8y+e+nxkr91JOL9Xun/Bj/RD
+2fNBIGT9p8WTNjrlLQdyr9pXzaPm8Nu+1I4/+nEnefMz7Taw/ht95KiXc6v
g/NfPvaf8/Dqbjhfw2XB8sCVR+B8JRNxGd0vp+D8f3Ojb6o8vgDnX14fY2xj
cwXO7xG4e2tC9HU43/RvoXDbvltw/kGLtpk7nt+F8+Ubwm+4rnpgb2IMAo/t
L2W5vN4c8QjO//7nwxKHV4/hfJGr6svnzn0K5y8KkQuQNHkO56tE5zbMPPQC
zp+33O3ny6JXcH7X7PsSkWxv4Py8q0yNM3a/hfPdptUV3Ml4D+d7/I9pnl/z
Ac7PvLb/047Qj3C+c2PT1kSFT3D+9PyPu3meI/jPG5Y+m7/vM5z/IXVnyqH2
L3D+11wh9rOJX+H8zZ6n/6TpfoOGz0v71xkGZsxfEXz51bcmt5/9DufzHHzi
Mnv6Dzj/609jqelFP+0hqeWDfUSZvvFUz19wfsmxrvlKQr/h/B5LbYMZrxH8
2AZtkbnb/sD5K7huWC+p/Qvnv99+sn1y6D84/52FtLqQ/H84v/a576f//3Hx
GRgA8dtlww==
           "], {{{}, 
             {GrayLevel[0.85], EdgeForm[None], 
              GraphicsGroupBox[
               PolygonBox[{{7, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40,
                 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 
                24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9,
                 8}}]]}, {}, {}}, {{}, {}, 
             {GrayLevel[0.55], AbsoluteThickness[1.5], Opacity[1.], 
              LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
               17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,
                33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 
               48, 49, 50}]}}}],
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{0, 0},
          Background->GrayLevel[0.93],
          BaseStyle->{FontFamily -> "Arial"},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          LabelStyle->{FontFamily -> "Arial"},
          Method->{"ScalingFunctions" -> None, "AxesInFront" -> True},
          PlotRange->{All, All},
          PlotRangeClipping->True,
          PlotRangePadding->{{0, 0}, {0, 0.1}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Empirical\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["4",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Input dimension: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Domain: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              RowBox[{"{", 
               RowBox[{"1", ",", "4"}], "}"}],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  DataDistribution[
  "Empirical", {{0.2, 0.6, 0.1, 0.1}, {1, 2, 3, 4}, False}, 1, 4],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.61876295550028*^9}]
}, Open  ]],

Cell["\<\
Now if we sample from it, we\[CloseCurlyQuote]ll get a lot more 2\
\[CloseCurlyQuote]s than anything else, then 1\[CloseCurlyQuote]s, and \
occasional 3\[CloseCurlyQuote]s and 4\[CloseCurlyQuote]s.  \
\>", "Text",
 CellChangeTimes->{{3.584379175916274*^9, 3.584379237258976*^9}, {
  3.584379651010683*^9, 3.584379665938959*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"RandomVariate", "[", 
   RowBox[{"eDist", ",", "100"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.584379240656541*^9, 3.5843792624688597`*^9}, {
  3.584379324757411*^9, 3.584379326364738*^9}, {3.584379561255114*^9, 
  3.584379583141326*^9}, {3.6185844969768*^9, 3.618584497765922*^9}, {
  3.618762916712754*^9, 3.618762924018119*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "4", ",", "4", ",", "1", ",", "2", ",", "3", ",", "1", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "4", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "3", ",", "2", ",", "3", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "4", ",", 
   "2", ",", "2", ",", "1", ",", "4", ",", "1", ",", "2", ",", "2", ",", "2", 
   ",", "4", ",", "2", ",", "1", ",", "2", ",", "3", ",", "2", ",", "2", ",", 
   "2", ",", "3", ",", "2", ",", "4", ",", "2", ",", "1", ",", "1", ",", "1", 
   ",", "2", ",", "2", ",", "1", ",", "1", ",", "2", ",", "2", ",", "1", ",", 
   "2", ",", "2", ",", "4", ",", "2", ",", "1", ",", "3", ",", "2", ",", "1", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", 
   "4", ",", "2", ",", "4", ",", "2", ",", "2", ",", "2", ",", "2", ",", "3", 
   ",", "2", ",", "2", ",", "1", ",", "1", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "3", ",", "2", ",", "2", ",", "1", ",", "3", ",", "1", ",", "4", 
   ",", "2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.618762891588043*^9, 3.61876291983029*^9}, 
   3.61876295943919*^9}]
}, Open  ]],

Cell["\<\
You can also just pass in a list and it will use the frequencies from the \
list to generate an empirical distribution:\
\>", "Text",
 CellChangeTimes->{{3.584379284091758*^9, 3.584379308907339*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eDist2", "=", 
  RowBox[{"EmpiricalDistribution", "[", "data", "]"}]}]], "Input",
 CellChangeTimes->{{3.584379350722941*^9, 3.584379353862749*^9}, {
  3.584379397902841*^9, 3.5843794046304407`*^9}, {3.618584538705145*^9, 
  3.618584539847375*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DataDistribution",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQ/Xmu+cn//+/vZ4CCC1M/TWa6cwfO38s482xKyU04
/7jcgZ2dbtfg/Je6ZtOXalyG802T9I879p2H8y+e+nxkr91JOL9Xun/Bj/RD
+2fNBIGT9p8WTNjrlLQdyr9pXzaPm8Nu+1I4/+nEnefMz7Taw/ht95KiXc6v
g/NfPvaf8/Dqbjhfw2XB8sCVR+B8JRNxGd0vp+D8f3Ojb6o8vgDnX14fY2xj
cwXO7xG4e2tC9HU43/RvoXDbvltw/kGLtpk7nt+F8+Ubwm+4rnpgb2IMAo/t
L2W5vN4c8QjO//7nwxKHV4/hfJGr6svnzn0K5y8KkQuQNHkO56tE5zbMPPQC
zp+33O3ny6JXcH7X7PsSkWxv4Py8q0yNM3a/hfPdptUV3Ml4D+d7/I9pnl/z
Ac7PvLb/047Qj3C+c2PT1kSFT3D+9PyPu3meI/jPG5Y+m7/vM5z/IXVnyqH2
L3D+11wh9rOJX+H8zZ6n/6TpfoOGz0v71xkGZsxfEXz51bcmt5/9DufzHHzi
Mnv6Dzj/609jqelFP+0hqeWDfUSZvvFUz19wfsmxrvlKQr/h/B5LbYMZrxH8
2AZtkbnb/sD5K7huWC+p/Qvnv99+sn1y6D84/52FtLqQ/H84v/a576f//3Hx
GRgA8dtlww==
           "], {{{}, 
             {GrayLevel[0.85], EdgeForm[None], 
              GraphicsGroupBox[
               PolygonBox[{{7, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40,
                 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 
                24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9,
                 8}}]]}, {}, {}}, {{}, {}, 
             {GrayLevel[0.55], AbsoluteThickness[1.5], Opacity[1.], 
              LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
               17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,
                33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 
               48, 49, 50}]}}}],
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{0, 0},
          Background->GrayLevel[0.93],
          BaseStyle->{FontFamily -> "Arial"},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          LabelStyle->{FontFamily -> "Arial"},
          Method->{"ScalingFunctions" -> None, "AxesInFront" -> True},
          PlotRange->{All, All},
          PlotRangeClipping->True,
          PlotRangePadding->{{0, 0}, {0, 0.1}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Empirical\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["100",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQ/Xmu+cn//+/vZ4CCC1M/TWa6cwfO38s482xKyU04
/7jcgZ2dbtfg/Je6ZtOXalyG802T9I879p2H8y+e+nxkr91JOL9Xun/Bj/RD
+2fNBIGT9p8WTNjrlLQdyr9pXzaPm8Nu+1I4/+nEnefMz7Taw/ht95KiXc6v
g/NfPvaf8/Dqbjhfw2XB8sCVR+B8JRNxGd0vp+D8f3Ojb6o8vgDnX14fY2xj
cwXO7xG4e2tC9HU43/RvoXDbvltw/kGLtpk7nt+F8+Ubwm+4rnpgb2IMAo/t
L2W5vN4c8QjO//7nwxKHV4/hfJGr6svnzn0K5y8KkQuQNHkO56tE5zbMPPQC
zp+33O3ny6JXcH7X7PsSkWxv4Py8q0yNM3a/hfPdptUV3Ml4D+d7/I9pnl/z
Ac7PvLb/047Qj3C+c2PT1kSFT3D+9PyPu3meI/jPG5Y+m7/vM5z/IXVnyqH2
L3D+11wh9rOJX+H8zZ6n/6TpfoOGz0v71xkGZsxfEXz51bcmt5/9DufzHHzi
Mnv6Dzj/609jqelFP+0hqeWDfUSZvvFUz19wfsmxrvlKQr/h/B5LbYMZrxH8
2AZtkbnb/sD5K7huWC+p/Qvnv99+sn1y6D84/52FtLqQ/H84v/a576f//3Hx
GRgA8dtlww==
           "], {{{}, 
             {GrayLevel[0.85], EdgeForm[None], 
              GraphicsGroupBox[
               PolygonBox[{{7, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40,
                 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 
                24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9,
                 8}}]]}, {}, {}}, {{}, {}, 
             {GrayLevel[0.55], AbsoluteThickness[1.5], Opacity[1.], 
              LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
               17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,
                33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 
               48, 49, 50}]}}}],
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{0, 0},
          Background->GrayLevel[0.93],
          BaseStyle->{FontFamily -> "Arial"},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          LabelStyle->{FontFamily -> "Arial"},
          Method->{"ScalingFunctions" -> None, "AxesInFront" -> True},
          PlotRange->{All, All},
          PlotRangeClipping->True,
          PlotRangePadding->{{0, 0}, {0, 0.1}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Type: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Empirical\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["100",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Input dimension: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Domain: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              RowBox[{"{", 
               RowBox[{"1", ",", "4"}], "}"}],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  DataDistribution["Empirical", {{
     Rational[19, 100], 
     Rational[3, 5], 
     Rational[1, 10], 
     Rational[11, 100]}, {1, 2, 3, 4}, False}, 1, 100],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.618762891799446*^9, 3.618762964144201*^9}]
}, Open  ]],

Cell["\<\
Here\[CloseCurlyQuote]s an example of sampling approximate reals from a \
continuous distribution -- the normal (Gaussian) distribution with mean 5 and \
standard deviation 2:\
\>", "Text",
 CellChangeTimes->{{3.584379779843131*^9, 3.584379809738839*^9}, {
  3.5843800581891603`*^9, 3.58438008125887*^9}, {3.5843801168833847`*^9, 
  3.584380162307317*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVariate", "[", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"5", ",", " ", "2"}], "]"}], ",", " ", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.584380083668263*^9, 3.584380106300906*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5.701797712873122`", ",", "6.212548049750827`", ",", "6.628155296743682`", 
   ",", "7.067524914071888`", ",", "3.7314670804786383`", ",", 
   "3.6747474261807658`", ",", "5.509368146100231`", ",", 
   "2.3682603270636235`", ",", "5.724556103908247`", ",", 
   "6.376743542086151`", ",", "4.034770632712445`", ",", 
   "2.8862434118743376`", ",", "4.75444992186785`", ",", 
   "0.8353756025288445`", ",", "5.485935241653863`", ",", 
   "5.0426146472482865`", ",", "7.741785392324141`", ",", 
   "1.820042474277808`", ",", "2.0191292618815706`", ",", 
   "1.539211307952653`"}], "}"}]], "Output",
 CellChangeTimes->{3.618762891878361*^9, 3.618762966830635*^9}]
}, Open  ]],

Cell["\<\
We can plot a histogram of a larger sample to see the familiar \
\[OpenCurlyDoubleQuote]bell curve\[CloseCurlyDoubleQuote] shape:\
\>", "Text",
 CellChangeTimes->{{3.584380183051044*^9, 3.584380199786744*^9}, {
  3.5843809629948587`*^9, 3.584380974347088*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"RandomVariate", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"5", ",", " ", "2"}], "]"}], ",", " ", "5000"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.584380210854854*^9, 3.584380261325149*^9}, {
  3.5843809193913403`*^9, 3.584380942597533*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604, 0.49470040000000004`], EdgeForm[{Opacity[
    0.48999999999999994`], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604, 0.49470040000000004`], EdgeForm[{Opacity[
     0.48999999999999994`], Thickness[Small]}], 
     RectangleBox[{-2.5, 0}, {-2., 2},
      RoundingRadius->0], RectangleBox[{-2., 0}, {-1.5, 1},
      RoundingRadius->0], RectangleBox[{-1.5, 0}, {-1., 2},
      RoundingRadius->0], RectangleBox[{-1., 0}, {-0.5, 9},
      RoundingRadius->0], RectangleBox[{-0.5, 0}, {0., 19},
      RoundingRadius->0], RectangleBox[{0., 0}, {0.5, 17},
      RoundingRadius->0], RectangleBox[{0.5, 0}, {1., 54},
      RoundingRadius->0], RectangleBox[{1., 0}, {1.5, 91},
      RoundingRadius->0], RectangleBox[{1.5, 0}, {2., 148},
      RoundingRadius->0], RectangleBox[{2., 0}, {2.5, 196},
      RoundingRadius->0], RectangleBox[{2.5, 0}, {3., 254},
      RoundingRadius->0], RectangleBox[{3., 0}, {3.5, 328},
      RoundingRadius->0], RectangleBox[{3.5, 0}, {4., 380},
      RoundingRadius->0], RectangleBox[{4., 0}, {4.5, 478},
      RoundingRadius->0], RectangleBox[{4.5, 0}, {5., 485},
      RoundingRadius->0], RectangleBox[{5., 0}, {5.5, 448},
      RoundingRadius->0], RectangleBox[{5.5, 0}, {6., 498},
      RoundingRadius->0], RectangleBox[{6., 0}, {6.5, 407},
      RoundingRadius->0], RectangleBox[{6.5, 0}, {7., 365},
      RoundingRadius->0], RectangleBox[{7., 0}, {7.5, 284},
      RoundingRadius->0], RectangleBox[{7.5, 0}, {8., 169},
      RoundingRadius->0], RectangleBox[{8., 0}, {8.5, 152},
      RoundingRadius->0], RectangleBox[{8.5, 0}, {9., 101},
      RoundingRadius->0], RectangleBox[{9., 0}, {9.5, 54},
      RoundingRadius->0], RectangleBox[{9.5, 0}, {10., 21},
      RoundingRadius->0], RectangleBox[{10., 0}, {10.5, 17},
      RoundingRadius->0], RectangleBox[{10.5, 0}, {11., 15},
      RoundingRadius->0], RectangleBox[{11., 0}, {11.5, 3},
      RoundingRadius->0], RectangleBox[{11.5, 0}, {12., 1},
      RoundingRadius->0], RectangleBox[{12., 0}, {12.5, 1},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-2.8, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-2.5, 12.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.618762893350021*^9}]
}, Open  ]],

Cell["\<\
That was a plot of a sample, but we can also plot the distribution itself:\
\>", "Text",
 CellChangeTimes->{{3.5843810163254128`*^9, 3.584381030875126*^9}, {
  3.585484690521886*^9, 3.5854846997752132`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"5", ",", " ", "2"}], "]"}], ",", " ", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "1"}], ",", " ", "11"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.584381032881579*^9, 3.584381035366859*^9}, {
  3.584381091910618*^9, 3.5843811252693243`*^9}, {3.584381156467105*^9, 
  3.584381174117605*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
jh3//3/+/wEhRwGY
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-1, 11}, {0., 0.19947111894348962`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.618762893920199*^9}]
}, Open  ]],

Cell[TextData[{
 "The function",
 StyleBox[" ",
  FontColor->RGBColor[0.5, 0, 0.5]],
 StyleBox["PDF",
  FontFamily->"Courier"],
 " (for \[OpenCurlyDoubleQuote]probability density function\
\[CloseCurlyDoubleQuote]) gives the probability density at a particular \
point. For example,"
}], "Text",
 CellChangeTimes->{{3.584381329012973*^9, 3.5843813467711563`*^9}, {
  3.584381443635228*^9, 3.584381507090798*^9}, {3.585404623841002*^9, 
  3.585404641272805*^9}, {3.58540471400035*^9, 3.585404741183934*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"5", ",", " ", "2"}], "]"}], ",", " ", "7"}], "]"}]], "Input",
 CellChangeTimes->{{3.584381508765068*^9, 3.584381515277293*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"2", " ", 
   SqrtBox[
    RowBox[{"2", " ", "\[ExponentialE]", " ", "\[Pi]"}]]}]]], "Output",
 CellChangeTimes->{3.618762893943299*^9}]
}, Open  ]],

Cell[TextData[{
 "This gives the probability density at 7 as an exact real. To get an \
approximate decimal, use ",
 StyleBox["N",
  FontFamily->"Courier"],
 ":"
}], "Text",
 CellChangeTimes->{{3.584381543480145*^9, 3.584381580610499*^9}, {
  3.584697038589933*^9, 3.58469703879451*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"5", ",", " ", "2"}], "]"}], ",", " ", "7"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5843815821034117`*^9, 3.584381594721027*^9}}],

Cell[BoxData["0.12098536225957168`"], "Output",
 CellChangeTimes->{3.618762894044948*^9}]
}, Open  ]],

Cell[TextData[{
 "The second argument to ",
 StyleBox["Plot",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 StyleBox[", ",
  FontFamily->"Courier"],
 StyleBox["{x, -1, 11}",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ", indicates that the ",
 StyleBox["x",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " in the first argument should be varied from -1 to 11."
}], "Text",
 CellChangeTimes->{{3.584384657091729*^9, 3.584384705603332*^9}}],

Cell[CellGroupData[{

Cell["Practice: Plotting samples and probability distributions", \
"Subsubsubsection",
 CellChangeTimes->{{3.584383138605159*^9, 3.5843831563312807`*^9}}],

Cell[TextData[{
 "Use ",
 StyleBox["RandomVariate",
  FontFamily->"Courier",
  FontSize->14,
  FontWeight->"Bold"],
 " with ",
 StyleBox["BinomialDistribution",
  FontFamily->"Courier",
  FontSize->14,
  FontWeight->"Bold"],
 " to simulate the number of heads produced in 10 tosses of a coin with \
probability 0.8 of producing a heads on each flip (called a success). This \
won\[CloseCurlyQuote]t give the outcomes of individual flips -- each sample \
from this binomial distribution will give the total number of heads in 10 \
flips."
}], "ItemNumbered",
 CellChangeTimes->{{3.58438316531501*^9, 3.584383166763172*^9}, {
  3.584383219901576*^9, 3.584383325787224*^9}, {3.584383393691124*^9, 
  3.5843834225635977`*^9}, {3.584383503842915*^9, 3.5843835277150507`*^9}, {
  3.584383757341432*^9, 3.5843837704427357`*^9}, {3.584383835802979*^9, 
  3.584383835808395*^9}, {3.618584810828244*^9, 3.61858486390031*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVariate", "[", 
  RowBox[{"BinomialDistribution", "[", 
   RowBox[{"10", ",", ".8"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.618763010143279*^9, 3.618763056427899*^9}, {
  3.61876310397457*^9, 3.618763140141483*^9}}],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{{3.618763020915371*^9, 3.618763036030783*^9}, {
  3.618763105525281*^9, 3.618763140578023*^9}}]
}, Open  ]],

Cell["\<\
Plot a histogram of the numbers of heads produced in 1,000 such experiments.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.58438316531501*^9, 3.584383166763172*^9}, {
  3.584383219901576*^9, 3.584383325787224*^9}, {3.584383393691124*^9, 
  3.5843834225635977`*^9}, {3.584383503842915*^9, 3.5843835277150507`*^9}, {
  3.584383757341432*^9, 3.5843837704427357`*^9}, {3.584383835802979*^9, 
  3.5843838706959352`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"RandomVariate", "[", 
   RowBox[{
    RowBox[{"BinomialDistribution", "[", 
     RowBox[{"10", ",", ".8"}], "]"}], ",", "1000"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.618763110319357*^9, 3.618763111775167*^9}, {
  3.618763145448357*^9, 3.618763180309565*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604, 0.49470040000000004`], EdgeForm[{Opacity[
    0.644], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604, 0.49470040000000004`], EdgeForm[{Opacity[
     0.644], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3., 0}, {4., 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{29.19675740592473, 69.98899119295436}, {
          89.96409388551128, 91.11608803150307}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4., 0}, {5., 5}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{69.48899119295436, 110.28122497998399`}, {
          87.35611730154413, 91.11608803150307}}],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{5., 0}, {6., 27}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{109.78122497998399`, 150.5734587670136}, {
          73.0122460897248, 91.11608803150307}}],
        StatusArea[#, 27]& ,
        TagBoxNote->"27"],
       StyleBox["27", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[27, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{6., 0}, {7., 88}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{150.0734587670136, 190.86569255404325`}, {
          33.240603184225726`, 91.11608803150307}}],
        StatusArea[#, 88]& ,
        TagBoxNote->"88"],
       StyleBox["88", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[88, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{7., 0}, {8., 211}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{190.36569255404325`, 
          231.15792634107285`}, {-46.9546767727642, 91.11608803150307}}],
        StatusArea[#, 211]& ,
        TagBoxNote->"211"],
       StyleBox["211", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[211, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{8., 0}, {9., 296}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{230.65792634107285`, 
          271.4501601281024}, {-102.37417918206617`, 91.11608803150307}}],
        StatusArea[#, 296]& ,
        TagBoxNote->"296"],
       StyleBox["296", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[296, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{9., 0}, {10., 267}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{270.9501601281024, 
          311.7423939151321}, {-83.46634894830433, 91.11608803150307}}],
        StatusArea[#, 267]& ,
        TagBoxNote->"267"],
       StyleBox["267", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[267, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{10., 0}, {11., 105}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{311.2423939151321, 352.03462770216174`}, {
          22.156702702365337`, 91.11608803150307}}],
        StatusArea[#, 105]& ,
        TagBoxNote->"105"],
       StyleBox["105", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[105, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2.84, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{3., 11.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.618763180783634*^9}]
}, Open  ]],

Cell[TextData[{
 "Plot the actual probability function of the binomial distribution with \
these parameters, from 0 to 10. The only values with non-zero probability are \
the integers from 0 to 10, so will want to use ",
 StyleBox["DiscretePlot",
  FontFamily->"Courier",
  FontSize->14,
  FontWeight->"Bold"],
 " instead of ",
 StyleBox["Plot",
  FontFamily->"Courier",
  FontSize->14,
  FontWeight->"Bold"],
 " for this. Inside of ",
 StyleBox["DiscretePlot",
  FontFamily->"Courier",
  FontSize->14,
  FontWeight->"Bold"],
 " you will use ",
 StyleBox["PDF",
  FontFamily->"Courier",
  FontSize->14,
  FontWeight->"Bold"],
 " and ",
 StyleBox["BinomialDistribution",
  FontFamily->"Courier",
  FontSize->14,
  FontWeight->"Bold"],
 ". (deGroot uses the term ",
 StyleBox["probability function",
  FontSlant->"Italic"],
 " instead of ",
 StyleBox["p.d.f.",
  FontSlant->"Italic"],
 " for discrete random variates, but ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " allows you to use ",
 StyleBox["PDF",
  FontFamily->"Courier",
  FontSize->14,
  FontWeight->"Bold"],
 " for both.)"
}], "ItemNumbered",
 CellChangeTimes->{{3.58438316531501*^9, 3.584383166763172*^9}, {
   3.584383219901576*^9, 3.584383325787224*^9}, {3.584383393691124*^9, 
   3.5843834225635977`*^9}, {3.584383503842915*^9, 3.5843835277150507`*^9}, {
   3.584383757341432*^9, 3.5843837704427357`*^9}, {3.584383835802979*^9, 
   3.58438389006645*^9}, {3.584383934299135*^9, 3.584383971906814*^9}, {
   3.58438402189141*^9, 3.584384060235767*^9}, {3.584384759259287*^9, 
   3.584384827739265*^9}, 3.585405313364026*^9, {3.618584959706645*^9, 
   3.618584965931871*^9}, {3.618585439083487*^9, 3.618585507046528*^9}, {
   3.618585540284893*^9, 3.6185855415355177`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PDF", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"BinomialDistribution", "[", 
      RowBox[{"10", ",", ".8"}], "]"}], ",", "\[IndentingNewLine]", "x"}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.618763211648155*^9, 3.618763380333638*^9}, {
  3.618763422168208*^9, 3.61876342240149*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`], 
    AbsoluteThickness[1.6], {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.019444444444444445`], AbsoluteThickness[1.6], Opacity[0.2], LineBox[{},
       VertexColors->None]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.019444444444444445`], AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{0., 1.0240000000000004`*^-7}, {0., 0}}, {{1., 
         4.095999999999993*^-6}, {1., 0}}, {{2., 0.0000737279999999994}, {
         2., 0}}, {{3., 0.0007864319999999986}, {3., 0}}, {{4., 
         0.005505023999999986}, {4., 0}}, {{5., 0.026424115199999945`}, {
         5., 0}}, {{6., 0.08808038399999985}, {6., 0}}, {{7., 
         0.2013265919999998}, {7., 0}}, {{8., 0.3019898879999982}, {
         8., 0}}, {{9., 0.26843545599999974`}, {9., 0}}, {{10., 
         0.10737418240000005`}, {10., 0}}},
       VertexColors->None]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`], 
    AbsoluteThickness[1.6], {}, 
    PointBox[{{0., 1.0240000000000004`*^-7}, {1., 4.095999999999993*^-6}, {2.,
      0.0000737279999999994}, {3., 0.0007864319999999986}, {4., 
     0.005505023999999986}, {5., 0.026424115199999945`}, {6., 
     0.08808038399999985}, {7., 0.2013265919999998}, {8., 
     0.3019898879999982}, {9., 0.26843545599999974`}, {10., 
     0.10737418240000005`}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 10}, {0, 0.3019898879999982}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.618763293393926*^9, {3.61876335137533*^9, 3.618763381283165*^9}, 
   3.618763422885938*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculating the probabilities of events", "Subsubsection",
 CellChangeTimes->{{3.584697248895364*^9, 3.584697277146717*^9}, 
   3.58540745291847*^9}],

Cell[TextData[{
 "When working with probability distributions, often you will want to know \
the cumulative distribution function (CDF) rather than the probability \
density function (PDF). For a discrete random variable, the CDF evaluated at \
some number x is the sum of the probabilities of all numbers less than or \
equal to x. For a continuous random variable, it is the integral of the PDF \
from -\[Infinity] to x. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " will provide CDF for any distribution it knows:  "
}], "Text",
 CellChangeTimes->{{3.584697296691525*^9, 3.584697476362776*^9}, {
  3.584698227918256*^9, 3.5846983873149757`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"CDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"5", ",", " ", "2"}], "]"}], ",", " ", "7"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.584698405116144*^9, 3.584698422149107*^9}, {
  3.585484489361618*^9, 3.5854845081722813`*^9}}],

Cell[BoxData["0.841344746068543`"], "Output",
 CellChangeTimes->{3.618762894101996*^9}]
}, Open  ]],

Cell["\<\
This is the probability of selecting a number less than or equal 7 from the \
specified distribution. Notice how different it is than the PDF of the same \
distribution evaluated at 7. We can also plot the CDF, which always ranges \
from 0 to 1:\
\>", "Text",
 CellChangeTimes->{{3.584698427774714*^9, 3.584698513042485*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"5", ",", " ", "2"}], "]"}], ",", " ", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "1"}], ",", " ", "11"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.584698530975116*^9, 3.584698531573057*^9}, {
  3.5854844425365143`*^9, 3.585484469342917*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV1Hk4lc/7B3BLshQiS5aDszw+iRaEktyTLJUWa6FEtoSyJgo5WctOqYgs
JfoISfJVPBUh+/LJFhKyxDmPQkLxe35/zfW6Zuaaud5zz0118DRz5uLg4FDj
5OD4/1H8WkTQ2hqB80g9jx+hnITl4JldfV8JfCE6OnUnOgnDoebfSmsIPCid
rfbM4SQ8jaQed4ki8PO3xeX25Z8E3eQq+RYhAl/SaQnK1zgFLgUL79MobFzI
W1yZw8YKKnqc+TX3zeAT2kGB5xttIKO/uUqYMoMbWx+/pjdnAzcG1X2mVqfx
+fkAzZOyp+HoKOfnB++n8ZKEa8RWz9PwlZ1RyH1kGv/LaSIdJnkGBNZ3n+iw
+o4b9XmUHPK1hTO7DVM9/Cfx23aFrnEq9tCqyy9aZTmJ+xYsH+o1tIcDh5vj
BDUmcZvAlz8Pn7MHxbNmEUVzEzj7QZ17Tqo9zEad9Zv1msA7RK8yt3Ofg/DP
/mZ+7uO4+ELhyb7Rc1B444lQkP0Y/riofHCl1hHk4txuNcMYjlGmgyPGHCHp
7vb1FPkx3CU+L11nnRP4F774WzU4ipddoWjs1ncC1I3PrNmM4rtKu9VO1DnB
f0q9jWGWI7i9w+XS813O8KedLyrmyDDOGgwc/yjqCobikmHrVYbxzc8uLy5o
uEKiNXadKTiM15QqmZlYu8Kh2jA2O+sL7jymV5GY5Qr3xhda6wqHcLurMdKG
qhdAS7k/wb92AH/HnPIuPe0G/mU5It1zvXh+nbK9eLcHCOzH+ZvLe3GBPceq
/NY8IPPDZ873gb14+yHmWX6li1DXLfbz2VoPfulbtnVX0EUQX4rsjNjQg/uZ
3n85q3gJyva7p2jQP+EamW8/RER4wlyduvgdsw58gzaP8DdNbyjJfpBcJdGB
F1dNKz497g0eQTybxvvb8Ys/e27HunjDmGqPgJZjO+7yv+fsglRvyN+7wFE6
0Yp33YzkPvLbG9y+3ejZu60JV10vcXzfOx9g62SGHy6uwdM+6SfUuvmBy0/P
62laNfhF80hzn0g/GHpy4Oo0/h6fMzocciDHD9pEv3nGtb/DsYY9ifr9fmDf
cao8ZxTHy8S6Lnw1vgxjW30dS10rcHUvTY/bGv7QX2x+LfdbDn5tK2u+lx4A
yas2A+ZDWbgzp1RYqSHptNqrfEUZePqeC08qLgSA16evqx8T7+Amnik+xiUB
UKjiLbvb+jKuSew5kwiBcPbjpclCuXTISTyg/97lKjzQ+aq6lesVmMeGpjD6
ggDdseVs56mAvbTV5lnOYBhj9bVf4f8fvJQ7PEFsC4btDzs96ze9hmzoS4oK
DoZqztpnLvI4ZORHJtKwEPBy7LptllkDTF6Lg5oh1yFla/mmpNdNoPrhTdJT
FSZEXzRarNzdDGrJQWoDekwIKu0dHHvWDJz3x1YUrZngpLPydE9WC8j0v3Xh
i2SCpgkyGA5vAxoWo/Z3mAkz+769kXzSATq0grCa9BsQ7+j5w8XrEzg8ltp3
EQsHvvUVYyuFn+C1++vcn7rhcCOfozdx6hMoiPfr3bYKB39WUnWlQzeU3z12
SyU2HOyulMUIWfaAW1Eef9l8OOyKWcLK9/ZB9ANLa42mCOgqDbPh4R6E/stS
AxXxUaBmKIYX6g/CpcMtFe5FUZDc94huETkI3n+57h9sjQITjrqZHP4hGA9E
hINQNLQe47uONn0B36nSOsfEaHDyq+uoih+Gmw4vuOPSb4KdsPGv3+kjIBxu
LxzYFgNC1in5zW9GoGbhoL3IfAxU53y2yRocAapXu2bXlliQ0/TAjeRHIWg6
SeA/h1gYOBMXnZozCv4a066tv2PB5mmb9O6CMQijAlavEg+WBhbgWT4ODxva
ie82iTDr/KuooHschpXVeJI9EyE28p7c2K9xeJYT7XUiPBFq6wf+WmlNgPL5
jNuCRYmgdsT5jV7FBJxsl8LucyWB0An/vRKVk3BLRl96tTgJGqzuqVdVfQej
gZzKSNkUcArUzl0c/A5623Y2U3anwNr9AVG11e9Qv7Eqq8U4BTQ/K/zM050G
dfuqkSvXUuCRbUFJIj4N8626K78/pwDToXK707sZ2JKWpYBn3wZtj4F/Nnxg
g1vY4YUplAqrZuqSMqNsoBS8F/5pnQrv995ar8xJwLvfIywR31Q4wrvn25H9
BPzMl9l7/3EqnM5Jybn1koDZnvLJ+g13QdfjsRCP+SwY3vqaXzZwF+xyztwM
P/gDGvf6PtFPug/ZQk0hYYw5WKR8HJQ4nAE6IQ2i7bvn4PjcngY99wzoZX3I
kzWYg5uPSroS4jJAqOVt60vnOTDkuPY0rjMDgmLK5Sbz5mDn959fpc9mwkm+
nOqjSvOwdvPKQMK1h7CRK3BVfMcCGCo38etPZkHAgmJIvtYieCTXxBC+ubC1
YbXji+EiHNN4GygRnQs9ad2Y5MlFaDoH7scf5IImimyJ8FsEEB25/qM2FxZu
fZN1fL4IYR0ZTB7JR+Cj8Og1Rfk3RMRcuXKx+hF4GFOXkuWWYEJyqpopnQfn
smX8gnlWYJN9gsIwfwFE2mUpuoqtgIzHNtcttAIopGB9ZvQV4AqqcXDULoDf
93fobj2wAv3aoXdU3QsgPvkAX1fQCuz80Ttb3FIAlWHnH2ydX4HSrOIAndSn
IObyorZr5A+sBESZ/qdRCHXbjMW3vV0FS8qprIWSYsC+UZ2s21dhbePhwIz2
Ygh/+Ls0engV3ru2L9rOFoOeWJ7JBMcaREeORottKYGqvxyxjw6sQRv+zt/P
qgTK2su55GvWIHJ+yD32cwmY7hP5ze/IgWRVg5L1pp8DfA36turMiTYfXaKy
VcvgUULWa3SYG/lqP7W8t+5/oP6BW1bCkgc1qqgnUDEcQi+sMzt1ihd971Xe
LChcA5ZepmGzmvzImVGWGYPXgcXqoC4FNiBazsbnFXubYIBdvpDNEERuK+q7
yj+1QZxLm2almjBa3mdjVJ7dCSF57xUfpm9CQ63NhGPwJ1hurNkZFyuCnN97
37A92gsbXoz9rU0SRX8atT3PXP4M9s3/fsyP2IyetPHM1wUOgVjGgdD3fmKI
X0U4bE/lMNiqLq5gAeKI6SfqPGoxAtO/zC5ruEmguOelelVNoyAY2voi3ksS
CfTumtpg/g0S3m4ZpPhsQen1LiuD1eNgqca/ztpBChWorLFV/kxAyXmp2UEX
aSTrxY7i2TsFJ1rb+oRsZFDEUQe5nQbf4diMRdHlQ7KoSqt21y7VaRhuWTJS
NKagZcOrTzk3z8CrYf0vN3TkkL7q/rGpjzNAf1W8T0lPHm0zlcZO+7JAb0Uy
YtlAHpV9T6nIuMwCewhtbTosj7wlmPVDV1iQWW9y7pKpPGpfrbI+E8QC6d4f
kS/s5ZGo+8azBhEs2LSk3rn/ujxCK27Wbaks+KNd4Wr2Rh5VR72sr6tggZvd
cON+GQW0XY0yfO43Cybl3D7LUhSQ4H9FHLrLLHAZmptekVNANav6LVv+sMDB
llewkqaAqIX/ejSuseD06R0nNLcpoHUqeV0UXjYcPRXUtWOvAnqUyVsVIc6G
HSe2DMifIt2qNWCryoYfuiYszhQFJCZ4pfq4Mxt+7XdK4r+jgO4Y6JStuLDh
j06AhshdBWTc5aD/xJUN6/dlBSukKyCZrA+ay+5skNWaFYRcBQSXwwISfNhg
uDNxR9ALBXSetUc84Dob0uTbPX91KSAvwmLE8B4bDnKY/PwuRkXnTya5rqtj
w1NjO3abBBXt3BXVYljPBtG7l76XbaEigXZTRnQDG0a2x42EyFLRwTttBbxN
bLhxurFTlEGuv22GLbex4W25/gttdSpSY4U4P+tjw/6Le/1umVIRV70kMp1h
w6OKQ16e5lQUM6st4Mtiw8Z1Vh4WllSkb+/Rl8Jmw0Cav5OcNRVJLpy52TnL
hqCGFxal9lS0MY+B9BfYUEnfodHvSUU52eHxS3/ZoNVP+6UUT0X+bue6ioUI
UHR+E6GVSEVz6omiH4UJEJu1FDdIpiIPPvMDXzeRfZrn5m77VCrK2xjvJbSZ
gCJVwic1k4qYI1nbzkiS+2++JriKqWhIbLz0gzwBEnsspj63UdFk2bBW904C
eGpYAVMdVKTVv9zduouA+WNRfItdVPTrnExwnSoBnY6V/4j2UtGGBpOvpeoE
xCcouBwapqKPhgWUUC0C1k/MjJTNUtECS2c9S5eAhTsRA3EiNHRZ0SdW/BgB
ZtXzPUmbaWi/FrfPDOmScceuO+I0FLPVPvj9cQI8tPQaM6RoyFNJhs/DhICR
3tVXz6g0lDjavVZmTkC7TEBKiyoNPZZ4wi9vQ0BhttsRQTMaOhE9yW3lQoBA
Y5+BiAUNKZ4vHhE7T4Drz0MHxE/S0Kjkq5V20vSD/+yh2NAQ8/b6L4YXCEgb
G8W2O9DQobfrg5Q8CIj+x5bzmA8N/ddYer/RmwDHZycqYpNpKJr/XV5oEAEM
WuWGS7dpSLVVblI6mICxVIbdiVQaSmvSjy8j7RS6xCOaRkMcrzoFxkMIcDbP
Nb+bTUNSO407DzAJOL/0i51dQkPlbQ/XDUYQ4G6Qib1qpaE/PBPaj+MJUKnk
C7zXTubzY/uqSgIBMzt8mwM7aehZoaxGGWmPLYd8dbppSLOgeu1tIgEXp3+8
fTdInleUK/ZfMgGeSQZnmmdoKCXj36zhVAJ8B2eSvwrQUaVrgnlqJgGVSV8D
pzfSkfPIgJvkQwK4DLvtF4ToKM00h3WXdGIRvoN/Mx1NXHitdTeLrJ/ryY27
ZOhISoDKis8h4Dt1D1eoMh2FKDPNHfMIsHcJ85Y7SkeR1NkXuc8IyJcOsNp6
nI42K7zV3VxEANHqAWomdPRSMdPgBukQrZOChhZ0dOQK8+PZYgLS+ZQKLp6h
o5L9+CuR5wR0P20dfuNBR+cHetPtygg4RkiZnI6jI8Ip80tmJQG/CP4EvQQ6
cvNNDf1NOmt2qUUpiY6avnx+bfqarNcffca/b9OR3PMmLu43BDyYv2905wEd
2eanD9hXkXkuSUHbv3QUKCImKvCWgNh10jsONtLRyC1HPvEPBGjyCFzc1kxH
y+4zeQ6kh3mW/xVppaM6pD5dTHo3b7/ScAcdnXtu5XK4joAB/jQsuI+O2qoj
dwXUE6AsLE15NUlHTni93YePBDRKSW9U5mUgqq5ygEIrAaOvvpTz8TOQf4sc
3YH0H8vH58YFGEg81JmZS3p78q5X2UIMtJwkZY21ke8hYOSwRYKBhnWOBWPt
BFiu+FbwYAwUzVXeJ9lJ3m+gxWlYj4EGXHiH6j4RsHQ1Rbhan4G8jxkx10iL
SllXphsy0IU/A+QHJ+Cg5ZjwqSMMlMot2/2EdF7LcmWLKQM529lmhfeQ9Vj9
j8hrewZ6bzvOVu0j837IrLoTwkA9x3YesB0gIDW4YyU9lOxVE3KbkklrnqZq
59xgoCVOkft1pP0l3pUXRTLQy197+3cMkv8/lqOkPp6BcEMd2h/S84HXc5Yy
GWhtREDw1heyX5kHR9niDBSoKGR/eYSAZNWWD47vGGiXzhh3Dmk1Yco6txoG
MjRnuLeS9ml8E+pfz0ACrL/hiqME/EB/AhPaGOh/JxtYXaRnt1/zePeFgQ6r
e7fTvxHA4g00xTgwxFebX3p/gpxXrZ3g48JQ8OOAujekf54WDpnhxpB8Tlvh
F9K/ih8/fcGLIa6ELz8YkwRwWHVy6wljaCVG3PEZabF85fKzchjiNSgXLJ8i
QPvQkPQ9HQw5Orr0PZkmQMdH6fk1XQzVHRrI+EAaHvgZ2SEMqVImtUdJ688K
+CnqY2jn8JU1ygxZ3/e0WsqMMfQr2u1VEmn7ycTrHTYYupyex+/DIiAy+uCY
QCCG/J+rn5ckCKhJT6pQvIYhE6PhEHXSHMVfYvWCMeTye5vHCdKBn65pXGVi
qNfyWkMkaQ9aWeTUTQyVasjHz5E2fcNQakjDUOWUc/CHWQJkZ3kuRbzBkLG4
kd3RnwRYcVvoZVdjyMJnS4oj6TsSORJVbzGU6S2Te5W00H5dfL4WQxMFgVb5
pDlv+W9yasEQkzJC4ZojYJw+Uao3hKF/fHn3F5Oma2lEnR3GUBzT6Ugtafsj
YaevjmCoJ2NCs490n5f8utJxMq9K8SKueQKaq05ZUgkyX8lVKQvSfB2Plfb/
wFBAWiDmStpgbO6v1RyGhIyZIkGkqwUS8xIXMTTvPBaTS3qFMnS1cAlDTZOp
0q9I71FVOdGwgiGVxrBbjaT99K/Sx/5iKFKi+/Mg6eenGhbX1jDk+6RC6Afp
/wOO5lGK
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-1, 11}, {0., 0.9986501014256944}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.618762894199732*^9}]
}, Open  ]],

Cell["\<\
Compare this to the PDF we graphed for the same function above. You can see \
that the CDF rises steeply where the PDF is high and slowly where the PDF is \
low. This is because the PDF is the derivative of the CDF.\
\>", "Text",
 CellChangeTimes->{{3.584698547051714*^9, 3.584698611058814*^9}, 
   3.5854051567091637`*^9}],

Cell[CellGroupData[{

Cell["Practice: Cumulative Probability Distributions", "Subsubsubsection",
 CellChangeTimes->{{3.584383138605159*^9, 3.5843831563312807`*^9}, {
  3.5846986315654573`*^9, 3.584698643930005*^9}}],

Cell[TextData[{
 "Use ",
 StyleBox["DiscretePlot",
  FontFamily->"Courier",
  FontSize->14],
 " and ",
 StyleBox["CDF",
  FontFamily->"Courier"],
 " to plot the cumulative distribution function of the binomial distribution \
for 10 tosses of a coin with probability 0.8 of producing a heads. Compare to \
your plot of the pdf for the same distribution. To make the y-axes \
comparable, you may want to add the following option to ",
 StyleBox["DiscretePlot",
  FontFamily->"Courier",
  FontSize->14,
  FontWeight->"Bold"],
 StyleBox[": ",
  FontFamily->"Courier",
  FontSize->14],
 StyleBox["PlotRange -> {0, 1}",
  FontFamily->"Courier",
  FontSize->14,
  FontWeight->"Bold"],
 ". Optional arguments to a function go after all the other arguments, each \
separated from the others by a comma. See documentation on ",
 StyleBox["Plot",
  FontFamily->"Courier",
  FontSize->14,
  FontWeight->"Bold"],
 " for examples."
}], "ItemNumbered",
 CellChangeTimes->{{3.584699101016225*^9, 3.5846991047019978`*^9}, {
  3.585428955453547*^9, 3.585428972106011*^9}, {3.585484546172307*^9, 
  3.585484608107052*^9}, {3.58548465158629*^9, 3.58548466668517*^9}, {
  3.585484742864291*^9, 3.5854847628292294`*^9}, {3.6185856579288073`*^9, 
  3.618585695541692*^9}, {3.618585726940486*^9, 3.618585735242777*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"DiscretePlot", "[", 
    RowBox[{
     RowBox[{"CDF", "[", 
      RowBox[{
       RowBox[{"BinomialDistribution", "[", 
        RowBox[{"10", ",", "0.8"}], "]"}], ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
   RowBox[{"DiscretePlot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"BinomialDistribution", "[", 
        RowBox[{"10", ",", "0.8"}], "]"}], ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.618763486730172*^9, 3.618763486732532*^9}, 
   3.618763527854325*^9, {3.618763627650414*^9, 3.618763660425738*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.019444444444444445`], AbsoluteThickness[1.6], Opacity[0.2], 
       LineBox[{},
        VertexColors->None]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.019444444444444445`], AbsoluteThickness[1.6], Opacity[0.2], 
       LineBox[{{{0., 1.0239999999999978`*^-7}, {0., 0}}, {{1., 
          4.198399999999992*^-6}, {1., 0}}, {{2., 0.00007792639999999986}, {
          2., 0}}, {{3., 0.0008643583999999986}, {3., 0}}, {{4., 
          0.006369382399999991}, {4., 0}}, {{5., 0.03279349759999998}, {
          5., 0}}, {{6., 0.1208738815999999}, {6., 0}}, {{7., 0.3222004736}, {
          7., 0}}, {{8., 0.6241903616}, {8., 0}}, {{9., 0.8926258175999999}, {
          9., 0}}, {{10., 1.}, {10., 0}}},
        VertexColors->None]}}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], {}, 
     PointBox[{{0., 1.0239999999999978`*^-7}, {1., 4.198399999999992*^-6}, {
      2., 0.00007792639999999986}, {3., 0.0008643583999999986}, {4., 
      0.006369382399999991}, {5., 0.03279349759999998}, {6., 
      0.1208738815999999}, {7., 0.3222004736}, {8., 0.6241903616}, {9., 
      0.8926258175999999}, {10., 1.}}], {}}}, {
    {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
     1.6], {
      {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
       1.6], Opacity[0.2], LineBox[{},
        VertexColors->None]}, 
      {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
       1.6], Opacity[0.2], 
       LineBox[{{{0., 1.0240000000000004`*^-7}, {0., 0}}, {{1., 
          4.095999999999993*^-6}, {1., 0}}, {{2., 0.0000737279999999994}, {
          2., 0}}, {{3., 0.0007864319999999986}, {3., 0}}, {{4., 
          0.005505023999999986}, {4., 0}}, {{5., 0.026424115199999945`}, {
          5., 0}}, {{6., 0.08808038399999985}, {6., 0}}, {{7., 
          0.2013265919999998}, {7., 0}}, {{8., 0.3019898879999982}, {
          8., 0}}, {{9., 0.26843545599999974`}, {9., 0}}, {{10., 
          0.10737418240000005`}, {10., 0}}},
        VertexColors->None]}}}, 
    {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
     1.6], {}, 
     PointBox[{{0., 1.0240000000000004`*^-7}, {1., 4.095999999999993*^-6}, {
      2., 0.0000737279999999994}, {3., 0.0007864319999999986}, {4., 
      0.005505023999999986}, {5., 0.026424115199999945`}, {6., 
      0.08808038399999985}, {7., 0.2013265919999998}, {8., 
      0.3019898879999982}, {9., 0.26843545599999974`}, {10., 
      0.10737418240000005`}}], {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 10}, {0, 1.}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.618763488031193*^9, {3.618763632546016*^9, 3.618763664935909*^9}}]
}, Open  ]],

Cell[TextData[{
 "Now plot the CDF for the tosses of a coin with probability 0.7 of producing \
heads. Now try 0.6. Write a comment on what happens as you decrease the \
probability of heads. To make the graphs comparable, you may want to add the \
following option to ",
 StyleBox["DiscretePlot",
  FontFamily->"Courier",
  FontSize->14,
  FontWeight->"Bold"],
 StyleBox[": ",
  FontFamily->"Courier",
  FontSize->14],
 StyleBox["PlotRange -> {0, 1}",
  FontFamily->"Courier",
  FontSize->14,
  FontWeight->"Bold"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.584699101016225*^9, 3.584699163178584*^9}, {
  3.585428985349828*^9, 3.585428992997347*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DiscretePlot", "[", 
    RowBox[{
     RowBox[{"CDF", "[", 
      RowBox[{
       RowBox[{"BinomialDistribution", "[", 
        RowBox[{"10", ",", "0.6"}], "]"}], ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"DiscretePlot", "[", 
    RowBox[{
     RowBox[{"CDF", "[", 
      RowBox[{
       RowBox[{"BinomialDistribution", "[", 
        RowBox[{"10", ",", "0.7"}], "]"}], ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}], ",", 
   RowBox[{"DiscretePlot", "[", 
    RowBox[{
     RowBox[{"CDF", "[", 
      RowBox[{
       RowBox[{"BinomialDistribution", "[", 
        RowBox[{"10", ",", "0.8"}], "]"}], ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.618763674977967*^9, 3.618763746554049*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], AbsoluteThickness[
     1.6], {
      {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], AbsoluteThickness[
       1.6], Opacity[0.2], LineBox[{},
        VertexColors->None]}, 
      {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], AbsoluteThickness[
       1.6], Opacity[0.2], 
       LineBox[{{{0., 0.00010485760000000006`}, {0., 0}}, {{1., 
          0.0016777216000000007`}, {1., 0}}, {{2., 0.012294553600000006`}, {
          2., 0}}, {{3., 0.054761881600000006`}, {3., 0}}, {{4., 
          0.16623861760000003`}, {4., 0}}, {{5., 0.36689674240000003`}, {
          5., 0}}, {{6., 0.6177193984000001}, {6., 0}}, {{7., 0.8327102464}, {
          7., 0}}, {{8., 0.9536425984}, {8., 0}}, {{9., 0.9939533824}, {
          9., 0}}, {{10., 1.}, {10., 0}}},
        VertexColors->None]}}}, 
    {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], AbsoluteThickness[
     1.6], {}, 
     PointBox[{{0., 0.00010485760000000006`}, {1., 0.0016777216000000007`}, {
      2., 0.012294553600000006`}, {3., 0.054761881600000006`}, {4., 
      0.16623861760000003`}, {5., 0.36689674240000003`}, {6., 
      0.6177193984000001}, {7., 0.8327102464}, {8., 0.9536425984}, {9., 
      0.9939533824}, {10., 1.}}], {}}}, {
    {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
     1.6], {
      {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
       1.6], Opacity[0.2], LineBox[{},
        VertexColors->None]}, 
      {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
       1.6], Opacity[0.2], 
       LineBox[{{{0., 5.9049000000000085`*^-6}, {0., 0}}, {{1., 
          0.00014368590000000018`}, {1., 0}}, {{2., 0.0015903864000000013`}, {
          2., 0}}, {{3., 0.010592078400000008`}, {3., 0}}, {{4., 
          0.047348987400000035`}, {4., 0}}, {{5., 0.15026833260000005`}, {
          5., 0}}, {{6., 0.3503892816000001}, {6., 0}}, {{7., 0.6172172136}, {
          7., 0}}, {{8., 0.8506916541}, {8., 0}}, {{9., 0.9717524751000001}, {
          9., 0}}, {{10., 1.}, {10., 0}}},
        VertexColors->None]}}}, 
    {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
     1.6], {}, 
     PointBox[{{0., 5.9049000000000085`*^-6}, {1., 0.00014368590000000018`}, {
      2., 0.0015903864000000013`}, {3., 0.010592078400000008`}, {4., 
      0.047348987400000035`}, {5., 0.15026833260000005`}, {6., 
      0.3503892816000001}, {7., 0.6172172136}, {8., 0.8506916541}, {9., 
      0.9717524751000001}, {10., 1.}}], {}}}, {
    {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
     1.6], {
      {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
       1.6], Opacity[0.2], LineBox[{},
        VertexColors->None]}, 
      {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
       1.6], Opacity[0.2], 
       LineBox[{{{0., 1.0239999999999978`*^-7}, {0., 0}}, {{1., 
          4.198399999999992*^-6}, {1., 0}}, {{2., 0.00007792639999999986}, {
          2., 0}}, {{3., 0.0008643583999999986}, {3., 0}}, {{4., 
          0.006369382399999991}, {4., 0}}, {{5., 0.03279349759999998}, {
          5., 0}}, {{6., 0.1208738815999999}, {6., 0}}, {{7., 0.3222004736}, {
          7., 0}}, {{8., 0.6241903616}, {8., 0}}, {{9., 0.8926258175999999}, {
          9., 0}}, {{10., 1.}, {10., 0}}},
        VertexColors->None]}}}, 
    {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
     1.6], {}, 
     PointBox[{{0., 1.0239999999999978`*^-7}, {1., 4.198399999999992*^-6}, {
      2., 0.00007792639999999986}, {3., 0.0008643583999999986}, {4., 
      0.006369382399999991}, {5., 0.03279349759999998}, {6., 
      0.1208738815999999}, {7., 0.3222004736}, {8., 0.6241903616}, {9., 
      0.8926258175999999}, {10., 1.}}], {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 10}, {0, 1.}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.618763697493873*^9, {3.618763732531081*^9, 3.618763746823911*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "As", " ", "the", " ", "probablity", " ", "of", " ", "a", " ", "heads", 
    " ", "decreases"}], ",", " ", 
   RowBox[{"the", " ", "CDF", " ", "shifts", " ", 
    RowBox[{"left", "."}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.618763757520014*^9, 3.618763789097048*^9}}],

Cell["\<\
You can use the CDF to calculate the probability of a number sampled from the \
distribution falling in a certain interval. For example, the probability of a \
number being between 3 and 7 is simply the probability of its being below 7 \
minus the probability of its being below 3. That is, the value of the CDF at \
7 minus the value of the CDF at 3.\
\>", "Text",
 CellChangeTimes->{{3.584699179724372*^9, 3.584699362970335*^9}, {
  3.58540579186451*^9, 3.585405792248815*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"5", ",", " ", "2"}], "]"}], ",", " ", "7"}], "]"}], "]"}], " ",
   "-", " ", 
  RowBox[{"N", "[", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"5", ",", " ", "2"}], "]"}], ",", " ", "3"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.584699370988934*^9, 3.5846993802933483`*^9}}],

Cell[BoxData["0.6826894921370861`"], "Output",
 CellChangeTimes->{3.618762894215685*^9}]
}, Open  ]],

Cell[TextData[{
 "But you don\[CloseCurlyQuote]t actually have to subtract the CDF values \
explicitly -- ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " does this and much more with the function ",
 StyleBox["Probability",
  FontFamily->"Courier"],
 ". "
}], "Text",
 CellChangeTimes->{{3.58469940618897*^9, 3.584699520202217*^9}, 
   3.5854074579903193`*^9, {3.585429036747788*^9, 3.585429039800228*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Probability", "[", 
    RowBox[{
     RowBox[{"z", "<", "7"}], ",", 
     RowBox[{"z", " ", "\[Distributed]", " ", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"5", ",", " ", "2"}], "]"}]}]}], "]"}], "]"}], " "}]], "Input",\

 CellChangeTimes->{{3.58469954292702*^9, 3.584699544348127*^9}, {
   3.5846995805982637`*^9, 3.5846995967583027`*^9}, {3.58469983193219*^9, 
   3.584699877412569*^9}, {3.5846999766947527`*^9, 3.58469999369425*^9}, {
   3.5854060520906553`*^9, 3.585406096107877*^9}, 3.585406302390272*^9}],

Cell[BoxData["0.841344746068543`"], "Output",
 CellChangeTimes->{3.618762894362611*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Probability", "[", 
   RowBox[{
    RowBox[{"3", "<", "z", "<", "7"}], ",", 
    RowBox[{"z", " ", "\[Distributed]", " ", 
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"5", ",", " ", "2"}], "]"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.58469954292702*^9, 3.584699544348127*^9}, {
  3.5846995805982637`*^9, 3.5846995967583027`*^9}, {3.58469983193219*^9, 
  3.584699877412569*^9}, {3.5846999766947527`*^9, 3.58469999369425*^9}, {
  3.584700528637967*^9, 3.584700536389813*^9}}],

Cell[BoxData["0.6826894921370861`"], "Output",
 CellChangeTimes->{3.618762894437405*^9}]
}, Open  ]],

Cell[TextData[{
 "Notice that these are the same numbers we got by using ",
 StyleBox["CDF",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ". The first argument to ",
 StyleBox["Probability",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " is a predicate -- something that evaluates to ",
 StyleBox["True",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " or ",
 StyleBox["False",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " -- involving an undefined variable. The second argument gives the \
distribution of that variable. The little squiggle, \[Distributed], is read \
\[OpenCurlyDoubleQuote]is distributed according to\[CloseCurlyDoubleQuote] \
and can be obtained by typing the escape key, \[OpenCurlyDoubleQuote]dist\
\[CloseCurlyDoubleQuote], and escape again. What\[CloseCurlyQuote]s cool \
about ",
 StyleBox["Probability",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " is that you can give it complicated predicates, as in "
}], "Text",
 CellChangeTimes->{{3.584700020584186*^9, 3.5847000595068617`*^9}, {
  3.5847001499029922`*^9, 3.584700153861115*^9}, {3.584700276541069*^9, 
  3.584700374867017*^9}, {3.584700495142702*^9, 3.584700511164365*^9}, {
  3.584700543755582*^9, 3.584700573931123*^9}, {3.585406337285797*^9, 
  3.585406389020859*^9}, {3.585406618211502*^9, 3.585406631514522*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Probability", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"2", "<", 
      RowBox[{"Sqrt", "[", "z", "]"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"z", "^", "3"}], "<", "125"}]}], ",", 
    RowBox[{"z", " ", "\[Distributed]", " ", 
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"5", ",", " ", "2"}], "]"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.584700592204899*^9, 3.5847006637408123`*^9}}],

Cell[BoxData["0.19146246127401315`"], "Output",
 CellChangeTimes->{3.618762895135945*^9}]
}, Open  ]],

Cell[TextData[{
 "This gives the probability of selecting a number whose square root is \
greater than two and whose cube is less than 125. By using ",
 StyleBox["&&",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " (and) and ",
 StyleBox["||",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " (or) you can make very complex predicates to calculate the probability of. \
One thing to beware of is that if you try this with a variable that has a \
defined value ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " will simply replace it by its value before evaluating the rest of the \
expression. This doesn\[CloseCurlyQuote]t do what you want -- it usually \
returns a probably of 1 or 0, depending on whether the value of the variable \
does or does not satisfy your predicate. So you want to make sure your \
variable is colored blue, indicating undefined, when you use ",
 StyleBox["Probability",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ".\n\nIf you\[CloseCurlyQuote]re interested in getting out decimal numbers \
rather than big symbolic expressions, you can use the function ",
 StyleBox["NProbability",
  FontFamily->"Courier"],
 ", which in some cases may be faster than computing a symbolic expression \
for the probability first and then passing it to ",
 StyleBox["N",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.584700673212648*^9, 3.58470090781087*^9}, {
  3.584728109694655*^9, 3.5847281456248817`*^9}, {3.584728227810615*^9, 
  3.584728298592731*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Practice: Using ",
 StyleBox["Probability",
  FontFamily->"Courier"]
}], "Subsubsubsection",
 CellChangeTimes->{{3.584383138605159*^9, 3.5843831563312807`*^9}, {
  3.5846986315654573`*^9, 3.584698643930005*^9}, {3.584700987669651*^9, 
  3.584700991698124*^9}}],

Cell[TextData[{
 "Suppose you \[OpenCurlyDoubleQuote]flip a coin\[CloseCurlyDoubleQuote] that \
has probability 0.75 of producing heads 20 times and add up the number of \
heads actually produced. You then square that number. Use ",
 StyleBox["Probability",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " to figure out the probability that the result will lie in the interval \
between 20 and 100, inclusive."
}], "Text",
 CellChangeTimes->{{3.5847010043313847`*^9, 3.584701006426652*^9}, {
   3.584701064475349*^9, 3.5847011640190353`*^9}, 3.585407473453524*^9, {
   3.618586074995126*^9, 3.618586077187249*^9}, {3.618763853858604*^9, 
   3.61876385458332*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NProbability", "[", 
  RowBox[{
   RowBox[{"20", "\[LessEqual]", 
    RowBox[{"z", "^", "2"}], "\[LessEqual]", "100"}], ",", 
   RowBox[{"z", "\[Distributed]", 
    RowBox[{"BinomialDistribution", "[", 
     RowBox[{"20", ",", ".75"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.618763810458501*^9, 3.618763810459243*^9}}],

Cell[BoxData["0.013864030412150896`"], "Output",
 CellChangeTimes->{3.618763818527117*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
InitializationCellWarning->False,
WindowSize->{620, 744},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"10.0 for Linux x86 (32-bit) (June 27, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 271, 8, 68, "Section"],
Cell[853, 32, 419, 7, 99, "Text"],
Cell[CellGroupData[{
Cell[1297, 43, 126, 1, 47, "Subsection"],
Cell[1426, 46, 613, 12, 121, "Text"],
Cell[CellGroupData[{
Cell[2064, 62, 196, 4, 32, "Input"],
Cell[2263, 68, 170, 4, 32, "Output"]
}, Open  ]],
Cell[2448, 75, 433, 9, 99, "Text"],
Cell[CellGroupData[{
Cell[2906, 88, 289, 6, 32, "Input"],
Cell[3198, 96, 70, 1, 32, "Output"]
}, Open  ]],
Cell[3283, 100, 336, 6, 77, "Text"],
Cell[CellGroupData[{
Cell[3644, 110, 261, 6, 55, "Input"],
Cell[3908, 118, 146, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4091, 126, 205, 5, 32, "Input"],
Cell[4299, 133, 145, 3, 32, "Output"]
}, Open  ]],
Cell[4459, 139, 613, 14, 77, "Text"],
Cell[CellGroupData[{
Cell[5097, 157, 343, 8, 55, "Input"],
Cell[5443, 167, 9248, 225, 66, "Output"]
}, Open  ]],
Cell[14706, 395, 338, 6, 55, "Text"],
Cell[CellGroupData[{
Cell[15069, 405, 381, 7, 32, "Input"],
Cell[15453, 414, 1198, 18, 143, "Output"]
}, Open  ]],
Cell[16666, 435, 209, 4, 55, "Text"],
Cell[CellGroupData[{
Cell[16900, 443, 271, 5, 32, "Input"],
Cell[17174, 450, 9349, 228, 66, "Output"]
}, Open  ]],
Cell[26538, 681, 366, 7, 77, "Text"],
Cell[CellGroupData[{
Cell[26929, 692, 237, 5, 32, "Input"],
Cell[27169, 699, 702, 13, 99, "Output"]
}, Open  ]],
Cell[27886, 715, 270, 5, 55, "Text"],
Cell[CellGroupData[{
Cell[28181, 724, 332, 8, 55, "Input"],
Cell[28516, 734, 2787, 55, 237, "Output"]
}, Open  ]],
Cell[31318, 792, 217, 4, 33, "Text"],
Cell[CellGroupData[{
Cell[31560, 800, 478, 12, 32, "Input"],
Cell[32041, 814, 8852, 156, 244, "Output"]
}, Open  ]],
Cell[40908, 973, 506, 12, 55, "Text"],
Cell[CellGroupData[{
Cell[41439, 989, 226, 5, 32, "Input"],
Cell[41668, 996, 179, 5, 55, "Output"]
}, Open  ]],
Cell[41862, 1004, 287, 8, 55, "Text"],
Cell[CellGroupData[{
Cell[42174, 1016, 262, 7, 32, "Input"],
Cell[42439, 1025, 89, 1, 32, "Output"]
}, Open  ]],
Cell[42543, 1029, 449, 16, 55, "Text"],
Cell[CellGroupData[{
Cell[43017, 1049, 154, 2, 31, "Subsubsubsection"],
Cell[43174, 1053, 915, 21, 137, "ItemNumbered"],
Cell[CellGroupData[{
Cell[44114, 1078, 253, 5, 32, "Input"],
Cell[44370, 1085, 143, 2, 32, "Output"]
}, Open  ]],
Cell[44528, 1090, 423, 7, 53, "ItemNumbered"],
Cell[CellGroupData[{
Cell[44976, 1101, 321, 7, 55, "Input"],
Cell[45300, 1110, 5790, 167, 237, "Output"]
}, Open  ]],
Cell[51105, 1280, 1742, 52, 179, "ItemNumbered"],
Cell[CellGroupData[{
Cell[52872, 1336, 520, 12, 143, "Input"],
Cell[53395, 1350, 3724, 90, 274, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[57168, 1446, 155, 2, 37, "Subsubsection"],
Cell[57326, 1450, 657, 12, 165, "Text"],
Cell[CellGroupData[{
Cell[58008, 1466, 311, 8, 32, "Input"],
Cell[58322, 1476, 87, 1, 32, "Output"]
}, Open  ]],
Cell[58424, 1480, 335, 6, 99, "Text"],
Cell[CellGroupData[{
Cell[58784, 1490, 429, 11, 55, "Input"],
Cell[59216, 1503, 7256, 130, 244, "Output"]
}, Open  ]],
Cell[66487, 1636, 333, 6, 99, "Text"],
Cell[CellGroupData[{
Cell[66845, 1646, 193, 2, 31, "Subsubsubsection"],
Cell[67041, 1650, 1295, 35, 200, "ItemNumbered"],
Cell[CellGroupData[{
Cell[68361, 1689, 816, 21, 99, "Input"],
Cell[69180, 1712, 5001, 112, 245, "Output"]
}, Open  ]],
Cell[74196, 1827, 656, 19, 116, "ItemNumbered"],
Cell[CellGroupData[{
Cell[74877, 1850, 1184, 31, 165, "Input"],
Cell[76064, 1883, 6105, 131, 245, "Output"]
}, Open  ]],
Cell[82184, 2017, 339, 8, 55, "Input"],
Cell[82526, 2027, 489, 8, 143, "Text"],
Cell[CellGroupData[{
Cell[83040, 2039, 472, 14, 55, "Input"],
Cell[83515, 2055, 88, 1, 32, "Output"]
}, Open  ]],
Cell[83618, 2059, 413, 11, 77, "Text"],
Cell[CellGroupData[{
Cell[84056, 2074, 584, 13, 32, "Input"],
Cell[84643, 2089, 87, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84767, 2095, 541, 11, 55, "Input"],
Cell[85311, 2108, 88, 1, 32, "Output"]
}, Open  ]],
Cell[85414, 2112, 1323, 32, 187, "Text"],
Cell[CellGroupData[{
Cell[86762, 2148, 464, 12, 55, "Input"],
Cell[87229, 2162, 89, 1, 32, "Output"]
}, Open  ]],
Cell[87333, 2166, 1526, 36, 341, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88896, 2207, 278, 7, 31, "Subsubsubsection"],
Cell[89177, 2216, 666, 13, 121, "Text"],
Cell[CellGroupData[{
Cell[89868, 2233, 353, 8, 55, "Input"],
Cell[90224, 2243, 90, 1, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
