(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     36337,        850]
NotebookOptionsPosition[     33893,        765]
NotebookOutlinePosition[     34302,        783]
CellTagsIndexPosition[     34259,        780]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Site EM assignment", "Title",
 CellChangeTimes->{{3.5855109621349773`*^9, 3.5855109786207867`*^9}, {
  3.589537452880289*^9, 3.58953745716191*^9}, {3.589538129491316*^9, 
  3.5895381327143*^9}, {3.5895844392069798`*^9, 3.589584452050078*^9}, {
  3.620956994416871*^9, 3.620956994856228*^9}}],

Cell[TextData[{
 "You did it!  You finally made it to ",
 StyleBox["siteEM",
  FontWeight->"Bold"],
 ", a project that tries to put together everything you\[CloseCurlyQuote]ve \
been doing with dice and simulated DNA sequences to attempt to solve a real \
computational biology problem!  Here, we\[CloseCurlyQuote]ll be building an \
EM-based approach to inferring a Transcription Factor\[CloseCurlyQuote]s \
preferred binding pattern, similarly to the approach in Bailey and Elkan."
}], "Text",
 CellChangeTimes->{{3.620956997856003*^9, 3.6209570681560087`*^9}, {
  3.620957138455924*^9, 3.620957165915986*^9}, {3.620957223895877*^9, 
  3.620957260516323*^9}}],

Cell[TextData[{
 "A preliminary note, in case you implement your code correctly, but are \
disappointed with the results: implementing this assignment analagously to ",
 StyleBox["diceEM",
  FontWeight->"Bold"],
 " (as you are expected to do, and will be counted as correct in the course!) \
will ",
 StyleBox["not",
  FontWeight->"Bold"],
 " achieve state-of-the-art results in motif finding.  In fact, it will not \
be able to achieve the results achieved with the latest release of MEME, \
which can be found at the MEME website: \
http://meme.nbcr.net/meme/cgi-bin/meme.cgi.  You will, however, be able to \
get results that are arguably pretty strong (at the end of this project, you \
can compare your inferred motif on real sequences to that found by MEME), and \
hopefully get to see that the effort you\[CloseCurlyQuote]ve made into \
gaining probabilistic modeling skills can make real headway into important \
problems."
}], "Text",
 CellChangeTimes->{{3.620957641636352*^9, 3.620957764396439*^9}, {
  3.620957912599687*^9, 3.620957929776619*^9}, {3.6209582179763823`*^9, 
  3.620958227016117*^9}, {3.620958672296652*^9, 3.620958784376791*^9}}],

Cell[CellGroupData[{

Cell["Coding", "Section",
 CellChangeTimes->{{3.5855110461522093`*^9, 3.58551104688463*^9}}],

Cell[TextData[{
 "As ",
 StyleBox["diceEM",
  FontWeight->"Bold"],
 " was a continuation of ",
 StyleBox["diceSample",
  FontWeight->"Bold"],
 " and ",
 StyleBox["dicePosterior",
  FontWeight->"Bold"],
 ", this is a continuation of ",
 StyleBox["siteSample",
  FontWeight->"Bold"],
 " and ",
 StyleBox["sitePosterior",
  FontWeight->"Bold"],
 "; please copy your code from those assignments into the bottom of your \
siteEMAssignment.m file.  There will be two parts to completing this lab:"
}], "Text",
 CellChangeTimes->{{3.6209575130161953`*^9, 3.6209575799761868`*^9}, {
  3.620958987736965*^9, 3.62095899903627*^9}}],

Cell[TextData[{
 "1) Write code to infer the parameters of set of sequences generated by ",
 StyleBox["siteSample",
  FontWeight->"Bold"],
 "\n2) Write code to apply your siteEM function to some provided DNA sequences"
}], "Text",
 CellChangeTimes->{{3.620959025656671*^9, 3.620959043836697*^9}, {
  3.620959081676918*^9, 3.6209591097962303`*^9}, {3.620959310096813*^9, 
  3.620959325436986*^9}}],

Cell[CellGroupData[{

Cell["Provided files", "Subsection",
 CellChangeTimes->{{3.58558939219401*^9, 3.5855893941449203`*^9}, {
  3.589539112993775*^9, 3.589539119281577*^9}},
 FontColor->Automatic],

Cell[TextData[StyleBox["Two \[OpenCurlyDoubleQuote].m\[CloseCurlyDoubleQuote] \
files are provided with this distribution. ",
 FontColor->Automatic]], "Text",
 CellChangeTimes->{{3.585511054430279*^9, 3.585511089917618*^9}, {
  3.585511121620488*^9, 3.585511188876453*^9}, {3.585511236981254*^9, 
  3.585511531292819*^9}, {3.585589550249552*^9, 3.5855895528959713`*^9}, {
  3.585589618879745*^9, 3.585589736988511*^9}, {3.58558982569786*^9, 
  3.585589837879303*^9}, {3.5855898971032*^9, 3.585589953134733*^9}, {
  3.5855899947739897`*^9, 3.5855899989980288`*^9}, {3.585590530378899*^9, 
  3.585590619913625*^9}, {3.585678954137244*^9, 3.585678994249689*^9}, {
  3.585915486586301*^9, 3.5859154875789137`*^9}, {3.585915517778281*^9, 
  3.5859155219063597`*^9}, {3.5860220289383497`*^9, 3.586022029501439*^9}, {
  3.589537566200644*^9, 3.5895376322742043`*^9}, {3.589537713850307*^9, 
  3.589537882545096*^9}, {3.6209595036570053`*^9, 3.620959504056703*^9}},
 FontColor->RGBColor[0.5, 0, 0.5]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["The code you are to write for this part of the motif \
finder lives in siteEMAssignment.m, which contains shells for some high level \
functions. ",
 FontColor->Automatic]], "Item",
 CellChangeTimes->{{3.585511054430279*^9, 3.585511089917618*^9}, {
   3.585511121620488*^9, 3.585511188876453*^9}, {3.585511236981254*^9, 
   3.585511531292819*^9}, {3.585589550249552*^9, 3.5855895528959713`*^9}, {
   3.585589618879745*^9, 3.585589736988511*^9}, {3.58558982569786*^9, 
   3.585589837879303*^9}, {3.5855898971032*^9, 3.585589953134733*^9}, {
   3.5855899947739897`*^9, 3.5855899989980288`*^9}, {3.585590530378899*^9, 
   3.585590619913625*^9}, {3.585678954137244*^9, 3.585678994249689*^9}, {
   3.585915486586301*^9, 3.5859154875789137`*^9}, {3.585915517778281*^9, 
   3.5859155219063597`*^9}, {3.5860220289383497`*^9, 3.586022029501439*^9}, {
   3.589537566200644*^9, 3.5895376322742043`*^9}, {3.589537713850307*^9, 
   3.589537882545096*^9}, {3.589537929388814*^9, 3.58953792974583*^9}, 
   3.589541203805993*^9, {3.589569122929731*^9, 3.589569123682303*^9}, {
   3.620957280756751*^9, 3.6209572810765743`*^9}},
 FontColor->RGBColor[0.5, 0, 0.5]],

Cell[TextData[StyleBox["tools.m contains a few small tools that are either \
for analyzing your results or are generally useful for handling DNA data. The \
most important for you is a function for reading in \
\[OpenCurlyDoubleQuote].fasta\[CloseCurlyDoubleQuote] or \
\[OpenCurlyDoubleQuote].fa\[CloseCurlyDoubleQuote] files of DNA sequence, \
converting A,C,G,T to 1, 2, 3, 4, respectively, and taking care of a few \
other little details.",
 FontColor->Automatic]], "Item",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQfePI2YsXt71yVIi1vQaiuW4b3wLRz7nnPALR+Wnz
X4DoY3GZvJeAdMif46o/gPSZ1TJqIPq+WoweiH60UN4WRN8LMfMA0Q7KezxB
dJavciCI3uOvEgGi245ExILoW+/vg+mP8j4LwOpsaleDaL8Ul7PK2185lvx1
vwSifx265D0dSJe1fQLT657v8AfRzxhsA0D0N7Z5gaeB9CnuDWB6bfaxx/X7
Xjl6HON4A6K3m1p/A9G5hYHcDUBaq1BHEERfv2sOpl95pEmAaLcMZnkQPeF2
tgqI5t0uowGiw7R3r2kE0smXVq4H0QDEia1+
  "],
 FontColor->RGBColor[0.5, 0, 0.5]]
}, Open  ]],

Cell[TextData[{
 "Unlike previous assignments, ",
 StyleBox["no test cases will be provided ",
  FontWeight->"Bold"],
 "with this assignment; code and output will be graded manually, with \
criteria provided below."
}], "Text",
 CellChangeTimes->{{3.620959548256955*^9, 3.620959620656638*^9}}],

Cell["\<\
Finally, some data to work with: two DNA sequence files are provided with \
this distribution.\
\>", "Text",
 CellChangeTimes->{{3.589538552114108*^9, 3.589538582738183*^9}, {
  3.620959640637843*^9, 3.620959655216627*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["test.fasta is a small file with about 10 short DNA \
sequences containing a motif that can be found by the EM algorithm. These are \
artificial sequences, not taken from a real genome. Useful for mid stage \
testing of basic function, but success by no means guarantees success on \
promoters taken from a real genome sequence.",
 FontColor->Automatic]], "Item",
 CellChangeTimes->{{3.585511054430279*^9, 3.585511089917618*^9}, {
   3.585511121620488*^9, 3.585511188876453*^9}, {3.585511236981254*^9, 
   3.585511531292819*^9}, {3.585589550249552*^9, 3.5855895528959713`*^9}, {
   3.585589618879745*^9, 3.585589736988511*^9}, {3.58558982569786*^9, 
   3.585589837879303*^9}, {3.5855898971032*^9, 3.585589953134733*^9}, {
   3.5855899947739897`*^9, 3.5855899989980288`*^9}, {3.585590530378899*^9, 
   3.585590619913625*^9}, {3.585678954137244*^9, 3.585678994249689*^9}, {
   3.585915486586301*^9, 3.5859154875789137`*^9}, {3.585915517778281*^9, 
   3.5859155219063597`*^9}, {3.5860220289383497`*^9, 3.586022029501439*^9}, {
   3.589537566200644*^9, 3.5895376322742043`*^9}, {3.589537713850307*^9, 
   3.589537882545096*^9}, {3.589537929388814*^9, 3.58953792974583*^9}, {
   3.5895379871964006`*^9, 3.5895380401064787`*^9}, {3.589538083370552*^9, 
   3.589538112897345*^9}, {3.589538653595057*^9, 3.589538679641904*^9}, {
   3.5895387681247396`*^9, 3.589538803338336*^9}, {3.589539162148449*^9, 
   3.589539288282394*^9}, 3.620959696458791*^9},
 FontColor->RGBColor[0.5, 0, 0.5]],

Cell[TextData[StyleBox["motifs1.fasta contains about 60 promoter sequences \
from the yeast genome. These sequences were selected such that most or all of \
them should contain a real motif for a real yeast transcription factor. You \
will need one or both of the \[OpenCurlyDoubleQuote]fix-ups\
\[CloseCurlyDoubleQuote] to make your algorithm work on this, and you will \
also need a decently fast implementation or a fast computer unless you\
\[CloseCurlyQuote]re willing to let it run for on the order of 30-60 minutes. \
Success on these sequences is not required for some parts of this assignment. \
See the rubric for details.",
 FontColor->Automatic]], "Item",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQfePI2YsXt71yVIi1vQaiuW4b3wLRz7nnPALR+Wnz
X4DoY3GZvJeAdMif46o/gPSZ1TJqIPq+WoweiH60UN4WRN8LMfMA0Q7KezxB
dJavciCI3uOvEgGi245ExILoW+/vg+mP8j4LwOpsaleDaL8Ul7PK2185lvx1
vwSifx265D0dSJe1fQLT657v8AfRzxhsA0D0N7Z5gaeB9CnuDWB6bfaxx/X7
Xjl6HON4A6K3m1p/A9G5hYHcDUBaq1BHEERfv2sOpl95pEmAaLcMZnkQPeF2
tgqI5t0uowGit3JtzgbRVV1f8kD0vb/MVSB62eWsOhAtccBlNYiO5+TcDaLl
fgjsB9EHRB5cBNEA047H2Q==
  "],
 FontColor->RGBColor[0.5, 0, 0.5]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Input, output, and data structures", "Subsection",
 CellChangeTimes->{{3.58558939219401*^9, 3.5855893941449203`*^9}, {
  3.589539492078855*^9, 3.5895394993139343`*^9}},
 FontColor->Automatic],

Cell[TextData[{
 "PWMs (the ",
 StyleBox["siteFreqs",
  FontWeight->"Bold"],
 " variable) will be represented as they were in ",
 StyleBox["sitePosteriors",
  FontWeight->"Bold"],
 ": a list of lists, with one sublist for each position in the motif.  Each \
of these sublists should be 4 elements long, with the 4 spaces specifying the \
probabilities for seeing A, C, G, and T in that position (in that order).  \
The probabilities in any single sublist should sum to 1.  \
We\[CloseCurlyQuote]ve found that having one sublist for each position in the \
PWM is much more convenient than having one sublist for each of the four \
bases, so we ask that you use that representation."
}], "Text",
 CellChangeTimes->{{3.620961191837326*^9, 3.620961373377495*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The background (\[OpenCurlyDoubleQuote]non-motif\[CloseCurlyDoubleQuote]) \
model\
\>", "Subsection",
 CellChangeTimes->{{3.58558939219401*^9, 3.5855893941449203`*^9}, {
   3.589539492078855*^9, 3.5895394993139343`*^9}, {3.589543874889934*^9, 
   3.5895439121706743`*^9}, {3.5895440338899727`*^9, 3.589544042706687*^9}, 
   3.589544246726589*^9, {3.5895841279867277`*^9, 3.589584146294004*^9}},
 FontColor->Automatic],

Cell["\<\
You may choose to keep the background model constant, using all the \
nucleotides to estimate it just once, regardless of the posteriors. \
Alternatively, you may update it on every round of EM. This choice should not \
make much difference in the normal situation, where true motif occurrences \
are responsible for a very small percentage of the input. However, if your \
motif is very short (hence it may occur frequently) or the lambda estimate \
grows very close to 1, it could make a difference.\
\>", "Text",
 CellChangeTimes->{{3.589584148678293*^9, 3.589584419037992*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pseudocounts", "Subsection",
 CellChangeTimes->{{3.58558939219401*^9, 3.5855893941449203`*^9}, {
   3.589539492078855*^9, 3.5895394993139343`*^9}, {3.589543874889934*^9, 
   3.5895439121706743`*^9}, {3.5895440338899727`*^9, 3.589544042706687*^9}, 
   3.589544246726589*^9, {3.589553219059568*^9, 3.589553221225753*^9}},
 FontColor->Automatic],

Cell["\<\
For the expected counts that go into updating the motif, Bailey & Elkan use \
the normalized frequencies of the nucleotides in the input times a \
user-defined constant. For simplicity we\[CloseCurlyQuote]ll make that \
constant 1.\
\>", "Text",
 CellChangeTimes->{{3.589553230377996*^9, 3.589553352601717*^9}, {
  3.589553558994801*^9, 3.589553691819578*^9}, {3.620961035179542*^9, 
  3.620961049697451*^9}}],

Cell["\<\
In addition, you can save yourself a whole lot of trouble by making sure that \
the estimated probabilities of nucleotides in the input sequences are never \
zero. This is helpful when using tiny test data sets. In a \"real\" set of \
input sequences no nucleotide would ever have frequency zero, so there is a \
strong reason to believe that all nucleotides will have non-zero \
probabilities. Therefore, pseudocounts (which implement this prior belief) \
are well justified.\
\>", "Text",
 CellChangeTimes->{{3.589553230377996*^9, 3.589553352601717*^9}, {
  3.589553558994801*^9, 3.589553867313098*^9}, {3.5895839068342323`*^9, 
  3.589583936573751*^9}}],

Cell["\<\
You can implement this pseudocount when turning your expected base counts \
into frequencies.  After you calculate your counts, but before you normalize \
them, you can add a small count (e.g. 1) to every base in every position, \
ensuring that your code never believes there is absolutely zero chance of \
seeing a base in a certain position.  You can do this for the background \
probabilities as well, though it will likely only make a difference with very \
small sample sizes.\
\>", "Text",
 CellChangeTimes->{{3.620961054837511*^9, 3.620961177377372*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tips", "Section",
 CellChangeTimes->{{3.585512173665118*^9, 3.585512174397122*^9}, {
  3.6209597486778812`*^9, 3.620959749236959*^9}}],

Cell["\<\
You should probably write and test each of the following elements separately, \
or with some isolation from the rest of your code: 
1) Getting expected base counts given sequences and posteriors
2) Getting updated parameters given those expected base counts
3) Checking for convergence given your updated parameters
4) Importing sequences from a file and turning them into windows to perform \
inference on\
\>", "Text",
 CellChangeTimes->{{3.6209597650768557`*^9, 3.620959881876953*^9}, {
  3.6209603817394447`*^9, 3.620960455717164*^9}}],

Cell[TextData[{
 "Obviously, you don\[CloseCurlyQuote]t have to follow this advice to the \
letter, or at all.  The main point I\[CloseCurlyQuote]m trying to make is \
that, just as in ",
 StyleBox["diceEM",
  FontWeight->"Bold"],
 ", there are several small moving pieces here that can be decomposed, and \
working on them separately can be much faster than implementing everything, \
then trying to debug it all at once.  Keeping this in mind will likely pay \
off in your future programming projects, both in this class and beyond."
}], "Text",
 CellChangeTimes->{{3.620959890717033*^9, 3.620959991297159*^9}}],

Cell["\<\
If you are having trouble breaking down your code to fix it, I recommend \
using this notebook as a scratch space.  Initialize whatever variables you \
need to in order to run the piece of code you are trying to debug to allow \
yourself to quickly edit and rerun that piece of code until it works.\
\>", "Text",
 CellChangeTimes->{{3.620960003517148*^9, 3.620960053157091*^9}, {
  3.620960235293785*^9, 3.620960260876766*^9}}],

Cell["\<\
In practice, this is what people do when writing unit tests.  When testing an \
individual function or object, they start a test by writing code to set up \
the environment in which they want to test that function or object, allowing \
them some control over what they are testing.  You can use \
siteEMAssignment.mt (which starts off blank) to actually write your own unit \
tests, if you\[CloseCurlyQuote]d like, though they aren\[CloseCurlyQuote]t \
required.  In larger projects, unit tests can be helpful both for making sure \
you fit your own implementation criteria, and for making sure that future \
additions to your code base do not break old functionality.\
\>", "Text",
 CellChangeTimes->{{3.620960058657124*^9, 3.620960222097332*^9}}],

Cell["\<\
Good things to check for and get running first are getting output of the \
correct shape and in the correct ranges (i.e. lengths of lists, probabilities \
between 0 and 1, distributions summing up to 1).\
\>", "Text",
 CellChangeTimes->{{3.589569939710196*^9, 3.589570001866015*^9}, {
  3.620960498477232*^9, 3.620960544197281*^9}}],

Cell["\<\
Also, the EM algorithm does not require you to explicitly calculate the log \
likelihood of the entire data set under the estimated parameters, but it\
\[CloseCurlyQuote]s not hard to do. This could make a very useful high level \
test which does not require knowing the right answer for all the calculations \
-- if your implementation is correct, no iteration of EM should decrease the \
log likelihood, and in general each interation should increase the log \
likelihood until convergence.\
\>", "Text",
 CellChangeTimes->{{3.58954756876147*^9, 3.589547610633979*^9}, {
  3.589547680018178*^9, 3.589547959354136*^9}, {3.589570007068594*^9, 
  3.589570017658334*^9}, {3.6209605871771097`*^9, 3.6209605888372517`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Instructions and grading", "Section",
 CellChangeTimes->{{3.585589085899582*^9, 3.585589086700222*^9}, {
   3.586022771579047*^9, 3.586022775165971*^9}, {3.589547506333993*^9, 
   3.589547525506456*^9}, 3.589578378913684*^9}],

Cell["\<\
Please turn in your .m file containing the code and sufficient documentation \
to read and understand it, as well as this notebook with results from \
evaulating:\
\>", "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQfUezK/fK1leOvtHrG0H0ng22bSA6I2LPahBdZPBt
PYiWeldyEESfmFZu+xVId2hpOYPotMgXsSBaMvxpKYjWmh5VDaKXpaysB9Gz
r71X/QWk1xyV0gbRDer3TwRsf+W4I+fGSRB9/obfqdNAeoHlwgsgWvOlyC0Q
PV1L7AWIFvtSFDN53yvHbwdu5ILoI9UORSB6k71fJYjeMyO1DizurDwLRMu9
lFsMoqN2N+4G0af85+8H0bZ8S8+A6HunWq6AaHUljXsgmiHj6WMQvZ6D7ymI
niE65wuI3rXqCph+aLaNdQqQTt3+jR1E3/Hkty349cpReb0qmAYAwNi8GA==

  "]],

Cell[TextData[{
 "(You may need to right click -> \[OpenCurlyDoubleQuote]Run as ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote] on this notebook from Workbench to have access to \
tools.m)"
}], "Text",
 CellChangeTimes->{{3.620963380777725*^9, 3.620963414537921*^9}}],

Cell[BoxData[{
 RowBox[{"<<", 
  "\"\</home/gnegri/Documents/bio5495-gnegri/mod02Motif/siteEMAssignment/\
siteEMAssignment.m\>\""}], "\[IndentingNewLine]", 
 RowBox[{"<<", 
  "\"\</home/gnegri/Documents/bio5495-gnegri/mod02Motif/siteEMAssignment/\
tools.m\>\""}]}], "Input",
 CellChangeTimes->{{3.620962795013014*^9, 3.620962800198546*^9}, {
  3.62128186088571*^9, 3.621281890743314*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sampleMotif", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{".1", ",", " ", ".1", ",", " ", ".1", ",", " ", ".7"}], "}"}], 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{".7", ",", " ", ".1", ",", " ", ".1", ",", " ", ".1"}], "}"}], 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{".2", ",", " ", ".05", ",", " ", ".05", ",", " ", ".7"}], 
       "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{".8", ",", " ", 
        RowBox[{".2", "/", "3"}], ",", " ", 
        RowBox[{".2", "/", "3"}], ",", " ", 
        RowBox[{".2", "/", "3"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{".1", ",", " ", ".1", ",", " ", ".1", ",", " ", ".7"}], "}"}], 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{".7", ",", " ", ".1", ",", " ", ".1", ",", " ", ".1"}], "}"}], 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{".2", ",", " ", ".05", ",", " ", ".05", ",", " ", ".7"}], 
       "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{".8", ",", " ", 
        RowBox[{".2", "/", "3"}], ",", " ", 
        RowBox[{".2", "/", "3"}], ",", " ", 
        RowBox[{".2", "/", "3"}]}], "}"}]}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", "TATATATA", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"backgroundFreqs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{".2", ",", " ", ".3", ",", " ", ".3", ",", " ", ".2"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"samples", " ", "=", " ", 
   RowBox[{"siteSample", "[", 
    RowBox[{
    ".25", ",", " ", ".75", ",", " ", "sampleMotif", ",", " ", 
     "backgroundFreqs", ",", " ", "1000"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "finalSiteProb", ",", " ", "finalBackgroundProb", ",", " ", 
    "finalSiteFreqs", ",", " ", "finalBackgroundFreqs"}], "}"}], " ", "=", 
  " ", 
  RowBox[{"siteEM", "[", 
   RowBox[{"samples", ",", " ", "2", ",", " ", ".1"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"pwmConsensus", "[", "finalSiteFreqs", "]"}]}], "Input",
 CellChangeTimes->{{3.6209629050887547`*^9, 3.6209629716012278`*^9}, {
   3.621281851798809*^9, 3.621281856939446*^9}, 3.62128196517135*^9, {
   3.621282539271758*^9, 3.62128255127427*^9}, {3.62128258321465*^9, 
   3.621282583250601*^9}, {3.621283039720809*^9, 3.621283068106421*^9}, 
   3.621283185873662*^9, {3.621283483864831*^9, 3.621283497457112*^9}, {
   3.621342278804151*^9, 3.621342281985941*^9}, {3.621342568473895*^9, 
   3.621342592054783*^9}, {3.621342815895622*^9, 3.621342848186194*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.2780256478032091`", ",", "0.7219743521967908`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.16800117973030068`", ",", "0.26899972664785715`", ",", 
       "0.24400008632172934`", ",", "0.3189990073001128`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.31799902168706773`", ",", "0.2629998129695865`", ",", 
       "0.25199997122609025`", ",", "0.16700119411725559`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.2050006474129699`", ",", "0.25`", ",", "0.2260003452869173`", ",", 
       "0.3189990073001128`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.34799859007842115`", ",", "0.2599998561304512`", ",", 
       "0.23800017264345866`", ",", "0.1540013811476691`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.15800132359984953`", ",", "0.26899972664785715`", ",", 
       "0.26699975542176696`", ",", "0.3059991943305264`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.32699889220447376`", ",", "0.24000014386954888`", ",", 
       "0.2569998992913158`", ",", "0.17600106463466159`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.19700076250860898`", ",", "0.23100027335214285`", ",", 
       "0.2549999280652256`", ",", "0.31699903607402263`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.3389987195610151`", ",", "0.24600005754781953`", ",", 
       "0.2509999856130451`", ",", "0.16400123727812024`"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "0.22474793468741622`", ",", "0.28345646629249055`", ",", 
     "0.2800255815521895`", ",", "0.21177001746790383`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.621281895004364*^9, {3.621281958484816*^9, 3.621281968255838*^9}, 
   3.621282414275292*^9, {3.621282571391058*^9, 3.621282579545298*^9}, 
   3.621282641709858*^9, 3.621282826037564*^9, {3.621283052346628*^9, 
   3.621283075023313*^9}, {3.621283193382616*^9, 3.621283213152537*^9}, {
   3.621283488108683*^9, 3.621283502093109*^9}, 3.621283681909418*^9, {
   3.621284658793507*^9, 3.621284676151964*^9}, 3.621339423728142*^9, 
   3.621339500209492*^9, 3.621340965099075*^9, 3.621341244549613*^9, 
   3.621342140276166*^9, 3.621342299541462*^9, {3.621342574336627*^9, 
   3.621342593867182*^9}, 3.621342738582401*^9, {3.621342828655397*^9, 
   3.621342849978033*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"T\"\>", ",", "\<\"A\"\>", ",", "\<\"T\"\>", ",", "\<\"A\"\>", 
   ",", "\<\"T\"\>", ",", "\<\"A\"\>", ",", "\<\"T\"\>", ",", "\<\"A\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.621281895004364*^9, {3.621281958484816*^9, 3.621281968255838*^9}, 
   3.621282414275292*^9, {3.621282571391058*^9, 3.621282579545298*^9}, 
   3.621282641709858*^9, 3.621282826037564*^9, {3.621283052346628*^9, 
   3.621283075023313*^9}, {3.621283193382616*^9, 3.621283213152537*^9}, {
   3.621283488108683*^9, 3.621283502093109*^9}, 3.621283681909418*^9, {
   3.621284658793507*^9, 3.621284676151964*^9}, 3.621339423728142*^9, 
   3.621339500209492*^9, 3.621340965099075*^9, 3.621341244549613*^9, 
   3.621342140276166*^9, 3.621342299541462*^9, {3.621342574336627*^9, 
   3.621342593867182*^9}, 3.621342738582401*^9, {3.621342828655397*^9, 
   3.621342849980452*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{"testLambda", ",", " ", "testMotif"}], "}"}], " ", "=", " ", 
  RowBox[{"siteEMFasta", "[", 
   RowBox[{
   "\"\</home/gnegri/Documents/bio5495-gnegri/mod02Motif/siteEMAssignment/\
motifs1.fasta\>\"", ",", " ", "2", ",", " ", "2", ",", " ", "10."}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"pwmConsensus", "[", "testMotif", "]"}]}], "Input",
 CellChangeTimes->{{3.59010135395781*^9, 3.590101356013929*^9}, {
   3.620962704021804*^9, 3.620962711498884*^9}, {3.620962750839342*^9, 
   3.620962787498798*^9}, {3.620962817601475*^9, 3.6209628340973577`*^9}, {
   3.620962867658649*^9, 3.620962868179305*^9}, 3.621282087402738*^9, {
   3.621282945853934*^9, 3.621282947597529*^9}, {3.62128311048239*^9, 
   3.621283111167514*^9}, {3.62133939586309*^9, 3.621339396650725*^9}, 
   3.621339451960933*^9, {3.621342857634327*^9, 3.62134286775536*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.21541460068817103`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.30780987924170333`", ",", "0.18906526242090727`", ",", 
       "0.18125311657743381`", ",", "0.32187174175995553`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.29999773339822994`", ",", "0.19219012075829664`", ",", 
       "0.18125311657743381`", ",", "0.3265590292660396`"}], "}"}]}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.621282563843301*^9, 3.621282955052903*^9, 3.621283349630377*^9, 
   3.621283706835405*^9, 3.621284709093107*^9, 3.621339431314126*^9, 
   3.621339464323218*^9, 3.621339509532445*^9, 3.621340971640635*^9, 
   3.621341251967175*^9, 3.621341565121659*^9, 3.621341661829971*^9, 
   3.621342048643854*^9, 3.621342554925771*^9, 3.621342598285728*^9, 
   3.621342743031412*^9, {3.621342858609336*^9, 3.621342869049233*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"T\"\>", ",", "\<\"T\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.621282563843301*^9, 3.621282955052903*^9, 3.621283349630377*^9, 
   3.621283706835405*^9, 3.621284709093107*^9, 3.621339431314126*^9, 
   3.621339464323218*^9, 3.621339509532445*^9, 3.621340971640635*^9, 
   3.621341251967175*^9, 3.621341565121659*^9, 3.621341661829971*^9, 
   3.621342048643854*^9, 3.621342554925771*^9, 3.621342598285728*^9, 
   3.621342743031412*^9, {3.621342858609336*^9, 3.621342869051165*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{"yeastLambda", ",", " ", "yeastMotif"}], "}"}], " ", "=", " ", 
  RowBox[{"siteEMFasta", "[", 
   RowBox[{
   "\"\</home/gnegri/Documents/bio5495-gnegri/mod02Motif/siteEMAssignment/\
test.fasta\>\"", ",", " ", "8", ",", " ", "200", ",", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "2"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"pwmConsensus", "[", "yeastMotif", "]"}]}], "Input",
 CellChangeTimes->{{3.590101365692377*^9, 3.590101365693696*^9}, {
   3.590101759368774*^9, 3.590101760560741*^9}, {3.5901032357053757`*^9, 
   3.590103243550659*^9}, {3.590103335021187*^9, 3.590103336284058*^9}, {
   3.590103405227487*^9, 3.590103529941786*^9}, {3.5903236460934877`*^9, 
   3.59032364657425*^9}, {3.5903238093206472`*^9, 3.5903238100396967`*^9}, {
   3.620962723979122*^9, 3.6209627337390127`*^9}, {3.620962837958878*^9, 
   3.620962873439186*^9}, 3.621282090174965*^9, {3.621339401353524*^9, 
   3.621339401612817*^9}, {3.621342873306604*^9, 3.621342875945412*^9}, {
   3.621342907181128*^9, 3.621342911501976*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.14436787063231873`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.3023715962060934`", ",", "0.19719026603047685`", ",", 
       "0.18444187046229543`", ",", "0.3159962673011343`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.30279560049328347`", ",", "0.19727506688791485`", ",", 
       "0.18432880265237808`", ",", "0.3156005299664235`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.30305000306559754`", ",", "0.19730333384039422`", ",", 
       "0.18407440008006404`", ",", "0.3155722630139442`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.3033326725903909`", ",", "0.19735986774535286`", ",", 
       "0.18415920093750204`", ",", "0.31514825872675417`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.3038697446874983`", ",", "0.19730333384039422`", ",", 
       "0.18413093398502273`", ",", "0.3146959874870847`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.30398281249741566`", ",", "0.19730333384039422`", ",", 
       "0.183989599222626`", ",", "0.3147242544395641`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.30403934640237434`", ",", "0.19744466860279092`", ",", 
       "0.18384826446022937`", ",", "0.31466772053460546`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.30426548202220904`", ",", "0.19719026603047685`", ",", 
       "0.18393306531766734`", ",", "0.3146111866296467`"}], "}"}]}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{3.621341034568974*^9, 3.621341280700402*^9, 
  3.621342091143163*^9, 3.62134263932903*^9, 3.621342783572053*^9, 
  3.621342901456564*^9, 3.621342949582592*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"T\"\>", ",", "\<\"T\"\>", ",", "\<\"T\"\>", ",", "\<\"T\"\>", 
   ",", "\<\"T\"\>", ",", "\<\"T\"\>", ",", "\<\"T\"\>", ",", "\<\"T\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.621341034568974*^9, 3.621341280700402*^9, 
  3.621342091143163*^9, 3.62134263932903*^9, 3.621342783572053*^9, 
  3.621342901456564*^9, 3.621342949585206*^9}]
}, Open  ]],

Cell["\<\
If this last cell is taking too long, try decreasing the iterations or \
increasing the accuracy threshold.  If what you get is still reasonably close \
to MEME\[CloseCurlyQuote]s output, you will satisfy the \
\[OpenCurlyDoubleQuote]match MEME\[CloseCurlyDoubleQuote] soft requirement in \
the grading criteria below.\
\>", "Text",
 CellChangeTimes->{{3.620963209558025*^9, 3.620963264617812*^9}, {
  3.620963303500346*^9, 3.620963332977839*^9}}],

Cell[TextData[{
 "\nThe rubric for this includes the possibility of extra credit points, so \
please read to the end of the file. The basic assignment will be graded as \
follows.\n\nA. 1 point for giving yourself that pat on the back!  I haven\
\[CloseCurlyQuote]t asked Michael about this, but I\[CloseCurlyQuote]m sure \
he\[CloseCurlyQuote]ll OK it.  Seriously, though, this point is for an \
implementation of siteEM that outputs with the correct form: probabilities \
between 1 and 0, distributions summing to 1, output motifs sized \
appropriately to the input samples.\n\nB. 1 point for inferring the correct \
consensus sequence to a large call to siteSample (i.e. a motif of width 8, \
with 5000 samples), with high probability (at least 2/3 times).  I got this \
with siteEM[samples, 50, .001], but you may be able to pass this with less \
stringency.\n\nC. 1 point for inferring the correct consensus sequence to the \
provided test.fasta and motifs1.fasta files.  If you are getting  sequences \
very similar to that found on the MEME website, you ",
 StyleBox["will",
  FontWeight->"Bold"],
 " get this point.\n\nD. 1 point for code that is correct; inspection of your \
updateProbs and siteEM should reveal correct usage of expected counts to \
calculate probabilities, etc.\n\nE. 1 point for for style (things such as \
capitalization and full, descriptive names) and legibility, including \
indentation, line breaks, and comments. Use of global variables, i.e. \
variables that are not protected by ",
 StyleBox["Module",
  FontFamily->"Courier"],
 ", ",
 StyleBox["Block",
  FontFamily->"Courier"],
 ", or ",
 StyleBox["With",
  FontFamily->"Courier"],
 " is considered very bad style."
}], "Text",
 CellChangeTimes->CompressedData["
1:eJwdyEsowwEAx/F/2MFlB83KGJk0/kquDmP/XFyMHLw5bGgH89imNcurSUhJ
HtPUkEdEDSVimDyav8ccloZFQm1/78zUDvj/dvj2qW+ivKGwJowgiAQ26Ent
U7nWGCqv3NoJbcuSbqgssS1CdUbACgVv2j3oGNVJvll7SDIH1pZ6K2FM8VMz
JE1lBjhXvdAOxy/fk4OsS4eCNNghvnMUrDPURp37GDrdMvqEdTJz6gKm+njX
0ETyvZDvV1cM7TBUwO5WwQODVA1Xs2V6aBuraQv9nCQzjPfFT8Oyrc4tSOdP
7EIJd/YU3tJdLigWpdxCQvn0AGdiFT4YITd8Q8FRcgC+tP5GD7NmiXuF8Co6
MgV+aoQh9cYqGn5pn8/hjodyQXreEnLf8Xr6t8tQTZo1JzTOcLSqIEN5B0w6
mP5+P9jA2k9YRuCHc9MM/87MK5Cn3F6H9p85J3yU5t5ACz/OD7mlgaJGVk94
fQnM4HL00Cp1t8CoEb0R5okUXfAfajElJw==
  "]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{914, 364},
WindowMargins->{{Automatic, 0}, {0, Automatic}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
ShowSelection->True,
FrontEndVersion->"9.0 for Linux x86 (32-bit) (February 7, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 297, 4, 92, "Title"],
Cell[879, 28, 661, 12, 90, "Text"],
Cell[1543, 42, 1155, 21, 151, "Text"],
Cell[CellGroupData[{
Cell[2723, 67, 92, 1, 80, "Section"],
Cell[2818, 70, 621, 20, 68, "Text"],
Cell[3442, 92, 396, 8, 49, "Text"],
Cell[CellGroupData[{
Cell[3863, 104, 175, 3, 44, "Subsection"],
Cell[4041, 109, 992, 14, 31, "Text"],
Cell[CellGroupData[{
Cell[5058, 127, 1170, 17, 45, "Item"],
Cell[6231, 146, 897, 16, 83, "Item"]
}, Open  ]],
Cell[7143, 165, 293, 7, 49, "Text"],
Cell[7439, 174, 233, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[7697, 183, 1501, 21, 79, "Item"],
Cell[9201, 206, 1136, 19, 136, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10386, 231, 197, 3, 44, "Subsection"],
Cell[10586, 236, 759, 15, 131, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11382, 256, 427, 8, 44, "Subsection"],
Cell[11812, 266, 591, 9, 125, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12440, 280, 348, 5, 44, "Subsection"],
Cell[12791, 287, 419, 8, 70, "Text"],
Cell[13213, 297, 666, 11, 106, "Text"],
Cell[13882, 310, 571, 9, 125, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14502, 325, 140, 2, 80, "Section"],
Cell[14645, 329, 549, 10, 125, "Text"],
Cell[15197, 341, 613, 11, 111, "Text"],
Cell[15813, 354, 437, 7, 68, "Text"],
Cell[16253, 363, 758, 11, 131, "Text"],
Cell[17014, 376, 342, 6, 49, "Text"],
Cell[17359, 384, 729, 11, 91, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18125, 400, 231, 3, 80, "Section"],
Cell[18359, 405, 596, 13, 49, "Text"],
Cell[18958, 420, 298, 7, 31, "Text"],
Cell[19259, 429, 388, 8, 77, "Input"],
Cell[CellGroupData[{
Cell[19672, 441, 2586, 63, 187, "Input"],
Cell[22261, 506, 2376, 53, 143, "Output"],
Cell[24640, 561, 895, 15, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25572, 581, 899, 16, 121, "Input"],
Cell[26474, 599, 912, 20, 55, "Output"],
Cell[27389, 621, 530, 9, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27956, 635, 1077, 19, 121, "Input"],
Cell[29036, 656, 1684, 40, 121, "Output"],
Cell[30723, 698, 383, 7, 65, "Output"]
}, Open  ]],
Cell[31121, 708, 457, 8, 70, "Text"],
Cell[31581, 718, 2284, 43, 426, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
