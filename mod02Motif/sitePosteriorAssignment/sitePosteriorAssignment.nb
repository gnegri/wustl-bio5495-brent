(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     12773,        315]
NotebookOptionsPosition[     11878,        280]
NotebookOutlinePosition[     12232,        296]
CellTagsIndexPosition[     12189,        293]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Programming exercise: Posterior probabilities", "Section",
 CellChangeTimes->{{3.584990522242609*^9, 3.584990533174054*^9}, {
  3.585057066962536*^9, 3.585057079454668*^9}}],

Cell[TextData[{
 StyleBox["Just",
  FontWeight->"Bold"],
 " as we did ",
 StyleBox["dicePosterior",
  FontWeight->"Bold"],
 " right after ",
 StyleBox["diceSample",
  FontWeight->"Bold"],
 ", now we\[CloseCurlyQuote]ll be doing ",
 StyleBox["sitePosterior",
  FontWeight->"Bold"],
 " after ",
 StyleBox["siteSample",
  FontWeight->"Bold"],
 ".  If you haven\[CloseCurlyQuote]t done ",
 StyleBox["siteSample",
  FontWeight->"Bold"],
 ", go do it!"
}], "Text",
 CellChangeTimes->{{3.620686225038673*^9, 3.620686249061878*^9}, {
  3.620688311558206*^9, 3.62068831754191*^9}}],

Cell["\<\
The experimental setup is the same in this as in siteSample -- a bag \
containing two types of sequences with different probabilities of seeing each \
base. Someone selects a sequence from the bag at random, records the bases \
present, returns it to the bag, and repeats the process. Here, you will write \
code that calculates the posterior probability of each sequence type for each \
draw, given the observed bases for that draw, the probability distribution on \
bases given the sequence type, and the prior probabilities of the two \
sequence types.\
\>", "Text",
 CellChangeTimes->{{3.584990554288546*^9, 3.584990675668972*^9}, {
  3.584990706613673*^9, 3.584990827957404*^9}, {3.584990928240103*^9, 
  3.5849912338312187`*^9}, {3.58499135379578*^9, 3.5849914177019157`*^9}, {
  3.585057086798938*^9, 3.585057285133329*^9}, {3.5850573279090223`*^9, 
  3.585057372165312*^9}, {3.5850574181094837`*^9, 3.5850574387199717`*^9}, {
  3.620686284299654*^9, 3.620686311602668*^9}, {3.620688323493874*^9, 
  3.620688331453307*^9}, {3.620689358964869*^9, 3.6206894337850037`*^9}}],

Cell[TextData[{
 StyleBox["Before starting to do anything in Mathematica, sit down with a pen \
and paper and write the formula for the posterior probability of each \
sequence type as a function of its prior probability, the probability \
distribution on bases for each sequence type, and the bases actually observed \
when a die of that type is rolled.  ",
  FontWeight->"Bold"],
 "Since there are only two possible sequence types, the posteriors of these \
two types must sum to one. To get the posteriors, you will use Bayes rule. \
This will give you something of the form x/(x + y). Dividing by the numerator \
yields something of the form ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"y", "/", "x"}]}]], TraditionalForm]]],
 "which is a convenient form for calculations."
}], "Text",
 CellChangeTimes->{{3.585057445838188*^9, 3.5850575189893627`*^9}, {
  3.585057549921026*^9, 3.585057905317073*^9}, {3.585058099590743*^9, 
  3.5850581163975477`*^9}, {3.585770797174333*^9, 3.585770798963327*^9}, {
  3.6191826294213343`*^9, 3.6191826304159927`*^9}, {3.619182684108712*^9, 
  3.6191827615152082`*^9}, {3.619182968667404*^9, 3.619183204769086*^9}, {
  3.6206894428655853`*^9, 3.6206895001649847`*^9}}],

Cell[CellGroupData[{

Cell["Input and output", "Subsection",
 CellChangeTimes->{{3.58505821613573*^9, 3.585058220583263*^9}}],

Cell["The first line of your function should be:", "Text",
 CellChangeTimes->{{3.584990554288546*^9, 3.584990675668972*^9}, {
   3.584990706613673*^9, 3.584990827957404*^9}, {3.584990928240103*^9, 
   3.5849912338312187`*^9}, {3.58499135379578*^9, 3.5849914177019157`*^9}, {
   3.585057086798938*^9, 3.585057285133329*^9}, {3.5850573279090223`*^9, 
   3.585057372165312*^9}, {3.5850574181094837`*^9, 3.585057436725141*^9}, {
   3.585058225277076*^9, 3.5850582439805098`*^9}, {3.585058502079866*^9, 
   3.585058510125984*^9}, 3.585058649814739*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sitePosterior", "[", 
   RowBox[{
   "sequence_", ",", " ", "sitePrior_", ",", " ", "backgroundPrior_", ",", 
    " ", "siteProbs_", ",", " ", "backgroundProbs_"}], "]"}], " ", 
  ":="}]], "Input",
 CellChangeTimes->{{3.585058661642289*^9, 3.5850586616457167`*^9}, {
  3.585770947799818*^9, 3.585770949750482*^9}, {3.586084930070643*^9, 
  3.5860849385603456`*^9}, {3.586084996373622*^9, 3.586084996428955*^9}, {
  3.620687114410125*^9, 3.6206871964507093`*^9}}],

Cell[TextData[{
 StyleBox["sequence",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " will be the list of bases observed in a draw, expressed in integers, with \
the mapping as described in siteSample:\nA <-> 1\nC <-> 2\nG <-> 3\nT <-> 4\n\
so a list of {1,3,2,4} would correspond to {\[OpenCurlyDoubleQuote]A\
\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]G\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]C\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]T\
\[CloseCurlyDoubleQuote]}.  The length of ",
 StyleBox["sequence",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " must be the same as the length of ",
 StyleBox["siteProbs",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ".\n\n",
 StyleBox["sitePrior",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " and ",
 StyleBox["backgroundPrior",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " are numbers between 0 and 1, inclusive. \n",
 StyleBox["siteProbs",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " and ",
 StyleBox["backgroundProbs",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " are vectors representing the probabilities of producing bases in a \
sequence, as described in ",
 StyleBox["siteSample",
  FontWeight->"Bold"],
 ".  A call will look like:"
}], "Text",
 CellChangeTimes->{{3.584990554288546*^9, 3.584990675668972*^9}, {
  3.584990706613673*^9, 3.584990827957404*^9}, {3.584990928240103*^9, 
  3.5849912338312187`*^9}, {3.58499135379578*^9, 3.5849914177019157`*^9}, {
  3.585057086798938*^9, 3.585057285133329*^9}, {3.5850573279090223`*^9, 
  3.585057372165312*^9}, {3.5850574181094837`*^9, 3.585057436725141*^9}, {
  3.585058225277076*^9, 3.5850582439805098`*^9}, {3.585058502079866*^9, 
  3.585058510125984*^9}, {3.585058649814739*^9, 3.585058779701096*^9}, {
  3.585058846463229*^9, 3.5850590053010178`*^9}, {3.58505905921691*^9, 
  3.585059073573801*^9}, {3.586084958356358*^9, 3.586084978792642*^9}, {
  3.6191833214034224`*^9, 3.619183325233473*^9}, {3.6206871721422653`*^9, 
  3.6206871740776043`*^9}, {3.620687206506463*^9, 3.620687212914386*^9}, {
  3.620687324323244*^9, 3.620687392257015*^9}, {3.620687466747718*^9, 
  3.6206875750188847`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"siteFreqs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{".1", ",", " ", ".4", ",", " ", ".4", ",", " ", ".1"}], "}"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{".1", ",", " ", ".4", ",", " ", ".4", ",", " ", ".1"}], "}"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{".8", ",", " ", ".1", ",", " ", ".1", ",", " ", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{".8", ",", " ", ".1", ",", " ", ".1", ",", " ", "0"}], "}"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"sitePosterior", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", " ", "3", ",", " ", "1", ",", " ", "1"}], "}"}], ",", 
   " ", "0.35", ",", " ", "0.65", ",", " ", "siteFreqs", ",", " ", 
   RowBox[{"{", 
    RowBox[{"0.25", ",", " ", "0.25", ",", " ", "0.25", ",", " ", "0.25"}], 
    "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.584990554288546*^9, 3.584990675668972*^9}, {
   3.584990706613673*^9, 3.584990827957404*^9}, {3.584990928240103*^9, 
   3.5849912338312187`*^9}, {3.58499135379578*^9, 3.5849914177019157`*^9}, {
   3.585057086798938*^9, 3.585057285133329*^9}, {3.5850573279090223`*^9, 
   3.585057372165312*^9}, {3.5850574181094837`*^9, 3.585057436725141*^9}, {
   3.585058225277076*^9, 3.5850582439805098`*^9}, {3.585058502079866*^9, 
   3.585058510125984*^9}, {3.585058649814739*^9, 3.585058779701096*^9}, {
   3.585058846463229*^9, 3.5850590053010178`*^9}, {3.58505905921691*^9, 
   3.5850591203470783`*^9}, 3.58852997558176*^9, {3.6206875802929373`*^9, 
   3.6206876365637836`*^9}, {3.620692571224628*^9, 3.620692580404777*^9}}],

Cell[BoxData["0.9338425085292273`"], "Output",
 CellChangeTimes->{{3.620692554645286*^9, 3.620692581763291*^9}}]
}, Open  ]],

Cell["\<\
The return value should be a single number representing the posterior \
probability that the sequence we drew was from a site bound by a \
transcription factor.\
\>", "Text",
 CellChangeTimes->{{3.584990554288546*^9, 3.584990675668972*^9}, {
   3.584990706613673*^9, 3.584990827957404*^9}, {3.584990928240103*^9, 
   3.5849912338312187`*^9}, {3.58499135379578*^9, 3.5849914177019157`*^9}, {
   3.585057086798938*^9, 3.585057285133329*^9}, {3.5850573279090223`*^9, 
   3.585057372165312*^9}, {3.5850574181094837`*^9, 3.585057436725141*^9}, {
   3.585058225277076*^9, 3.5850582439805098`*^9}, {3.585058502079866*^9, 
   3.585058510125984*^9}, {3.585058649814739*^9, 3.585058779701096*^9}, {
   3.585058846463229*^9, 3.5850590053010178`*^9}, {3.58505905921691*^9, 
   3.585059111051182*^9}, {3.585059145118655*^9, 3.5850592899911613`*^9}, 
   3.585771005051221*^9, 3.619183391377368*^9, {3.620687649090489*^9, 
   3.6206876880091476`*^9}}],

Cell[TextData[{
 "As in ",
 StyleBox["dicePosterior",
  FontWeight->"Bold"],
 ", you should:\n1) Work out the math for what you want to do first!  \
Seriously it\[CloseCurlyQuote]s so much easier that way.\n2) Make sure you \
account for cases where you have a site/backgroundPrior of 0, or you have a 0 \
probability for observing some base in the sequence\n3) Use exact math \
throughout, to avoid precision issues in the tests."
}], "Text",
 CellChangeTimes->{{3.620687702384645*^9, 3.620687724127934*^9}, {
  3.620687983987445*^9, 3.620688088622621*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Instructions and grading", "Subsection",
 CellChangeTimes->{{3.585771468289455*^9, 3.585771475912866*^9}}],

Cell["\<\
Please turn in your .m file containing the code and sufficient documentation \
to read and understand it.

The rubric for this is:

A. 1 point for turning in code that takes input of the right form and \
produces output of the right form between 0 and 1.

B. 1 point for turning in code that is correct when the input contains no \
zeros. You must turn in your assignment on time to get these points.

C. 1 point for turning in code that passes all the tests distributed and is  \
fully correct, including the handling of all combinations of zero inputs. \
Just because your code passes all the provided unit tests does not guarantee \
that it is correct -- you need to think about what\[CloseCurlyQuote]s right.

D.  1 point for style (things such as capitalization and full, descriptive \
names) and legibility, including indentation, line breaks, and comments. You \
must satisfy A and B to get this point.\
\>", "Text",
 CellChangeTimes->{{3.58499210831761*^9, 3.584992269479895*^9}, {
  3.584992305927824*^9, 3.584992605885792*^9}, {3.5849926396934137`*^9, 
  3.584992779654065*^9}, {3.585059307737156*^9, 3.585059353317692*^9}, {
  3.585059567260913*^9, 3.585059759166882*^9}, {3.5850598028309526`*^9, 
  3.585059837293536*^9}, {3.585069359494947*^9, 3.58506940083663*^9}, {
  3.585771078973572*^9, 3.5857710867632713`*^9}, {3.61918346516852*^9, 
  3.61918354376532*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960, 920},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 179, 2, 80, "Section"],
Cell[761, 26, 572, 21, 49, "Text"],
Cell[1336, 49, 1088, 16, 87, "Text"],
Cell[2427, 67, 1248, 23, 117, "Text"],
Cell[CellGroupData[{
Cell[3700, 94, 103, 1, 44, "Subsection"],
Cell[3806, 97, 547, 7, 30, "Text"],
Cell[4356, 106, 497, 10, 28, "Input"],
Cell[4856, 118, 2158, 51, 205, "Text"],
Cell[CellGroupData[{
Cell[7039, 173, 1635, 34, 46, "Input"],
Cell[8677, 209, 112, 1, 30, "Output"]
}, Open  ]],
Cell[8804, 213, 946, 15, 49, "Text"],
Cell[9753, 230, 558, 11, 106, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10348, 246, 112, 1, 44, "Subsection"],
Cell[10463, 249, 1387, 27, 296, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
