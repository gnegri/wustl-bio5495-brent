(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    448650,       8586]
NotebookOptionsPosition[    445148,       8476]
NotebookOutlinePosition[    445772,       8500]
CellTagsIndexPosition[    445729,       8497]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Dynamics of a repressor and its target", "Section",
 CellChangeTimes->{{3.560380356695088*^9, 3.560380364967122*^9}, 
   3.5938706469052877`*^9}],

Cell[TextData[{
 StyleBox["Moving beyond a single, unregulated gene, the next simplest system \
we can construct consists of two genes, one of which encodes a protein that \
represses the transcription of the other. If ",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["p", "1"],
    FontFamily->"Courier",
    FontWeight->"Bold"], TraditionalForm]]],
 StyleBox[" is a repressor of gene 2, then a simple model of the rate of \
transcription from gene 2 would be",
  FontSize->16],
 ": "
}], "Text",
 CellChangeTimes->{{3.5603807389739428`*^9, 3.560380755569859*^9}, {
   3.560380893582981*^9, 3.56038095595959*^9}, {3.5603809948506536`*^9, 
   3.560381022877799*^9}, {3.5937886521756277`*^9, 3.593788681907765*^9}, {
   3.59378899509984*^9, 3.593789081987699*^9}, {3.593789172195498*^9, 
   3.593789210267974*^9}, 3.593870646905747*^9, {3.594062426425071*^9, 
   3.594062444954175*^9}, {3.594062477519915*^9, 3.594062632214922*^9}, {
   3.594063030961191*^9, 3.594063052878685*^9}, {3.594063268054735*^9, 
   3.594063270070751*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["S", "2"], 
   RowBox[{"(", 
    SubscriptBox["p", "1"], ")"}]}], "=", 
  FractionBox[
   SubscriptBox["mSynth", "2"], 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{
      SubscriptBox["repStrength", 
       RowBox[{"1", ",", "2"}]], 
      SubscriptBox["p", "1"]}]}], ")"}]]}]], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.5937887031523237`*^9, {3.593788785311029*^9, 3.593788819079398*^9}, {
   3.593788854903401*^9, 3.593788898552225*^9}, {3.593788933931033*^9, 
   3.593788955968349*^9}, {3.593790940110264*^9, 3.5937909507680273`*^9}, {
   3.593790998652142*^9, 3.59379100303179*^9}, 3.593870646906576*^9, {
   3.594062641607959*^9, 3.594062699984054*^9}, {3.5940627315600433`*^9, 
   3.59406275079333*^9}, {3.594063094554389*^9, 3.59406310881732*^9}, 
   3.594063214114464*^9}],

Cell[TextData[{
 StyleBox["where ",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["S", "2"],
    FontFamily->"Courier",
    FontSize->14,
    FontWeight->"Bold"], TraditionalForm]],
  FontSize->16],
 " ",
 StyleBox["is the transcription rate from gene 2, which is a function of the \
concentration of the repressor, ",
  FontSize->16],
 Cell[BoxData[
  StyleBox[
   SubscriptBox["p", "1"],
   FontSize->14,
   FontWeight->"Bold"]],
  CellChangeTimes->{
   3.5937887031523237`*^9, {3.593788785311029*^9, 3.593788819079398*^9}, {
    3.593788854903401*^9, 3.593788898552225*^9}, {3.593788933931033*^9, 
    3.593788955968349*^9}, {3.593790940110264*^9, 3.5937909507680273`*^9}, {
    3.593790998652142*^9, 3.59379100303179*^9}, 3.593870646906576*^9, {
    3.594062641607959*^9, 3.594062699984054*^9}, {3.5940627315600433`*^9, 
    3.59406275079333*^9}, {3.594063094554389*^9, 3.59406310881732*^9}},
  FontSize->16],
 "."
}], "Text",
 CellChangeTimes->{{3.594063137674816*^9, 3.594063205937211*^9}, 
   3.595678654323325*^9}],

Cell[TextData[{
 StyleBox["First, let's try exploring the dynamics of this system by symbolic \
integration. In all, we have a system of four differential equations, one for \
each mRNA and one for each protein, plus four algebraic equations naming the \
concentrations of the proteins and mRNAs at time zero as ",
  FontSize->16],
 StyleBox["p1Init",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 StyleBox[", ",
  FontSize->16],
 StyleBox["p2Init",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 StyleBox[", ",
  FontSize->16],
 StyleBox["m1Init",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 StyleBox[", and ",
  FontSize->16],
 StyleBox["m2Init",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 StyleBox[". Let\[CloseCurlyQuote]s define the variable ",
  FontSize->16],
 StyleBox["diffEqsRepTarg",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 StyleBox[" to be these equations. ",
  FontSize->16]
}], "Text",
 CellChangeTimes->{{3.5603807389739428`*^9, 3.560380755569859*^9}, {
   3.560380893582981*^9, 3.56038095595959*^9}, {3.5603809948506536`*^9, 
   3.560381022877799*^9}, {3.5937886521756277`*^9, 3.593788666831407*^9}, {
   3.59378935935581*^9, 3.593789471643676*^9}, {3.593789505259987*^9, 
   3.593789595155684*^9}, {3.593789628003832*^9, 3.5937896437957363`*^9}, {
   3.593789682759749*^9, 3.593789790115735*^9}, {3.593790536269628*^9, 
   3.593790580501938*^9}, {3.593791261611787*^9, 3.593791330675818*^9}, 
   3.593870646907978*^9, {3.59406277524984*^9, 3.594062776926549*^9}, 
   3.594062844591495*^9, {3.594063368656846*^9, 3.5940633743185177`*^9}, {
   3.594063414320765*^9, 3.594063416622838*^9}}],

Cell[BoxData[
 RowBox[{"diffEqsRepTarg", "=", "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"m1", "'"}], "[", "t", "]"}], "\[Equal]", 
     RowBox[{"synthRt1", " ", "-", 
      RowBox[{"mDeg1", "*", " ", 
       RowBox[{"m1", "[", "t", "]"}]}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"p1", "'"}], "[", "t", "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"transRtC1", "*", 
       RowBox[{"m1", "[", "t", "]"}]}], "-", 
      RowBox[{"pDeg1", "*", 
       RowBox[{"p1", "[", "t", "]"}]}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"m2", "'"}], "[", "t", "]"}], "\[Equal]", 
     RowBox[{
      FractionBox["v2", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"repStrength12", " ", "*", 
          RowBox[{"p1", "[", "t", "]"}]}]}], ")"}]], "-", 
      RowBox[{"mDeg2", "*", " ", 
       RowBox[{"m2", "[", "t", "]"}]}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"p2", "'"}], "[", "t", "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"transRtC2", "*", 
       RowBox[{"m2", "[", "t", "]"}]}], "-", 
      RowBox[{"pDeg2", "*", 
       RowBox[{"p2", "[", "t", "]"}]}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"m1", "[", "0", "]"}], "\[Equal]", "m1Init"}], ",", " ", 
    RowBox[{
     RowBox[{"m2", "[", "0", "]"}], "\[Equal]", "m2Init"}], ",", " ", 
    RowBox[{
     RowBox[{"p1", "[", "0", "]"}], "\[Equal]", "p1Init"}], ",", " ", 
    RowBox[{
     RowBox[{"p2", "[", "0", "]"}], "\[Equal]", "p2Init"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.5937916692479343`*^9, 3.5937916832599173`*^9}, 
   3.59387064691103*^9, {3.594063712981992*^9, 3.594063716708191*^9}, {
   3.594063756442964*^9, 3.594063776474084*^9}, {3.59406411723508*^9, 
   3.594064127371275*^9}, {3.624975537644484*^9, 3.624975554072894*^9}},
 FontSize->14],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["m1", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{"synthRt1", "-", 
     RowBox[{"mDeg1", " ", 
      RowBox[{"m1", "[", "t", "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["p1", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"transRtC1", " ", 
      RowBox[{"m1", "[", "t", "]"}]}], "-", 
     RowBox[{"pDeg1", " ", 
      RowBox[{"p1", "[", "t", "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["m2", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "mDeg2"}], " ", 
      RowBox[{"m2", "[", "t", "]"}]}], "+", 
     FractionBox["v2", 
      RowBox[{"1", "+", 
       RowBox[{"repStrength12", " ", 
        RowBox[{"p1", "[", "t", "]"}]}]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["p2", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"transRtC2", " ", 
      RowBox[{"m2", "[", "t", "]"}]}], "-", 
     RowBox[{"pDeg2", " ", 
      RowBox[{"p2", "[", "t", "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{"m1", "[", "0", "]"}], "\[Equal]", "m1Init"}], ",", 
   RowBox[{
    RowBox[{"m2", "[", "0", "]"}], "\[Equal]", "m2Init"}], ",", 
   RowBox[{
    RowBox[{"p1", "[", "0", "]"}], "\[Equal]", "p1Init"}], ",", 
   RowBox[{
    RowBox[{"p2", "[", "0", "]"}], "\[Equal]", "p2Init"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.624975258007816*^9, 3.624975267633194*^9}, {
  3.624975484720823*^9, 3.624975484784302*^9}, {3.624975613439593*^9, 
  3.624975615669082*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"repTargSoln1", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    StyleBox["diffEqsRepTarg",
     FontSize->14], 
    StyleBox[",",
     FontSize->14], 
    RowBox[{"{", 
     RowBox[{"m1", ",", "m2", ",", "p1", ",", "p2"}], "}"}], ",", "t"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5937918478085947`*^9, 3.5937918756473303`*^9}, 
   3.593870646912201*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.624973738292249*^9, 3.624973755654481*^9}}]
}, Open  ]],

Cell[TextData[{
 "I let this run for a while with no result. Eventually, I replaced all the \
constants by numbers and ran it again for at least 10 minutes. Eventually I \
got a solution, but it was ",
 StyleBox["implicit",
  FontSlant->"Italic"],
 ", meaning that it contained indefinite integrals. This result was difficult \
to understand and it\[CloseCurlyQuote]s  not clear how useful it would be, \
compared just integrating original differential equations numerically with ",
 StyleBox["NDSolve",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ". To try that, we\[CloseCurlyQuote]ll need to replace all the constants by \
numbers:"
}], "Text",
 CellChangeTimes->{{3.593792796319682*^9, 3.593792852061185*^9}, 
   3.593870646912566*^9, {3.594063454786336*^9, 3.594063478254924*^9}, {
   3.595679227149838*^9, 3.595679284891306*^9}, {3.5956794044193153`*^9, 
   3.595679497811719*^9}, {3.5956797526705523`*^9, 3.5956799004029922`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"synthRt1", "=", "1"}], ";", " ", 
  RowBox[{"mDeg1", "=", "1"}], ";", 
  RowBox[{"mDeg2", "=", "1"}], ";", 
  RowBox[{"transRtC1", "=", "1"}], ";", 
  RowBox[{"transRtC2", "=", "1"}], ";", 
  RowBox[{"pDeg1", "=", "1"}], ";", 
  RowBox[{"pDeg2", "=", "1"}], ";", 
  RowBox[{"mDeg2", "=", "1"}], ";", 
  RowBox[{"m1Init", "=", "0"}], ";", 
  RowBox[{"m2Init", "=", "0"}], ";", 
  RowBox[{"p1Init", "=", "0"}], ";", 
  RowBox[{"p2Init", "=", "0"}], ";", 
  RowBox[{"v2", "=", "1"}], ";", " ", 
  RowBox[{"repStrength12", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.593793408231954*^9, 3.593793497761701*^9}, {
   3.593793566098374*^9, 3.593793747045463*^9}, {3.593793964489748*^9, 
   3.593794001943222*^9}, 3.59387064691336*^9, {3.5940639428815317`*^9, 
   3.59406397132023*^9}}],

Cell[TextData[StyleBox["The system now looks like this:",
 FontSize->16]], "Text",
 CellChangeTimes->{{3.593793193901664*^9, 3.593793258867716*^9}, {
   3.5937938123495703`*^9, 3.593793817283725*^9}, 3.593793881553841*^9, 
   3.5938706469136868`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["diffEqsRepTarg",
  FontSize->14]], "Input",
 CellChangeTimes->{3.593870646913995*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["m1", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{"1", "-", 
     RowBox[{"m1", "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["p1", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"m1", "[", "t", "]"}], "-", 
     RowBox[{"p1", "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["m2", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"m2", "[", "t", "]"}]}], "+", 
     FractionBox["1", 
      RowBox[{"1", "+", 
       RowBox[{"p1", "[", "t", "]"}]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["p2", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"m2", "[", "t", "]"}], "-", 
     RowBox[{"p2", "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"m1", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"m2", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"p1", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"p2", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.624973760258772*^9}]
}, Open  ]],

Cell[TextData[{
 "The other change is that, instead of just specifying ",
 StyleBox["t",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " as the variable with respect to which we want to integrate, we must also \
specify the start and end of the time interval over which we want to \
integrate. "
}], "Text",
 CellChangeTimes->{3.593793888528002*^9, 3.5938706469149017`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{"NDSolve", "[", 
   RowBox[{"diffEqsRepTarg", ",", 
    RowBox[{"{", 
     RowBox[{"m1", ",", "m2", ",", "p1", ",", "p2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "40"}], "}"}]}], "]"}],
  FontSize->14]], "Input",
 CellChangeTimes->{{3.5937929919727993`*^9, 3.5937930128820868`*^9}, {
   3.5937932666457233`*^9, 3.593793282430295*^9}, 3.5938706469152803`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"m1", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwt0n0slAEcB/BzZ25xxC4xYs6OGOa9I53ndy4Tkdt5iTG56qy0slHKhcoK
JdWy0p27uU1CCmdstzQvbdjEtJOXJISLlB6TvN9dz3PP/fHbd599//vuxzib
xReSSSRSIHZ4Bpl+NonytobUuogZ5iiKRB5aeCBTWkOuavml3RSK2FqIn2fw
bUEpZVVxV1CEz6RPJzPtwTJ+mtG5gSLpX3iN8X0OsCD7oQ7YRRH1m0JZsZcT
qOX2CfkaFOHdYlG2KhhwjyY5161FEReGyuPynDNIJ2TNyToU8UmIzd6MZoLn
tzx6E+affyiS2RYXSEn2cBzHTEuS3B3ac4VBO8fqZczCOHr58Hk3iLuhyvyH
2c3xStJomztsPrxdtIOZcbORs+rkAbKOyRgN5n62Ey2z2BOiQxX1Wszjw7ni
xREv4LSSY3SYHdabj4vY3jCe1lGHezFHmFwa4QOedx6rcD+TWxhRVnyg15y1
hDvtYAOrVO4LZuGx67inctpi95/wg0HfpW3c1+wUG3KNHzh/JGtwq3MiLeaa
/YGB3tfiNm3nU10SA6C211+HOwqJeZxtGgguEoneiEK51dMaCHPDg3qbjXWp
uk8fgarZeb3XuMqQAVMWVHqs6f1IzCgeVbBAXLqtd3hQ/plfGUHAHtnTW9EZ
YUexDIaUw1q91zebwgfag+HqOmG+iEqSXjwK7nk6vYULn6qyrEJgSEm4orKs
L6Y/BIomCVdqvgu+5h2D+VXCvJMN05lObCBTsGcirSLMOcGy8SgbpDTCb9PL
xuUFobBqRdj8KS/wtzMCGoNLaVTnsDEEqGaEU1k2W4OhAO9MCJPLa1wLxQAp
BtPfF5iXrAFsUwlr0yzVT8I5wNxH+Pore2N5NQe6DP2AYIbe8pcDwcaEG3vs
L/WeCoMXZMKbO7Uiv/owIBnsWL8kku+GgacRYdV2zQd6IhcukAgLumx2S15z
wdhgvwO8HZ2OCxM6Yo//RB+ayw==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.9942000000000001}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 40.}, {0.9947685585914132, 
                    1.0000000000010225`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "40.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwt0n0slAEcB/BzZ25xxC4xYs6OGOa9I53ndy4Tkdt5iTG56qy0slHKhcoK
JdWy0p27uU1CCmdstzQvbdjEtJOXJISLlB6TvN9dz3PP/fHbd599//vuxzib
xReSSSRSIHZ4Bpl+NonytobUuogZ5iiKRB5aeCBTWkOuavml3RSK2FqIn2fw
bUEpZVVxV1CEz6RPJzPtwTJ+mtG5gSLpX3iN8X0OsCD7oQ7YRRH1m0JZsZcT
qOX2CfkaFOHdYlG2KhhwjyY5161FEReGyuPynDNIJ2TNyToU8UmIzd6MZoLn
tzx6E+affyiS2RYXSEn2cBzHTEuS3B3ac4VBO8fqZczCOHr58Hk3iLuhyvyH
2c3xStJomztsPrxdtIOZcbORs+rkAbKOyRgN5n62Ey2z2BOiQxX1Wszjw7ni
xREv4LSSY3SYHdabj4vY3jCe1lGHezFHmFwa4QOedx6rcD+TWxhRVnyg15y1
hDvtYAOrVO4LZuGx67inctpi95/wg0HfpW3c1+wUG3KNHzh/JGtwq3MiLeaa
/YGB3tfiNm3nU10SA6C211+HOwqJeZxtGgguEoneiEK51dMaCHPDg3qbjXWp
uk8fgarZeb3XuMqQAVMWVHqs6f1IzCgeVbBAXLqtd3hQ/plfGUHAHtnTW9EZ
YUexDIaUw1q91zebwgfag+HqOmG+iEqSXjwK7nk6vYULn6qyrEJgSEm4orKs
L6Y/BIomCVdqvgu+5h2D+VXCvJMN05lObCBTsGcirSLMOcGy8SgbpDTCb9PL
xuUFobBqRdj8KS/wtzMCGoNLaVTnsDEEqGaEU1k2W4OhAO9MCJPLa1wLxQAp
BtPfF5iXrAFsUwlr0yzVT8I5wNxH+Pore2N5NQe6DP2AYIbe8pcDwcaEG3vs
L/WeCoMXZMKbO7Uiv/owIBnsWL8kku+GgacRYdV2zQd6IhcukAgLumx2S15z
wdhgvwO8HZ2OCxM6Yo//RB+ayw==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.9942000000000001}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 40.}, {0.9947685585914132, 
                    1.0000000000010225`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "40.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 40.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"m2", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwlzmlIkwEcBvBdZs55sXI0UzdR80jUmc1l8/1vJh55rJVzgU0XKWmUoZi0
0vogKokZkzCtaCGKZt4KEuJFaUoeKNPKyFfJvLJMzXlsrvd99+Hh4cfz5eFe
zZCmUEgkEg8L3ssNhgueSY7Qq1jOdPdDkeQvkvpLA45wuFT/ecQbRRbe5r0s
8OGA1qKB/IiNIpIHfOpOGRcOXufYhdigiBt3wvvmvAvUrMYmky1QxC8+LlMX
7Qr88tt8hhmKLP+mVqLNbkClyYqmKCjCkFfmj+jdocDZyaGGjCIpF5klY9c8
AOlr/7pEQhEPp1tybbsnRB2z0+dj5t6rF61zvGGSIXeKwDwo5DDSC04CnVWj
OIF5euxOxeKkD0QeHYq2x+y41XROJfSFbZraaIl5MSvlclG4HyylJrYdwvxU
Y02mrvlBm0o2QMWssK/jF2n8IWC8n0bB/C2rPc4mggecXbUzGXM2u2VbY+CB
13pmOQnzQlak9XxTADSmvZfgpndIzd1kp+Ah2dUHdxQSU5pJDwT70RkWbqSl
c6evNRBSvQRWuC2neiZ6E07DXNwVc9wboZ3Bw3Q+KKMmqLgfV3ALtC184MRb
UXCHBd1PWk0NgnGhDRl3S3c4m2orAB//ZyTcW7rGsOEOAeyREghLVeakF2ln
wNPXl3DKj/HnGXbB0JXNJlxWXjwQMxgMrQ7WhMsNc8qZu2dhrtuMsOR83fd0
jhAidPtGo3EWcZ1XrtC0QqjbWiPckFw8rckNgXecn4St1JLAXy4IrIwuEC5i
mLuIpxD4KP9DOJHP2vkUAuAi+EeYUlLlnlcBcL3aZGZXrlXhBoBWsUn4QGG7
8CRMBNujfwnn1DjQNK9EkLFp2oeVs8zmTRFIj+8Sru9zuPEhVgygNv3V7VWr
eLVikKv1hJ1ql1SafTGQ1wyEJ3ar+pmyUCh2NxJW9rD2C9+EAmvIZN4RyZ7R
GAqrBpP/A11cduI=
                    "]], 
                    
                    LineBox[{{0.8364302464070071, 0.49647337462669694`}, {
                    0.8761526350644873, 0.5058777088515498}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.4955}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 40.}, {0.49647337462669694`, 
                    0.5058777088515498}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "40.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwlzmlIkwEcBvBdZs55sXI0UzdR80jUmc1l8/1vJh55rJVzgU0XKWmUoZi0
0vogKokZkzCtaCGKZt4KEuJFaUoeKNPKyFfJvLJMzXlsrvd99+Hh4cfz5eFe
zZCmUEgkEg8L3ssNhgueSY7Qq1jOdPdDkeQvkvpLA45wuFT/ecQbRRbe5r0s
8OGA1qKB/IiNIpIHfOpOGRcOXufYhdigiBt3wvvmvAvUrMYmky1QxC8+LlMX
7Qr88tt8hhmKLP+mVqLNbkClyYqmKCjCkFfmj+jdocDZyaGGjCIpF5klY9c8
AOlr/7pEQhEPp1tybbsnRB2z0+dj5t6rF61zvGGSIXeKwDwo5DDSC04CnVWj
OIF5euxOxeKkD0QeHYq2x+y41XROJfSFbZraaIl5MSvlclG4HyylJrYdwvxU
Y02mrvlBm0o2QMWssK/jF2n8IWC8n0bB/C2rPc4mggecXbUzGXM2u2VbY+CB
13pmOQnzQlak9XxTADSmvZfgpndIzd1kp+Ah2dUHdxQSU5pJDwT70RkWbqSl
c6evNRBSvQRWuC2neiZ6E07DXNwVc9wboZ3Bw3Q+KKMmqLgfV3ALtC184MRb
UXCHBd1PWk0NgnGhDRl3S3c4m2orAB//ZyTcW7rGsOEOAeyREghLVeakF2ln
wNPXl3DKj/HnGXbB0JXNJlxWXjwQMxgMrQ7WhMsNc8qZu2dhrtuMsOR83fd0
jhAidPtGo3EWcZ1XrtC0QqjbWiPckFw8rckNgXecn4St1JLAXy4IrIwuEC5i
mLuIpxD4KP9DOJHP2vkUAuAi+EeYUlLlnlcBcL3aZGZXrlXhBoBWsUn4QGG7
8CRMBNujfwnn1DjQNK9EkLFp2oeVs8zmTRFIj+8Sru9zuPEhVgygNv3V7VWr
eLVikKv1hJ1ql1SafTGQ1wyEJ3ar+pmyUCh2NxJW9rD2C9+EAmvIZN4RyZ7R
GAqrBpP/A11cduI=
                    "]], 
                    
                    LineBox[{{0.8364302464070071, 0.49647337462669694`}, {
                    0.8761526350644873, 0.5058777088515498}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.4955}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 40.}, {0.49647337462669694`, 
                    0.5058777088515498}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "40.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 40.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"p1", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwl0mtIUwEYBuDpBEO3ZczMNC/TLTSVbGnTdJ5vW2KWlzGvCzGtNFLUcFk0
L0HENM1udpsaDSLRLEvTMnSlUi3EUAydoakbXlLT433Ly9Y5Oz8+Xp4/74+X
j3EmR5RmTiKR/LHDk/r9kVPDPVvQfwxB+34sIOH7Jkqftu6GpMhTSp+9KGJP
kz9KF9kDq3qam5CPIiImfVTMdATSrfyU+Q8okvJLWB/7zQmWrGs6ZWoUmXxV
9FTm4wpNIQe6WTMoIrzGIesrGECt6hGrVlCExej3ytK6QfP1rhjOPxTxjYvO
1UUwgfRELsveQpGZBXLl+FsWZP1+oHQ0oAglsfLGj639cHHH+alVzGkx9PLe
cx6g067HXTKiiIdzduJAsycoZ9WL7zAz8ut5i65eoOmKaBvCrOK6UjJk3lAy
e7J4DrO697J8+qcP1DP8xlYxO62+OSblHgSPqDbBBuZpSZq4JMwX8mrG5rYw
P1TQzMjzvqBRUmINmJPt6jglikPQskVnGjGPSJqjdx5ng6ql8ybuPIfGdcU2
G5qGaV9wT0rCado3hyFTzNDgtmoRWbLi/SDXzB3FfQKJvJNr5Q8LXWd1uJHG
Vn1nkz+cWxFu4rYe/NzfkXAE1jyztnEvC1qDuq04oE1sN+C+LWfIBho50NuT
aMQdGlBwei49AAp860xu/BTmQLYJBIqk1+RVXUNod0sgFNEmTRZJLUnVF46C
i3rJ5LSJvqqcXUEw4qI3ueJx2bdIVRCo+zZNfrytSR2+GgylMQaThSfrRjNc
ueAVhT0TaRFhalNnLQa4QBaZmfw6pUytKAyB4HHC1PtC/79uCKxpCJdQLN34
gwh0eBNO4uzR94QATCmJPvPy5/uL5AB27wnT2wupxcsABRrChmSbybuhPFAZ
CV+pcbRQPONB3xDh7tQx+tsVHnhfJVzf6Zj5NYoP4gjCuo0XUnYtH3YFEXau
/SNVbPLhkDvh/n/Pu+jxAkinEk79vGez+KUAuOaE2bbCDaNRAA74HNge/wEw
c52Q
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.9580000000000001}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 40.}, {0.9626240418199918, 
                    1.000000000027396}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "40.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwl0mtIUwEYBuDpBEO3ZczMNC/TLTSVbGnTdJ5vW2KWlzGvCzGtNFLUcFk0
L0HENM1udpsaDSLRLEvTMnSlUi3EUAydoakbXlLT433Ly9Y5Oz8+Xp4/74+X
j3EmR5RmTiKR/LHDk/r9kVPDPVvQfwxB+34sIOH7Jkqftu6GpMhTSp+9KGJP
kz9KF9kDq3qam5CPIiImfVTMdATSrfyU+Q8okvJLWB/7zQmWrGs6ZWoUmXxV
9FTm4wpNIQe6WTMoIrzGIesrGECt6hGrVlCExej3ytK6QfP1rhjOPxTxjYvO
1UUwgfRELsveQpGZBXLl+FsWZP1+oHQ0oAglsfLGj639cHHH+alVzGkx9PLe
cx6g067HXTKiiIdzduJAsycoZ9WL7zAz8ut5i65eoOmKaBvCrOK6UjJk3lAy
e7J4DrO697J8+qcP1DP8xlYxO62+OSblHgSPqDbBBuZpSZq4JMwX8mrG5rYw
P1TQzMjzvqBRUmINmJPt6jglikPQskVnGjGPSJqjdx5ng6ql8ybuPIfGdcU2
G5qGaV9wT0rCado3hyFTzNDgtmoRWbLi/SDXzB3FfQKJvJNr5Q8LXWd1uJHG
Vn1nkz+cWxFu4rYe/NzfkXAE1jyztnEvC1qDuq04oE1sN+C+LWfIBho50NuT
aMQdGlBwei49AAp860xu/BTmQLYJBIqk1+RVXUNod0sgFNEmTRZJLUnVF46C
i3rJ5LSJvqqcXUEw4qI3ueJx2bdIVRCo+zZNfrytSR2+GgylMQaThSfrRjNc
ueAVhT0TaRFhalNnLQa4QBaZmfw6pUytKAyB4HHC1PtC/79uCKxpCJdQLN34
gwh0eBNO4uzR94QATCmJPvPy5/uL5AB27wnT2wupxcsABRrChmSbybuhPFAZ
CV+pcbRQPONB3xDh7tQx+tsVHnhfJVzf6Zj5NYoP4gjCuo0XUnYtH3YFEXau
/SNVbPLhkDvh/n/Pu+jxAkinEk79vGez+KUAuOaE2bbCDaNRAA74HNge/wEw
c52Q
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.9580000000000001}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 40.}, {0.9626240418199918, 
                    1.000000000027396}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "40.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 40.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"p2", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwdx30s1HEcwPF7UDfnIU8h1s0JY651Tjq6+H7udIk83K6RIhKyNDGW1hVZ
hCY9XWWkObPMneVOaNbyuEUzTSm0FD+WVCJPdR67fr/vH++99+KeTpcnM2g0
Gp+MekzURli+gAuOKt68ypdAsqtC5oqSC/OhGZF1fAK5cgc90yadYVST9+cj
h0D8yIhMfagLxHsUEjetCPRjjllB6FxhtkS0nWNCINPoioI3G26Qed3c68NW
AiUftS4dSHIH3juGeoNJIHfO+eihZg9YWKloS2IQiHu5Xjzv5An26oKuk3QC
9fo7maYW8oCdGC15TSPQyEB2+fT73XCiSBCdTXrnsvagwn8PLGcduiEhPZ2V
fLw4iA86pNW4kX6gMqczZ/mgGQ+ptCUdZ6sWFqu8QNrTrzQl/TmrOWLbYQGk
t8cjFukLDo1/VZsCaJbv0DNJT2UFm09qvYGXkstnkGa3yFmuUXsh/36/mE46
BIXdzmT7QKxxg5ZGGjW2rnQ984GFhbVEyibDHYOdx/YBpNj7UV4MbBX1sYUg
t2niUL5Vzi0cahSC9IuxJWWp75X4mTO+UBtuYUy5sT3IgWnhB48n3LdQXtY3
SPta/OCu1SqDslzBolWe3Q+xq9V0yslf3z5KtxTBt5DfNMrKspKesF4RdD+/
hl22OZEweukAtNn7YsuOqMdSnfzh4ey0wWAYRy6TCT+NhvzBqykN++mpkhFV
TgA4vHDHNrsn8/nljIAn3IVdbMpylgwjELEzsGOFdiv9AQBLW6uwGaU1brnl
AGYu1djWL3PMihYBTCpLsf/FWUzdkYohczQP+2Kto5GqSgylc0rsvoRxa92S
GHSKTuz6Lsdzr8Il4McaxtavPVEI6iQQLBvH5tR9V6jWJRDzaQZ7cLWm2zoq
EMxZeuyEDrv1Ik0gzI5tYAtsZGsGQyB42xiw/wMAO2ow
                    "]], 
                    
                    LineBox[{{2.0717073850648857`, 0.4958523920542598}, {
                    2.179500040353797, 0.5069126788048409}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.4945}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 40.}, {0.4958523920542598, 
                    0.5069126788048409}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "40.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwdx30s1HEcwPF7UDfnIU8h1s0JY651Tjq6+H7udIk83K6RIhKyNDGW1hVZ
hCY9XWWkObPMneVOaNbyuEUzTSm0FD+WVCJPdR67fr/vH++99+KeTpcnM2g0
Gp+MekzURli+gAuOKt68ypdAsqtC5oqSC/OhGZF1fAK5cgc90yadYVST9+cj
h0D8yIhMfagLxHsUEjetCPRjjllB6FxhtkS0nWNCINPoioI3G26Qed3c68NW
AiUftS4dSHIH3juGeoNJIHfO+eihZg9YWKloS2IQiHu5Xjzv5An26oKuk3QC
9fo7maYW8oCdGC15TSPQyEB2+fT73XCiSBCdTXrnsvagwn8PLGcduiEhPZ2V
fLw4iA86pNW4kX6gMqczZ/mgGQ+ptCUdZ6sWFqu8QNrTrzQl/TmrOWLbYQGk
t8cjFukLDo1/VZsCaJbv0DNJT2UFm09qvYGXkstnkGa3yFmuUXsh/36/mE46
BIXdzmT7QKxxg5ZGGjW2rnQ984GFhbVEyibDHYOdx/YBpNj7UV4MbBX1sYUg
t2niUL5Vzi0cahSC9IuxJWWp75X4mTO+UBtuYUy5sT3IgWnhB48n3LdQXtY3
SPta/OCu1SqDslzBolWe3Q+xq9V0yslf3z5KtxTBt5DfNMrKspKesF4RdD+/
hl22OZEweukAtNn7YsuOqMdSnfzh4ey0wWAYRy6TCT+NhvzBqykN++mpkhFV
TgA4vHDHNrsn8/nljIAn3IVdbMpylgwjELEzsGOFdiv9AQBLW6uwGaU1brnl
AGYu1djWL3PMihYBTCpLsf/FWUzdkYohczQP+2Kto5GqSgylc0rsvoRxa92S
GHSKTuz6Lsdzr8Il4McaxtavPVEI6iQQLBvH5tR9V6jWJRDzaQZ7cLWm2zoq
EMxZeuyEDrv1Ik0gzI5tYAtsZGsGQyB42xiw/wMAO2ow
                    "]], 
                    
                    LineBox[{{2.0717073850648857`, 0.4958523920542598}, {
                    2.179500040353797, 0.5069126788048409}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.4945}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 40.}, {0.4958523920542598, 
                    0.5069126788048409}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "40.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 40.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.624973770157696*^9}]
}, Open  ]],

Cell["\<\
The value returned is a list of solutions (one solution, in this case) each \
of which is a list of rules. Each rule defines the solution functions as \
interpolating functions, which is to say functions that have defined values \
at certain points (in this case certain times) and get the values at \
intermediate points by interpolating between the defined points.\
\>", "Text",
 CellChangeTimes->{{3.593794021821611*^9, 3.593794192467986*^9}, 
   3.59387064691616*^9, {3.59396554390158*^9, 3.593965549001534*^9}, {
   3.594063599439831*^9, 3.594063604367148*^9}, {3.594063869802936*^9, 
   3.594063883630519*^9}}],

Cell["\<\
This time let\[CloseCurlyQuote]s grab the first (and only) solution from the \
list of solutions.\
\>", "Text",
 CellChangeTimes->{{3.5937943560757008`*^9, 3.5937943711557817`*^9}, 
   3.593870646916507*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"repTargSoln1N", "=", 
  RowBox[{
   RowBox[{"NDSolve", "[", 
    RowBox[{
     StyleBox["diffEqsRepTarg",
      FontSize->14], ",", 
     RowBox[{"{", 
      RowBox[{"m1", ",", "m2", ",", "p1", ",", "p2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "40"}], "}"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.593794276659953*^9, 3.593794286757526*^9}, {
   3.593794333881031*^9, 3.593794343410296*^9}, 3.593870646916842*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m1", "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwt0n0slAEcB/BzZ25xxC4xYs6OGOa9I53ndy4Tkdt5iTG56qy0slHKhcoK
JdWy0p27uU1CCmdstzQvbdjEtJOXJISLlB6TvN9dz3PP/fHbd599//vuxzib
xReSSSRSIHZ4Bpl+NonytobUuogZ5iiKRB5aeCBTWkOuavml3RSK2FqIn2fw
bUEpZVVxV1CEz6RPJzPtwTJ+mtG5gSLpX3iN8X0OsCD7oQ7YRRH1m0JZsZcT
qOX2CfkaFOHdYlG2KhhwjyY5161FEReGyuPynDNIJ2TNyToU8UmIzd6MZoLn
tzx6E+affyiS2RYXSEn2cBzHTEuS3B3ac4VBO8fqZczCOHr58Hk3iLuhyvyH
2c3xStJomztsPrxdtIOZcbORs+rkAbKOyRgN5n62Ey2z2BOiQxX1Wszjw7ni
xREv4LSSY3SYHdabj4vY3jCe1lGHezFHmFwa4QOedx6rcD+TWxhRVnyg15y1
hDvtYAOrVO4LZuGx67inctpi95/wg0HfpW3c1+wUG3KNHzh/JGtwq3MiLeaa
/YGB3tfiNm3nU10SA6C211+HOwqJeZxtGgguEoneiEK51dMaCHPDg3qbjXWp
uk8fgarZeb3XuMqQAVMWVHqs6f1IzCgeVbBAXLqtd3hQ/plfGUHAHtnTW9EZ
YUexDIaUw1q91zebwgfag+HqOmG+iEqSXjwK7nk6vYULn6qyrEJgSEm4orKs
L6Y/BIomCVdqvgu+5h2D+VXCvJMN05lObCBTsGcirSLMOcGy8SgbpDTCb9PL
xuUFobBqRdj8KS/wtzMCGoNLaVTnsDEEqGaEU1k2W4OhAO9MCJPLa1wLxQAp
BtPfF5iXrAFsUwlr0yzVT8I5wNxH+Pore2N5NQe6DP2AYIbe8pcDwcaEG3vs
L/WeCoMXZMKbO7Uiv/owIBnsWL8kku+GgacRYdV2zQd6IhcukAgLumx2S15z
wdhgvwO8HZ2OCxM6Yo//RB+ayw==
                    "]]}}}, {
                  DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0.9942000000000001}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 40.}, {0.9947685585914132, 
                    1.0000000000010225`}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "40.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwt0n0slAEcB/BzZ25xxC4xYs6OGOa9I53ndy4Tkdt5iTG56qy0slHKhcoK
JdWy0p27uU1CCmdstzQvbdjEtJOXJISLlB6TvN9dz3PP/fHbd599//vuxzib
xReSSSRSIHZ4Bpl+NonytobUuogZ5iiKRB5aeCBTWkOuavml3RSK2FqIn2fw
bUEpZVVxV1CEz6RPJzPtwTJ+mtG5gSLpX3iN8X0OsCD7oQ7YRRH1m0JZsZcT
qOX2CfkaFOHdYlG2KhhwjyY5161FEReGyuPynDNIJ2TNyToU8UmIzd6MZoLn
tzx6E+affyiS2RYXSEn2cBzHTEuS3B3ac4VBO8fqZczCOHr58Hk3iLuhyvyH
2c3xStJomztsPrxdtIOZcbORs+rkAbKOyRgN5n62Ey2z2BOiQxX1Wszjw7ni
xREv4LSSY3SYHdabj4vY3jCe1lGHezFHmFwa4QOedx6rcD+TWxhRVnyg15y1
hDvtYAOrVO4LZuGx67inctpi95/wg0HfpW3c1+wUG3KNHzh/JGtwq3MiLeaa
/YGB3tfiNm3nU10SA6C211+HOwqJeZxtGgguEoneiEK51dMaCHPDg3qbjXWp
uk8fgarZeb3XuMqQAVMWVHqs6f1IzCgeVbBAXLqtd3hQ/plfGUHAHtnTW9EZ
YUexDIaUw1q91zebwgfag+HqOmG+iEqSXjwK7nk6vYULn6qyrEJgSEm4orKs
L6Y/BIomCVdqvgu+5h2D+VXCvJMN05lObCBTsGcirSLMOcGy8SgbpDTCb9PL
xuUFobBqRdj8KS/wtzMCGoNLaVTnsDEEqGaEU1k2W4OhAO9MCJPLa1wLxQAp
BtPfF5iXrAFsUwlr0yzVT8I5wNxH+Pore2N5NQe6DP2AYIbe8pcDwcaEG3vs
L/WeCoMXZMKbO7Uiv/owIBnsWL8kku+GgacRYdV2zQd6IhcukAgLumx2S15z
wdhgvwO8HZ2OCxM6Yo//RB+ayw==
                    "]]}}}, {
                  DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0.9942000000000001}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 40.}, {0.9947685585914132, 
                    1.0000000000010225`}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "40.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("InterpolatingFunction[{{0., 40.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"m2", "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwlzmlIkwEcBvBdZs55sXI0UzdR80jUmc1l8/1vJh55rJVzgU0XKWmUoZi0
0vogKokZkzCtaCGKZt4KEuJFaUoeKNPKyFfJvLJMzXlsrvd99+Hh4cfz5eFe
zZCmUEgkEg8L3ssNhgueSY7Qq1jOdPdDkeQvkvpLA45wuFT/ecQbRRbe5r0s
8OGA1qKB/IiNIpIHfOpOGRcOXufYhdigiBt3wvvmvAvUrMYmky1QxC8+LlMX
7Qr88tt8hhmKLP+mVqLNbkClyYqmKCjCkFfmj+jdocDZyaGGjCIpF5klY9c8
AOlr/7pEQhEPp1tybbsnRB2z0+dj5t6rF61zvGGSIXeKwDwo5DDSC04CnVWj
OIF5euxOxeKkD0QeHYq2x+y41XROJfSFbZraaIl5MSvlclG4HyylJrYdwvxU
Y02mrvlBm0o2QMWssK/jF2n8IWC8n0bB/C2rPc4mggecXbUzGXM2u2VbY+CB
13pmOQnzQlak9XxTADSmvZfgpndIzd1kp+Ah2dUHdxQSU5pJDwT70RkWbqSl
c6evNRBSvQRWuC2neiZ6E07DXNwVc9wboZ3Bw3Q+KKMmqLgfV3ALtC184MRb
UXCHBd1PWk0NgnGhDRl3S3c4m2orAB//ZyTcW7rGsOEOAeyREghLVeakF2ln
wNPXl3DKj/HnGXbB0JXNJlxWXjwQMxgMrQ7WhMsNc8qZu2dhrtuMsOR83fd0
jhAidPtGo3EWcZ1XrtC0QqjbWiPckFw8rckNgXecn4St1JLAXy4IrIwuEC5i
mLuIpxD4KP9DOJHP2vkUAuAi+EeYUlLlnlcBcL3aZGZXrlXhBoBWsUn4QGG7
8CRMBNujfwnn1DjQNK9EkLFp2oeVs8zmTRFIj+8Sru9zuPEhVgygNv3V7VWr
eLVikKv1hJ1ql1SafTGQ1wyEJ3ar+pmyUCh2NxJW9rD2C9+EAmvIZN4RyZ7R
GAqrBpP/A11cduI=
                    "]], 
                    
                    LineBox[{{0.8364302464070071, 0.49647337462669694`}, {
                    0.8761526350644873, 0.5058777088515498}}]}}}, {
                  DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0.4955}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 40.}, {0.49647337462669694`, 
                    0.5058777088515498}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "40.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwlzmlIkwEcBvBdZs55sXI0UzdR80jUmc1l8/1vJh55rJVzgU0XKWmUoZi0
0vogKokZkzCtaCGKZt4KEuJFaUoeKNPKyFfJvLJMzXlsrvd99+Hh4cfz5eFe
zZCmUEgkEg8L3ssNhgueSY7Qq1jOdPdDkeQvkvpLA45wuFT/ecQbRRbe5r0s
8OGA1qKB/IiNIpIHfOpOGRcOXufYhdigiBt3wvvmvAvUrMYmky1QxC8+LlMX
7Qr88tt8hhmKLP+mVqLNbkClyYqmKCjCkFfmj+jdocDZyaGGjCIpF5klY9c8
AOlr/7pEQhEPp1tybbsnRB2z0+dj5t6rF61zvGGSIXeKwDwo5DDSC04CnVWj
OIF5euxOxeKkD0QeHYq2x+y41XROJfSFbZraaIl5MSvlclG4HyylJrYdwvxU
Y02mrvlBm0o2QMWssK/jF2n8IWC8n0bB/C2rPc4mggecXbUzGXM2u2VbY+CB
13pmOQnzQlak9XxTADSmvZfgpndIzd1kp+Ah2dUHdxQSU5pJDwT70RkWbqSl
c6evNRBSvQRWuC2neiZ6E07DXNwVc9wboZ3Bw3Q+KKMmqLgfV3ALtC184MRb
UXCHBd1PWk0NgnGhDRl3S3c4m2orAB//ZyTcW7rGsOEOAeyREghLVeakF2ln
wNPXl3DKj/HnGXbB0JXNJlxWXjwQMxgMrQ7WhMsNc8qZu2dhrtuMsOR83fd0
jhAidPtGo3EWcZ1XrtC0QqjbWiPckFw8rckNgXecn4St1JLAXy4IrIwuEC5i
mLuIpxD4KP9DOJHP2vkUAuAi+EeYUlLlnlcBcL3aZGZXrlXhBoBWsUn4QGG7
8CRMBNujfwnn1DjQNK9EkLFp2oeVs8zmTRFIj+8Sru9zuPEhVgygNv3V7VWr
eLVikKv1hJ1ql1SafTGQ1wyEJ3ar+pmyUCh2NxJW9rD2C9+EAmvIZN4RyZ7R
GAqrBpP/A11cduI=
                    "]], 
                    
                    LineBox[{{0.8364302464070071, 0.49647337462669694`}, {
                    0.8761526350644873, 0.5058777088515498}}]}}}, {
                  DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0.4955}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 40.}, {0.49647337462669694`, 
                    0.5058777088515498}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "40.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("InterpolatingFunction[{{0., 40.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"p1", "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwl0mtIUwEYBuDpBEO3ZczMNC/TLTSVbGnTdJ5vW2KWlzGvCzGtNFLUcFk0
L0HENM1udpsaDSLRLEvTMnSlUi3EUAydoakbXlLT433Ly9Y5Oz8+Xp4/74+X
j3EmR5RmTiKR/LHDk/r9kVPDPVvQfwxB+34sIOH7Jkqftu6GpMhTSp+9KGJP
kz9KF9kDq3qam5CPIiImfVTMdATSrfyU+Q8okvJLWB/7zQmWrGs6ZWoUmXxV
9FTm4wpNIQe6WTMoIrzGIesrGECt6hGrVlCExej3ytK6QfP1rhjOPxTxjYvO
1UUwgfRELsveQpGZBXLl+FsWZP1+oHQ0oAglsfLGj639cHHH+alVzGkx9PLe
cx6g067HXTKiiIdzduJAsycoZ9WL7zAz8ut5i65eoOmKaBvCrOK6UjJk3lAy
e7J4DrO697J8+qcP1DP8xlYxO62+OSblHgSPqDbBBuZpSZq4JMwX8mrG5rYw
P1TQzMjzvqBRUmINmJPt6jglikPQskVnGjGPSJqjdx5ng6ql8ybuPIfGdcU2
G5qGaV9wT0rCado3hyFTzNDgtmoRWbLi/SDXzB3FfQKJvJNr5Q8LXWd1uJHG
Vn1nkz+cWxFu4rYe/NzfkXAE1jyztnEvC1qDuq04oE1sN+C+LWfIBho50NuT
aMQdGlBwei49AAp860xu/BTmQLYJBIqk1+RVXUNod0sgFNEmTRZJLUnVF46C
i3rJ5LSJvqqcXUEw4qI3ueJx2bdIVRCo+zZNfrytSR2+GgylMQaThSfrRjNc
ueAVhT0TaRFhalNnLQa4QBaZmfw6pUytKAyB4HHC1PtC/79uCKxpCJdQLN34
gwh0eBNO4uzR94QATCmJPvPy5/uL5AB27wnT2wupxcsABRrChmSbybuhPFAZ
CV+pcbRQPONB3xDh7tQx+tsVHnhfJVzf6Zj5NYoP4gjCuo0XUnYtH3YFEXau
/SNVbPLhkDvh/n/Pu+jxAkinEk79vGez+KUAuOaE2bbCDaNRAA74HNge/wEw
c52Q
                    "]]}}}, {
                  DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0.9580000000000001}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 40.}, {0.9626240418199918, 
                    1.000000000027396}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "40.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwl0mtIUwEYBuDpBEO3ZczMNC/TLTSVbGnTdJ5vW2KWlzGvCzGtNFLUcFk0
L0HENM1udpsaDSLRLEvTMnSlUi3EUAydoakbXlLT433Ly9Y5Oz8+Xp4/74+X
j3EmR5RmTiKR/LHDk/r9kVPDPVvQfwxB+34sIOH7Jkqftu6GpMhTSp+9KGJP
kz9KF9kDq3qam5CPIiImfVTMdATSrfyU+Q8okvJLWB/7zQmWrGs6ZWoUmXxV
9FTm4wpNIQe6WTMoIrzGIesrGECt6hGrVlCExej3ytK6QfP1rhjOPxTxjYvO
1UUwgfRELsveQpGZBXLl+FsWZP1+oHQ0oAglsfLGj639cHHH+alVzGkx9PLe
cx6g067HXTKiiIdzduJAsycoZ9WL7zAz8ut5i65eoOmKaBvCrOK6UjJk3lAy
e7J4DrO697J8+qcP1DP8xlYxO62+OSblHgSPqDbBBuZpSZq4JMwX8mrG5rYw
P1TQzMjzvqBRUmINmJPt6jglikPQskVnGjGPSJqjdx5ng6ql8ybuPIfGdcU2
G5qGaV9wT0rCado3hyFTzNDgtmoRWbLi/SDXzB3FfQKJvJNr5Q8LXWd1uJHG
Vn1nkz+cWxFu4rYe/NzfkXAE1jyztnEvC1qDuq04oE1sN+C+LWfIBho50NuT
aMQdGlBwei49AAp860xu/BTmQLYJBIqk1+RVXUNod0sgFNEmTRZJLUnVF46C
i3rJ5LSJvqqcXUEw4qI3ueJx2bdIVRCo+zZNfrytSR2+GgylMQaThSfrRjNc
ueAVhT0TaRFhalNnLQa4QBaZmfw6pUytKAyB4HHC1PtC/79uCKxpCJdQLN34
gwh0eBNO4uzR94QATCmJPvPy5/uL5AB27wnT2wupxcsABRrChmSbybuhPFAZ
CV+pcbRQPONB3xDh7tQx+tsVHnhfJVzf6Zj5NYoP4gjCuo0XUnYtH3YFEXau
/SNVbPLhkDvh/n/Pu+jxAkinEk79vGez+KUAuOaE2bbCDaNRAA74HNge/wEw
c52Q
                    "]]}}}, {
                  DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0.9580000000000001}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 40.}, {0.9626240418199918, 
                    1.000000000027396}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "40.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("InterpolatingFunction[{{0., 40.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"p2", "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwdx30s1HEcwPF7UDfnIU8h1s0JY651Tjq6+H7udIk83K6RIhKyNDGW1hVZ
hCY9XWWkObPMneVOaNbyuEUzTSm0FD+WVCJPdR67fr/vH++99+KeTpcnM2g0
Gp+MekzURli+gAuOKt68ypdAsqtC5oqSC/OhGZF1fAK5cgc90yadYVST9+cj
h0D8yIhMfagLxHsUEjetCPRjjllB6FxhtkS0nWNCINPoioI3G26Qed3c68NW
AiUftS4dSHIH3juGeoNJIHfO+eihZg9YWKloS2IQiHu5Xjzv5An26oKuk3QC
9fo7maYW8oCdGC15TSPQyEB2+fT73XCiSBCdTXrnsvagwn8PLGcduiEhPZ2V
fLw4iA86pNW4kX6gMqczZ/mgGQ+ptCUdZ6sWFqu8QNrTrzQl/TmrOWLbYQGk
t8cjFukLDo1/VZsCaJbv0DNJT2UFm09qvYGXkstnkGa3yFmuUXsh/36/mE46
BIXdzmT7QKxxg5ZGGjW2rnQ984GFhbVEyibDHYOdx/YBpNj7UV4MbBX1sYUg
t2niUL5Vzi0cahSC9IuxJWWp75X4mTO+UBtuYUy5sT3IgWnhB48n3LdQXtY3
SPta/OCu1SqDslzBolWe3Q+xq9V0yslf3z5KtxTBt5DfNMrKspKesF4RdD+/
hl22OZEweukAtNn7YsuOqMdSnfzh4ey0wWAYRy6TCT+NhvzBqykN++mpkhFV
TgA4vHDHNrsn8/nljIAn3IVdbMpylgwjELEzsGOFdiv9AQBLW6uwGaU1brnl
AGYu1djWL3PMihYBTCpLsf/FWUzdkYohczQP+2Kto5GqSgylc0rsvoRxa92S
GHSKTuz6Lsdzr8Il4McaxtavPVEI6iQQLBvH5tR9V6jWJRDzaQZ7cLWm2zoq
EMxZeuyEDrv1Ik0gzI5tYAtsZGsGQyB42xiw/wMAO2ow
                    "]], 
                    
                    LineBox[{{2.0717073850648857`, 0.4958523920542598}, {
                    2.179500040353797, 0.5069126788048409}}]}}}, {
                  DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0.4945}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 40.}, {0.4958523920542598, 
                    0.5069126788048409}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "40.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwdx30s1HEcwPF7UDfnIU8h1s0JY651Tjq6+H7udIk83K6RIhKyNDGW1hVZ
hCY9XWWkObPMneVOaNbyuEUzTSm0FD+WVCJPdR67fr/vH++99+KeTpcnM2g0
Gp+MekzURli+gAuOKt68ypdAsqtC5oqSC/OhGZF1fAK5cgc90yadYVST9+cj
h0D8yIhMfagLxHsUEjetCPRjjllB6FxhtkS0nWNCINPoioI3G26Qed3c68NW
AiUftS4dSHIH3juGeoNJIHfO+eihZg9YWKloS2IQiHu5Xjzv5An26oKuk3QC
9fo7maYW8oCdGC15TSPQyEB2+fT73XCiSBCdTXrnsvagwn8PLGcduiEhPZ2V
fLw4iA86pNW4kX6gMqczZ/mgGQ+ptCUdZ6sWFqu8QNrTrzQl/TmrOWLbYQGk
t8cjFukLDo1/VZsCaJbv0DNJT2UFm09qvYGXkstnkGa3yFmuUXsh/36/mE46
BIXdzmT7QKxxg5ZGGjW2rnQ984GFhbVEyibDHYOdx/YBpNj7UV4MbBX1sYUg
t2niUL5Vzi0cahSC9IuxJWWp75X4mTO+UBtuYUy5sT3IgWnhB48n3LdQXtY3
SPta/OCu1SqDslzBolWe3Q+xq9V0yslf3z5KtxTBt5DfNMrKspKesF4RdD+/
hl22OZEweukAtNn7YsuOqMdSnfzh4ey0wWAYRy6TCT+NhvzBqykN++mpkhFV
TgA4vHDHNrsn8/nljIAn3IVdbMpylgwjELEzsGOFdiv9AQBLW6uwGaU1brnl
AGYu1djWL3PMihYBTCpLsf/FWUzdkYohczQP+2Kto5GqSgylc0rsvoRxa92S
GHSKTuz6Lsdzr8Il4McaxtavPVEI6iQQLBvH5tR9V6jWJRDzaQZ7cLWm2zoq
EMxZeuyEDrv1Ik0gzI5tYAtsZGsGQyB42xiw/wMAO2ow
                    "]], 
                    
                    LineBox[{{2.0717073850648857`, 0.4958523920542598}, {
                    2.179500040353797, 0.5069126788048409}}]}}}, {
                  DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0.4945}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 40.}, {0.4958523920542598, 
                    0.5069126788048409}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "40.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("InterpolatingFunction[{{0., 40.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{3.624973782895488*^9}]
}, Open  ]],

Cell["\<\
We can plot these functions and they will look as though they were continuous:\
\>", "Text",
 CellChangeTimes->{{3.593794081987266*^9, 3.593794089506957*^9}, {
   3.593794142663097*^9, 3.593794147661992*^9}, {3.5937942040405083`*^9, 
   3.593794222651615*^9}, 3.5938706469175262`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"m1", "[", "t", "]"}], ",", " ", 
       RowBox[{"m2", "[", "t", "]"}], ",", 
       RowBox[{"p1", "[", "t", "]"}], ",", 
       RowBox[{"p2", "[", "t", "]"}]}], "}"}], "/.", "repTargSoln1N"}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "40"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.593794527456061*^9, 3.5937945485369673`*^9}, {
   3.593794580576042*^9, 3.593794608278398*^9}, 3.593870646917884*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
79W1epVPSuPGM4KOf/4fTvh8PQ==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
t0iFGGDTVd6MbXeTgvT7h/3EsY94bKw02Y9/vztBamwTFXncGjESj5eCQteX
r6Oxybx3DLteSEHeEeX+56y4fn7ObhxlUtD7RznjJnbOC/boHZU4rmaaGIct
ZHfq9ctGKaDtcRW0w2a84Kp/aUQK5HePTfzZSEUdG3l1d/FLQ8mwQL859snl
cxpvTkiDZTJjHBcLFTVH+maciJOGRYsZ6VVmKpKYNPyjmywNdjU5i+PYNf2/
il9dlQZTFh/j99hbKhz1C59Jw3gCj1w0dlacpPG9UWm4nLjWO8NERVN/F+96
TUrDu4sSMUPYJhHtG8RnpWGQzGn9CfubT1LNLXoZKHKpDC3CVt8+aX5VRAYo
JxgfR2JXMZdaJ9vJALeg2Es6bJ6Yy4U79uK4cMLwDCOe1/kQTiYvGehJ1dUd
wd40JvYpLlQGRKtn9zRg29WfcTyZLAN5nQdUrmHTUm3cwsplQP7Msq0mNgvX
2H4HJVnYJ+Myl8RARXNJbmbZ6rJgmajXcBp7dLVVYlxbFlQFw18dwa6dKO2M
MZWFZjXGNl/sxA+pZk/cZOF7US+fMTZzrJrkhguycO4+LX9tA843d3/Z8qos
CAkV989jj4YKdF2/JQuf9U5ITmHX7qO/oJIrCx8+0dOo2Ik6n5ddqmShRdJg
zzts5l9Huwp/y4IHyfF6KpHP/8eLxb+yYB328dcZIl+f5wUzOjk4yO++9zSR
r8FiR+8WOVhVVvI8ROTLEXrJLIfjOq3qLkQ+j/IL7i5ycO5ORJ0CNlMTk/nm
t3KQmhHysp0e9zP0tm//Ozn4E90S3YLNw6YRW9ggB4ao074BW8bKq9S+Sw6O
fVRWqcTe3lSmfPu3HFju3Zf8FDu+6SCnipI8ROWOv03CTgllVllTlwfdhWH3
BOzLbJk723TkYTSQtCkG+55VQ/wRM3kQfKeYdBS7qknmz1sveeBVseEIwKZr
7u62vi4PhtOChubYG8PC5ySy5GEqefySKTYnO8vW3w/k4eUz5hmELWGtaXm9
SB4u8Oa06mKj5vTygSZ5SA+sY1TGPt1sej+cUQE+WPZSuLATw3oqTDYrwCny
dkl27HT2Q3083ArwI99HYDN2pnUWb6m4AiiMukkwYb9pXkiiN1CA45nnM/7S
UdFSc/6By4cUYM+Z/IVhbLE271vboxRg9Z744UFsk8+8DXOnFSD8+3+zX7FT
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
Hf3n8t9yeGOm8GPln/8PKoRe4A==
     "]]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
K2ck8EEbAA8xPnx+/wNIppF8
     "]]}, 
   {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
r2/4f22Wrz8=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.624973788469951*^9}]
}, Open  ]],

Cell["\<\
Cool! But that\[CloseCurlyQuote]s just for one particular set of parameters. \
Let\[CloseCurlyQuote]s try to wrap this whole thing in a function to which we \
can pass in the parameters as arguments. First, though, \
let\[CloseCurlyQuote]s clear the parameter symbols of the values that have \
been assigned to them, so we can make sure we\[CloseCurlyQuote]re starting \
with a clean slate.\
\>", "Text",
 CellChangeTimes->{{3.5937949220939074`*^9, 3.593794995187804*^9}, {
   3.593795039052362*^9, 3.593795180587735*^9}, {3.5938704134552183`*^9, 
   3.593870414053422*^9}, {3.5938704786205597`*^9, 3.5938704843023777`*^9}, {
   3.593870559950489*^9, 3.5938706000765257`*^9}, 3.5938706469210443`*^9}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "synthRt1", ",", " ", "mDeg1", ",", "mDeg2", ",", "transRtC1", ",", 
   "transRtC2", ",", "pDeg1", ",", "pDeg2", ",", "m1Init", ",", "m2Init", ",",
    "p1Init", ",", "p2Init", ",", "v2", ",", " ", "repStrength12"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.593795249408081*^9, 3.593795381373981*^9}, {
   3.593795899040072*^9, 3.5937958999822063`*^9}, 3.593870646921535*^9, {
   3.5940642054501553`*^9, 3.59406422137446*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nSolveRepTarg", "[", 
   RowBox[{
   "synthRt1_", ",", "mDeg1_", ",", "mDeg2_", ",", "transRtC1_", ",", 
    "transRtC2_", ",", "pDeg1_", ",", "pDeg2_", ",", "m1Init_", ",", 
    "m2Init_", ",", "p1Init_", ",", "p2Init_", ",", "v2_", ",", 
    "repStrength12_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"soln1", "=", 
      RowBox[{
       RowBox[{"NDSolve", "[", 
        RowBox[{
         StyleBox[
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"m1", "'"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{"synthRt1", " ", "-", 
              RowBox[{"mDeg1", "*", " ", 
               RowBox[{"m1", "[", "t", "]"}]}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"p1", "'"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{"transRtC1", "*", 
               RowBox[{"m1", "[", "t", "]"}]}], "-", 
              RowBox[{"pDeg1", "*", 
               RowBox[{"p1", "[", "t", "]"}]}]}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"m2", "'"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{
              FractionBox["v2", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"repStrength12", " ", "*", 
                  RowBox[{"p1", "[", "t", "]"}]}]}], ")"}]], "-", 
              RowBox[{"mDeg2", "*", " ", 
               RowBox[{"m2", "[", "t", "]"}]}]}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"p2", "'"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{"transRtC2", "*", 
               RowBox[{"m2", "[", "t", "]"}]}], "-", 
              RowBox[{"pDeg2", "*", 
               RowBox[{"p2", "[", "t", "]"}]}]}]}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"m1", "[", "0", "]"}], "\[Equal]", "m1Init"}], ",", " ", 
            
            RowBox[{
             RowBox[{"m2", "[", "0", "]"}], "\[Equal]", "m2Init"}], ",", " ", 
            
            RowBox[{
             RowBox[{"p1", "[", "0", "]"}], "\[Equal]", "p1Init"}], ",", " ", 
            
            RowBox[{
             RowBox[{"p2", "[", "0", "]"}], "\[Equal]", "p2Init"}]}], "}"}],
          FontSize->14], ",", 
         RowBox[{"{", 
          RowBox[{"m1", ",", "m2", ",", "p1", ",", "p2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "40"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"m1", "[", "t", "]"}], ",", " ", 
          RowBox[{"m2", "[", "t", "]"}], ",", 
          RowBox[{"p1", "[", "t", "]"}], ",", 
          RowBox[{"p2", "[", "t", "]"}]}], "}"}], "/.", "soln1"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "40"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5937999050084352`*^9, 3.593799916862565*^9}, 
   3.593800079111616*^9, {3.593870232196143*^9, 3.593870360037262*^9}, {
   3.593870432228945*^9, 3.593870450532432*^9}, {3.5938706043231783`*^9, 
   3.593870646922554*^9}, {3.594064232080858*^9, 3.594064264864067*^9}, {
   3.594064305005475*^9, 3.594064314468102*^9}, {3.594064360496031*^9, 
   3.59406436307985*^9}, {3.624978591199783*^9, 3.624978608979603*^9}, {
   3.624979488667403*^9, 3.62497950281852*^9}}],

Cell["\<\
Now evaluating this function with parameters as arguments should produce a \
plot of the protein and RNA concentrations as a function of time, for those \
parameters.\
\>", "Text",
 CellChangeTimes->{{3.624813691723001*^9, 3.624813741274741*^9}}],

Cell[BoxData[
 RowBox[{"nSolveRepTarg", "[", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "1", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{3.5938706469229107`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
79W1epVPSuPGM4KOf/4fTvh8PQ==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
t0iFGGDTVd6MbXeTgvT7h/3EsY94bKw02Y9/vztBamwTFXncGjESj5eCQteX
r6Oxybx3DLteSEHeEeX+56y4fn7ObhxlUtD7RznjJnbOC/boHZU4rmaaGIct
ZHfq9ctGKaDtcRW0w2a84Kp/aUQK5HePTfzZSEUdG3l1d/FLQ8mwQL859snl
cxpvTkiDZTJjHBcLFTVH+maciJOGRYsZ6VVmKpKYNPyjmywNdjU5i+PYNf2/
il9dlQZTFh/j99hbKhz1C59Jw3gCj1w0dlacpPG9UWm4nLjWO8NERVN/F+96
TUrDu4sSMUPYJhHtG8RnpWGQzGn9CfubT1LNLXoZKHKpDC3CVt8+aX5VRAYo
JxgfR2JXMZdaJ9vJALeg2Es6bJ6Yy4U79uK4cMLwDCOe1/kQTiYvGehJ1dUd
wd40JvYpLlQGRKtn9zRg29WfcTyZLAN5nQdUrmHTUm3cwsplQP7Msq0mNgvX
2H4HJVnYJ+Myl8RARXNJbmbZ6rJgmajXcBp7dLVVYlxbFlQFw18dwa6dKO2M
MZWFZjXGNl/sxA+pZk/cZOF7US+fMTZzrJrkhguycO4+LX9tA843d3/Z8qos
CAkV989jj4YKdF2/JQuf9U5ITmHX7qO/oJIrCx8+0dOo2Ik6n5ddqmShRdJg
zzts5l9Huwp/y4IHyfF6KpHP/8eLxb+yYB328dcZIl+f5wUzOjk4yO++9zSR
r8FiR+8WOVhVVvI8ROTLEXrJLIfjOq3qLkQ+j/IL7i5ycO5ORJ0CNlMTk/nm
t3KQmhHysp0e9zP0tm//Ozn4E90S3YLNw6YRW9ggB4ao074BW8bKq9S+Sw6O
fVRWqcTe3lSmfPu3HFju3Zf8FDu+6SCnipI8ROWOv03CTgllVllTlwfdhWH3
BOzLbJk723TkYTSQtCkG+55VQ/wRM3kQfKeYdBS7qknmz1sveeBVseEIwKZr
7u62vi4PhtOChubYG8PC5ySy5GEqefySKTYnO8vW3w/k4eUz5hmELWGtaXm9
SB4u8Oa06mKj5vTygSZ5SA+sY1TGPt1sej+cUQE+WPZSuLATw3oqTDYrwCny
dkl27HT2Q3083ArwI99HYDN2pnUWb6m4AiiMukkwYb9pXkiiN1CA45nnM/7S
UdFSc/6By4cUYM+Z/IVhbLE271vboxRg9Z744UFsk8+8DXOnFSD8+3+zX7FT
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
Hf3n8t9yeGOm8GPln/8PKoRe4A==
     "]]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
K2ck8EEbAA8xPnx+/wNIppF8
     "]]}, 
   {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
r2/4f22Wrz8=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{{3.62497565424463*^9, 3.624975657262051*^9}}],

Cell[TextData[{
 "We need the ",
 StyleBox["Evaluate",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " so the list of replacement rules ",
 StyleBox["soln1",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " will be applied -- normally, ",
 StyleBox["Plot",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " treats it\[CloseCurlyQuote]s first argument as a formal expression to be \
evaluated separately at each point along the x axis. Now we can wrap this in ",
 StyleBox["Manipulate",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " so we can play with the parameters and see the effects."
}], "Text",
 CellChangeTimes->{{3.5938707487340183`*^9, 3.5938707807082443`*^9}, {
  3.5956800355743504`*^9, 3.595680163772045*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"nSolveRepTarg", "[", 
    RowBox[{
    "synthRt1", ",", "mDeg1", ",", "mDeg2", ",", "transRtC1", ",", 
     "transRtC2", ",", "pDeg1", ",", "pDeg2", ",", "0.", ",", "0.", ",", "0.",
      ",", "0.", ",", "synthRt2", ",", "repStrength12"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"synthRt1", ",", " ", "0.", ",", "1."}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"mDeg1", ",", " ", "0.001", ",", "1."}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"transRtC1", ",", " ", "0.", ",", "1."}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"pDeg1", ",", " ", "0.001", ",", "1."}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"repStrength12", ",", " ", "0.", ",", "20."}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"synthRt2", ",", " ", "0.", ",", "1."}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"mDeg2", ",", " ", "0.001", ",", "1."}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"transRtC2", ",", " ", "0.", ",", "1."}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"pDeg2", ",", " ", "0.001", ",", "1."}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.593870784874342*^9, 3.5938707892312603`*^9}, {
  3.593870839538678*^9, 3.5938708844385633`*^9}, {3.593870914588191*^9, 
  3.593871108609652*^9}, {3.593871202416387*^9, 3.593871358884204*^9}, {
  3.593871419298285*^9, 3.59387141969552*^9}, {3.5938719530523243`*^9, 
  3.593872022340433*^9}, {3.593872069732288*^9, 3.593872079459982*^9}, {
  3.5938721495466623`*^9, 3.5938722145725803`*^9}, {3.5940662583684587`*^9, 
  3.594066350251298*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.624980242697784*^9, 3.624980267414212*^9}}],

Cell[CellGroupData[{

Cell["\<\
Exercise: Reparameterizing in terms of half-time and equilibrium \
concentration \
\>", "Subsubsubsection",
 CellChangeTimes->{{3.583175578135281*^9, 3.583175585252611*^9}, {
  3.583237215724431*^9, 3.583237230152749*^9}, {3.583237385305098*^9, 
  3.583237408360573*^9}, {3.583350266707965*^9, 3.5833502680112123`*^9}, {
  3.58342604161637*^9, 3.58342604629023*^9}, {3.583498856500457*^9, 
  3.5834988629059267`*^9}, {3.583505142291054*^9, 3.5835051472415533`*^9}, {
  3.593965875610454*^9, 3.5939659098091803`*^9}}],

Cell[TextData[{
 "As we saw earlier, the rate at which a molecule\[CloseCurlyQuote]s \
concentration gets half way to equilibrium depends on its degradation rate \
constant. We could call this time the \[OpenCurlyDoubleQuote]halftime\
\[CloseCurlyDoubleQuote] or \[OpenCurlyDoubleQuote]halflife\
\[CloseCurlyDoubleQuote] of the molecule. We also saw, by taking the limits \
of the concentrations as time grows without bound, that those limits -- i.e. \
the equilibrium concentrations -- depend on both the degradation rate and the \
synthesis rate in a very simple way. Here, your task is to set up a ",
 StyleBox["Manipulate",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " panel for the system we have just been studying, but where the sliders \
control the half-lives and equilibrium concentrations directly. To do that, \
you have to use the equations describing relations between the old parameters \
(e.g. ",
 StyleBox["synthRt1",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ") and the new ones (e.g. ",
 StyleBox["p1EqConc",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ") to solve for the old parameters in terms of the new ones (e.g. what is ",
 StyleBox["synthRt1",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ", given that you know the various equilibrium concentrations and \
half-lives?). Now, you will write a function that takes in half-lives and \
equilibrium concentrations, calculates the values of the old parameters (e.g. \
 ",
 StyleBox["synthRt1",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "), and calls ",
 StyleBox["nSolveRepTarg",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " with the old parameters. Then plot this new function from within a ",
 StyleBox["Manipulate",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " where the half lives and equilibrium constants are controlled by sliders. \
The only \[OpenCurlyDoubleQuote]old\[CloseCurlyDoubleQuote] parameter that \
will still be controlled directly from the sliders is ",
 StyleBox["repStrength12.",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " Be careful to set the ranges for your sliders so you \
don\[CloseCurlyQuote]t end up dividing by zero.\n\nWhen \
you\[CloseCurlyQuote]re done, you should be able to control the halflives \
without changing the equilibrium concentrations. If you make the halflife \
range relatively small, compared to the horizontal axis of the graph, you \
should see almost no change in the height of the lines at the right of the \
graph when you change the half-life. Of course, if the halflives get too long \
relative to the graph, your concentrations won\[CloseCurlyQuote]t be near \
equilibrium on your graph. One way to fix this would be to make the range of \
the horizontal axis on the graph a certain number of times (e.g 5 times) the \
maximum halflife defined by the sliders at any given moment. This would \
ensure that everything is always near equilibrium on the right edge of the \
graph, however it would have another disadvantage....when changing the \
largest halflife, the horizontal scale would change creating an apparent \
change in the shapes of the curves."
}], "Text",
 CellChangeTimes->{{3.59406654250871*^9, 3.594066793551783*^9}, {
  3.594066873517002*^9, 3.594067139790597*^9}, {3.594067181457898*^9, 
  3.594067217222863*^9}, {3.594067381623473*^9, 3.59406767075851*^9}, {
  3.5940678069953423`*^9, 3.594067818327355*^9}, {3.624807798875532*^9, 
  3.62480779991429*^9}, {3.624808343767956*^9, 3.62480850285314*^9}, {
  3.624975675635912*^9, 3.624975700029588*^9}, {3.62497710660193*^9, 
  3.624977108601481*^9}}],

Cell["\<\
You should also be able to change the equilibrium concentrations without \
affecting the shapes of the curves. And changes to the equilibrium \
concentration of an mRNA should no longer affect the equilibrium \
concentration of the protein.\
\>", "Text",
 CellChangeTimes->{{3.594067834255588*^9, 3.5940678518395853`*^9}, {
  3.594067921860599*^9, 3.5940679483995953`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"byEqAndHL", "[", 
   RowBox[{
   "m1Eq_", ",", "m1HL_", ",", "m2Eq_", ",", "m2HL_", ",", "p1Eq_", ",", 
    "p1HL_", ",", "p2Eq_", ",", "p2HL_", ",", "m1Init_", ",", "m20_", ",", 
    "p10_", ",", "p20_", ",", "repStr12_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mDeg1", "=", 
       RowBox[{
        RowBox[{"Log", "[", "2", "]"}], "/", "m1HL"}]}], ",", 
      RowBox[{"pDeg1", "=", 
       RowBox[{
        RowBox[{"Log", "[", "2", "]"}], "/", "p1HL"}]}], ",", 
      RowBox[{"mDeg2", "=", 
       RowBox[{
        RowBox[{"Log", "[", "2", "]"}], "/", "m2HL"}]}], ",", 
      RowBox[{"pDeg2", "=", 
       RowBox[{
        RowBox[{"Log", "[", "2", "]"}], "/", "p2HL"}]}], ",", 
      RowBox[{"synthRt1", "=", 
       RowBox[{"m1Eq", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", "2", "]"}], "/", "m1HL"}], ")"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"transRtC1", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", "2", "]"}], "/", "p1HL"}], ")"}], "*", 
        RowBox[{"p1Eq", "/", "m1Eq"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"synthRt2", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", "2", "]"}], "/", "m2HL"}], ")"}], " ", 
        RowBox[{"(", "m1Eq", ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"repStr12", "*", "p1Eq"}]}], ")"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"transRtC2", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", "2", "]"}], "/", "p2HL"}], ")"}], " ", 
        RowBox[{
         RowBox[{"(", "p2Eq", ")"}], "/", "m2Eq"}]}]}]}], "}"}], ",", 
    RowBox[{"nSolveRepTarg", "[", 
     RowBox[{
     "synthRt1", ",", "mDeg1", ",", "mDeg2", ",", "transRtC1", ",", 
      "transRtC2", ",", "pDeg1", ",", "pDeg2", ",", "m1Init", ",", "m20", ",",
       "p10", ",", "p20", ",", "synthRt2", ",", "repStr12"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.624974225177505*^9, 3.624974251777958*^9}, 
   3.624974446906539*^9, {3.624980379733623*^9, 3.624980395229944*^9}, {
   3.624980448333217*^9, 3.624980571284378*^9}, {3.624980739322822*^9, 
   3.624980743350045*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"byEqAndHL", "[", 
    RowBox[{
    "m1Eq", ",", "m1HL", ",", "m2Eq", ",", "m2HL", ",", "p1Eq", ",", "p1HL", 
     ",", "p2Eq", ",", "p2HL", ",", "0.", ",", "0.", ",", "0.", ",", "0.", 
     ",", "repStr12"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"m1Eq", ",", "0.001", ",", "20."}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m1HL", ",", "0.001", ",", "20."}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m2Eq", ",", "0.001", ",", "20."}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m2HL", ",", "0.001", ",", "20."}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"p1Eq", ",", "0.001", ",", "20."}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"p1HL", ",", "0.001", ",", "20."}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"p2Eq", ",", "0.001", ",", "20."}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"p2HL", ",", "0.001", ",", "20."}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"repStr12", ",", "0.001", ",", "20."}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.624980391789871*^9, 3.624980397440282*^9}, {
  3.624980603231453*^9, 3.624980659085205*^9}, {3.624980748652276*^9, 
  3.624980750686808*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`m1Eq$$ = 6.26, $CellContext`m1HL$$ = 
    7.74, $CellContext`m2Eq$$ = 13.48, $CellContext`m2HL$$ = 
    13.040000000000001`, $CellContext`p1Eq$$ = 15.56, $CellContext`p1HL$$ = 
    8.26, $CellContext`p2Eq$$ = 6.16, $CellContext`p2HL$$ = 
    15.3, $CellContext`repStr12$$ = 5.5600000000000005`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`m1Eq$$], 0.001, 20.}, {
      Hold[$CellContext`m1HL$$], 0.001, 20.}, {
      Hold[$CellContext`m2Eq$$], 0.001, 20.}, {
      Hold[$CellContext`m2HL$$], 0.001, 20.}, {
      Hold[$CellContext`p1Eq$$], 0.001, 20.}, {
      Hold[$CellContext`p1HL$$], 0.001, 20.}, {
      Hold[$CellContext`p2Eq$$], 0.001, 20.}, {
      Hold[$CellContext`p2HL$$], 0.001, 20.}, {
      Hold[$CellContext`repStr12$$], 0.001, 20.}}, Typeset`size$$ = {
    485.5, {30., 15.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`m1Eq$42041$$ = 
    0, $CellContext`m1HL$42042$$ = 0, $CellContext`m2Eq$42043$$ = 
    0, $CellContext`m2HL$42044$$ = 0, $CellContext`p1Eq$42045$$ = 
    0, $CellContext`p1HL$42046$$ = 0, $CellContext`p2Eq$42047$$ = 
    0, $CellContext`p2HL$42048$$ = 0, $CellContext`repStr12$42049$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`m1Eq$$ = 0.001, $CellContext`m1HL$$ = 
        0.001, $CellContext`m2Eq$$ = 0.001, $CellContext`m2HL$$ = 
        0.001, $CellContext`p1Eq$$ = 0.001, $CellContext`p1HL$$ = 
        0.001, $CellContext`p2Eq$$ = 0.001, $CellContext`p2HL$$ = 
        0.001, $CellContext`repStr12$$ = 0.001}, "ControllerVariables" :> {
        Hold[$CellContext`m1Eq$$, $CellContext`m1Eq$42041$$, 0], 
        Hold[$CellContext`m1HL$$, $CellContext`m1HL$42042$$, 0], 
        Hold[$CellContext`m2Eq$$, $CellContext`m2Eq$42043$$, 0], 
        Hold[$CellContext`m2HL$$, $CellContext`m2HL$42044$$, 0], 
        Hold[$CellContext`p1Eq$$, $CellContext`p1Eq$42045$$, 0], 
        Hold[$CellContext`p1HL$$, $CellContext`p1HL$42046$$, 0], 
        Hold[$CellContext`p2Eq$$, $CellContext`p2Eq$42047$$, 0], 
        Hold[$CellContext`p2HL$$, $CellContext`p2HL$42048$$, 0], 
        Hold[$CellContext`repStr12$$, $CellContext`repStr12$42049$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`byEqAndHL[$CellContext`m1Eq$$, \
$CellContext`m1HL$$, $CellContext`m2Eq$$, $CellContext`m2HL$$, \
$CellContext`p1Eq$$, $CellContext`p1HL$$, $CellContext`p2Eq$$, \
$CellContext`p2HL$$, 0., 0., 0., 0., $CellContext`repStr12$$], 
      "Specifications" :> {{$CellContext`m1Eq$$, 0.001, 
         20.}, {$CellContext`m1HL$$, 0.001, 20.}, {$CellContext`m2Eq$$, 0.001,
          20.}, {$CellContext`m2HL$$, 0.001, 20.}, {$CellContext`p1Eq$$, 
         0.001, 20.}, {$CellContext`p1HL$$, 0.001, 20.}, {$CellContext`p2Eq$$,
          0.001, 20.}, {$CellContext`p2HL$$, 0.001, 
         20.}, {$CellContext`repStr12$$, 0.001, 20.}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{877., {156., 163.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.624980409913881*^9, 3.624980663293445*^9, 
  3.624980752250071*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise: Comparing repression models", "Subsubsubsection",
 CellChangeTimes->{{3.583175578135281*^9, 3.583175585252611*^9}, {
  3.583237215724431*^9, 3.583237230152749*^9}, {3.583237385305098*^9, 
  3.583237408360573*^9}, {3.583350266707965*^9, 3.5833502680112123`*^9}, {
  3.58342604161637*^9, 3.58342604629023*^9}, {3.583498856500457*^9, 
  3.5834988629059267`*^9}, {3.583505142291054*^9, 3.5835051472415533`*^9}, {
  3.593965875610454*^9, 3.5939659098091803`*^9}, {3.5956817578304043`*^9, 
  3.5956817773470716`*^9}}],

Cell["\<\
[Nothing in 2014. For 2015, put in an exercise using the models from the \
papers.]\
\>", "Text",
 CellChangeTimes->{{3.595681793461809*^9, 3.5956818045637493`*^9}, {
  3.6248194150480328`*^9, 3.624819424841634*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Exercise: Numerically integrating a generic system of differential equations\
\>", "Subsubsubsection",
 CellChangeTimes->{{3.583175578135281*^9, 3.583175585252611*^9}, {
  3.583237215724431*^9, 3.583237230152749*^9}, {3.583237385305098*^9, 
  3.583237408360573*^9}, {3.583350266707965*^9, 3.5833502680112123`*^9}, {
  3.58342604161637*^9, 3.58342604629023*^9}, {3.583498856500457*^9, 
  3.5834988629059267`*^9}, {3.583505142291054*^9, 3.5835051472415533`*^9}, {
  3.593965875610454*^9, 3.5939659098091803`*^9}, {3.5956817578304043`*^9, 
  3.5956817773470716`*^9}, {3.624819401882715*^9, 3.624819408213472*^9}, {
  3.624819447388792*^9, 3.624819456980377*^9}}],

Cell[TextData[{
 "Once we have settled on the forms of our equations, we \
don\[CloseCurlyQuote]t want to have to type them in again every time we want \
to change the number of genes . Instead, we want to define a function that \
can take in parameters for a system of any number of genes repressing one \
another. This is left as an exercise that is specified in more detail below. \
However, here is an important hint: instead of using",
 StyleBox[" m1, m2, p1, p2",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " as function names, we can use ",
 StyleBox["m[1]",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ", ",
 StyleBox["m[2]",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ", ...,",
 StyleBox["p[1]",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ",",
 StyleBox[" ",
  FontFamily->"Courier"],
 StyleBox["p[2]",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ", .... Making the time dependence explicit gives us, for example, ",
 StyleBox["m[1][t]",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ", the derivative of which can be indicated by",
 StyleBox[" ",
  FontFamily->"Courier"],
 StyleBox["m[1]\[CloseCurlyQuote][t]",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ". So to programmatically construct a system of ODEs you can use, for \
example, ",
 StyleBox["Table[m[i]\[CloseCurlyQuote][t]==...,{i, 1, n}",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ", where the three dots indicates the right hand side of your equation.\n\n\
Below is the outline of a function that takes in vectors (lists) of \
parameters, constructs a list of symbolic equations from them using the ",
 StyleBox["m[i][t]",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " approach, prints the equations, and hands them to ",
 StyleBox["NDSolve",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " to solve. For this part, write equations in which the expression of each \
gene is unregulated, but may be governed by different transcription, \
translation, and degradation rate constants."
}], "Text",
 CellChangeTimes->{{3.5939661694986057`*^9, 3.593966220865205*^9}, {
   3.5939665263447933`*^9, 3.593966582665044*^9}, {3.59396662371309*^9, 
   3.5939668298255177`*^9}, {3.593966919299917*^9, 3.593967106433577*^9}, {
   3.593967157119179*^9, 3.59396720681008*^9}, 3.624814087852005*^9, {
   3.6248185134500437`*^9, 3.62481861738128*^9}, 3.624818689564919*^9, {
   3.6248187272744923`*^9, 3.624818727747079*^9}, {3.624819125931904*^9, 
   3.624819177565114*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nSolveNoRegVect", "[", 
   RowBox[{
   "synthRtVect_", ",", "mDegRtConstVect_", ",", "translationRtConstVect_", 
    ",", "pDegRtConstVect_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"numGenes", "=", 
       RowBox[{"Length", "[", "synthRtVect", "]"}]}], ",", "eqns", ",", 
      "funs", ",", "solns"}], "}"}], ",", 
    RowBox[{
     RowBox[{"eqns", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"m", "[", "i", "]"}], "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"synthRtVect", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "-", 
            RowBox[{
             RowBox[{"mDegRtConstVect", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{
              RowBox[{"m", "[", "i", "]"}], "[", "t", "]"}]}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"p", "[", "i", "]"}], "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{
             RowBox[{"translationRtConstVect", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{
              RowBox[{"m", "[", "i", "]"}], "[", "t", "]"}]}], "-", 
            RowBox[{
             RowBox[{"pDegRtConstVect", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{
              RowBox[{"p", "[", "i", "]"}], "[", "t", "]"}]}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"m", "[", "i", "]"}], "[", "0", "]"}], "\[Equal]", "0"}], 
          ",", 
          RowBox[{
           RowBox[{
            RowBox[{"p", "[", "i", "]"}], "[", "0", "]"}], "\[Equal]", 
           "0"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "numGenes"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"funs", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"m", "[", "i", "]"}], "[", "t", "]"}], ",", 
          RowBox[{
           RowBox[{"p", "[", "i", "]"}], "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "numGenes"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "eqns", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"solns", "=", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"eqns", ",", "1"}], "]"}], ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{"funs", ",", "1"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "40"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"m", "[", "i", "]"}], "[", "t", "]"}], ",", 
               RowBox[{
                RowBox[{"p", "[", "i", "]"}], "[", "t", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "numGenes"}], "}"}]}], "]"}], ",", "1"}], 
          "]"}], "/.", "solns"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "40"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.62498316970712*^9, 3.624983169707867*^9}}],

Cell["\<\
Now to see it in action, evaluate the following expression. You should get a \
list of equations followed by a plot.\
\>", "Text",
 CellChangeTimes->{{3.624818782302125*^9, 3.6248188087574778`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nSolveNoRegVect", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.593894619446755*^9, 3.593894635217053*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"m", "[", "1", "]"}], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"m", "[", "1", "]"}], "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"p", "[", "1", "]"}], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"m", "[", "1", "]"}], "[", "t", "]"}], "-", 
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"m", "[", "1", "]"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     
     RowBox[{
      RowBox[{
       RowBox[{"p", "[", "1", "]"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"m", "[", "2", "]"}], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"m", "[", "2", "]"}], "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"p", "[", "2", "]"}], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"m", "[", "2", "]"}], "[", "t", "]"}], "-", 
       RowBox[{
        RowBox[{"p", "[", "2", "]"}], "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"m", "[", "2", "]"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     
     RowBox[{
      RowBox[{
       RowBox[{"p", "[", "2", "]"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
    "}"}]}], "}"}]], "Print",
 CellChangeTimes->{
  3.624981085953389*^9, 3.624981131678639*^9, 3.624981225583427*^9, 
   3.624981255985495*^9, {3.624981342367656*^9, 3.624981392405676*^9}, {
   3.62498143277093*^9, 3.62498146318587*^9}, {3.624981523021195*^9, 
   3.62498154863581*^9}, {3.624981648534231*^9, 3.624981658331676*^9}, {
   3.624981773475075*^9, 3.624981788125694*^9}, {3.624981858764133*^9, 
   3.624981867059191*^9}, {3.624981928121112*^9, 3.624981964762456*^9}, 
   3.624982038688818*^9, {3.624982109609258*^9, 3.624982138117894*^9}, 
   3.624982259275719*^9, {3.624982316793762*^9, 3.6249823496026*^9}, 
   3.624982385713503*^9, 3.624982422125042*^9, 3.624982460640343*^9, {
   3.624982602482949*^9, 3.624982641864792*^9}, {3.624982732110313*^9, 
   3.624982759368211*^9}, 3.624982804325674*^9, 3.624982879589329*^9, 
   3.624983050021819*^9, 3.624983091986004*^9, 3.624983142441974*^9, {
   3.624983219515813*^9, 3.624983224335257*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
PhpA7P9dPi21sLZmAPYb1v0/qWps9A==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
Kumfq+clsUHShwvn/vl/iwt2uw==
     "]]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
PhpA7P9dPi21sLZmAPYb1v0/qWps9A==
     "]]}, 
   {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
Kumfq+clsUHShwvn/vl/iwt2uw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.624981086401157*^9, 3.624981132072343*^9, 3.624981225982231*^9, 
   3.624981256359163*^9, {3.62498134271908*^9, 3.624981392771946*^9}, {
   3.624981433136764*^9, 3.624981463550708*^9}, {3.624981523452928*^9, 
   3.624981549042244*^9}, {3.624981648940821*^9, 3.624981658654336*^9}, {
   3.624981773888167*^9, 3.624981788513379*^9}, {3.624981859168436*^9, 
   3.624981867398838*^9}, {3.624981928515*^9, 3.624981965103665*^9}, 
   3.624982039104905*^9, {3.624982110002872*^9, 3.624982138517355*^9}, 
   3.624982259670666*^9, {3.624982317183262*^9, 3.624982350005276*^9}, 
   3.624982386083447*^9, 3.624982422516531*^9, 3.624982461026942*^9, {
   3.624982602922788*^9, 3.624982642214475*^9}, {3.624982732493308*^9, 
   3.624982759708311*^9}, 3.624982804718318*^9, 3.624982879805378*^9, 
   3.624983050269089*^9, 3.62498309348107*^9, 3.624983142730879*^9, {
   3.624983219765296*^9, 3.624983224447016*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Exercise: Numerically integrating a system for any number of genes with \
arbitrary repression parameters \
\>", "Subsubsubsection",
 CellChangeTimes->{{3.583175578135281*^9, 3.583175585252611*^9}, {
  3.583237215724431*^9, 3.583237230152749*^9}, {3.583237385305098*^9, 
  3.583237408360573*^9}, {3.583350266707965*^9, 3.5833502680112123`*^9}, {
  3.58342604161637*^9, 3.58342604629023*^9}, {3.583498856500457*^9, 
  3.5834988629059267`*^9}, {3.583505142291054*^9, 3.5835051472415533`*^9}, {
  3.593965875610454*^9, 3.5939659098091803`*^9}, {3.593966080507442*^9, 
  3.593966133600923*^9}, {3.624819464719308*^9, 3.624819493408906*^9}}],

Cell["\<\
Now do the same thing for a system of proteins that can repress one another \
according to the simple repression model described above. In addition to all \
the parameters of the previous exercise, you\[CloseCurlyQuote]ll need a \
matrix representing the efficiency with which each protein represses the \
transcription of each other protein.\
\>", "Text",
 CellChangeTimes->{{3.624818845419222*^9, 3.624818949513933*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"nSolveRegVect", "[", 
    RowBox[{
    "mSynthRtVect_", ",", "repressionMatrix_", ",", "mDegRtConstVect_", ",", 
     "translationRtConstVect_", ",", "pDegRtConstVect_"}], "]"}],
   FontSize->14], 
  StyleBox[":=",
   FontSize->14], 
  RowBox[{
   StyleBox["Module",
    FontSize->14], 
   StyleBox["[",
    FontSize->14], 
   RowBox[{
    StyleBox[
     RowBox[{"{", 
      RowBox[{
       RowBox[{"numGenes", "=", 
        RowBox[{"Length", "[", "mSynthRtVect", "]"}]}], ",", 
       "repressionInteractions", ",", " ", "newSynthRtVect", ",", "eqns", ",",
        "funs", ",", "solns"}], "}"}],
     FontSize->14], 
    StyleBox[",",
     FontSize->14], 
    RowBox[{
     RowBox[{
      StyleBox["funs",
       FontSize->14], 
      StyleBox["=",
       FontSize->14], 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"m", "[", "i", "]"}], "[", "t", "]"}], ",", 
          RowBox[{
           RowBox[{"p", "[", "i", "]"}], "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "numGenes"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"repressionInteractions", "=", 
      RowBox[{"1", "+", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"repressionMatrix", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
          RowBox[{
           RowBox[{"p", "[", "i", "]"}], "[", "t", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "numGenes"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "numGenes"}], "}"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"newSynthRtVect", "=", 
      RowBox[{"mSynthRtVect", "/", 
       RowBox[{"Times", "@@", "repressionInteractions"}]}]}], ";", 
     StyleBox["\[IndentingNewLine]",
      FontSize->14], 
     RowBox[{"eqns", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"m", "[", "i", "]"}], "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"newSynthRtVect", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "-", 
            RowBox[{
             RowBox[{"mDegRtConstVect", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{
              RowBox[{"m", "[", "i", "]"}], "[", "t", "]"}]}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"p", "[", "i", "]"}], "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{
             RowBox[{"translationRtConstVect", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{
              RowBox[{"m", "[", "i", "]"}], "[", "t", "]"}]}], "-", 
            RowBox[{
             RowBox[{"pDegRtConstVect", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{
              RowBox[{"p", "[", "i", "]"}], "[", "t", "]"}]}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"m", "[", "i", "]"}], "[", "0", "]"}], "\[Equal]", "0"}], 
          ",", 
          RowBox[{
           RowBox[{
            RowBox[{"p", "[", "i", "]"}], "[", "0", "]"}], "\[Equal]", 
           "0"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "numGenes"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"solns", "=", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"eqns", ",", "1"}], "]"}], ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"funs", ",", "1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "40"}], "}"}]}], "]"}]}],
      FontSize->14], 
     StyleBox[";",
      FontSize->14], 
     StyleBox["\[IndentingNewLine]",
      FontSize->14], 
     StyleBox[
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"m", "[", "i", "]"}], "[", "t", "]"}], ",", 
                RowBox[{
                 RowBox[{"p", "[", "i", "]"}], "[", "t", "]"}]}], "}"}], ",", 
              
              RowBox[{"{", 
               RowBox[{"i", ",", "numGenes"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}], "/.", "solns"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "40"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}],
      FontSize->14]}]}], 
   StyleBox["]",
    FontSize->14]}]}]], "Input",
 CellChangeTimes->{{3.593903932216194*^9, 3.593903985522943*^9}, {
   3.593908727083089*^9, 3.593908739356691*^9}, {3.5939087702285843`*^9, 
   3.593908838303122*^9}, {3.593908901350569*^9, 3.593908914507259*^9}, {
   3.593908994823653*^9, 3.5939090081017027`*^9}, {3.5939090985404263`*^9, 
   3.593909103360744*^9}, {3.593909284941361*^9, 3.593909301173464*^9}, 
   3.5939098056946917`*^9, 3.624818441237959*^9, {3.624983354284768*^9, 
   3.624983385349232*^9}, {3.624983471532911*^9, 3.624983485294759*^9}, {
   3.624983596451931*^9, 3.624983598588523*^9}, {3.624983716365099*^9, 
   3.624983758551138*^9}, 3.624983790196251*^9, 3.624983844855277*^9, {
   3.624983874977636*^9, 3.624983898400846*^9}, {3.624983967578485*^9, 
   3.624984057108638*^9}, {3.624984219888955*^9, 3.624984238298095*^9}, {
   3.62498427575991*^9, 3.624984277681102*^9}, {3.624984315610447*^9, 
   3.624984332243889*^9}, {3.624984365395084*^9, 3.624984471386978*^9}, {
   3.624984555852773*^9, 3.624984560590739*^9}, {3.624984626341983*^9, 
   3.624984639552526*^9}, {3.624984671691749*^9, 3.624984700990935*^9}, {
   3.624984965742164*^9, 3.624985004106787*^9}, {3.625159840048094*^9, 
   3.625159855767449*^9}, {3.625160066349427*^9, 3.625160102020961*^9}, {
   3.625160300770422*^9, 3.625160320970786*^9}, {3.625160465732664*^9, 
   3.625160495642547*^9}}],

Cell["\<\
Now to see it in action, evaluate the following expression. You should get a \
list of equations followed by a plot. In fact, the plot should be as a plot \
you made earlier in this note notebook, since the repression coefficient \
matrix passed in has one of the genes repressing the other.\
\>", "Text",
 CellChangeTimes->{{3.624818782302125*^9, 3.6248188087574778`*^9}, {
  3.624819099121812*^9, 3.6248191048597527`*^9}, {3.6248192220354652`*^9, 
  3.6248192707723293`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nSolveRegVect", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.593908864376768*^9, 3.593908877199192*^9}, {
  3.593909128988166*^9, 3.593909129192008*^9}, {3.593909842130712*^9, 
  3.593909842672161*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
79W1epVPSuPGM4KOf/4fTvh8PQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwt1nc8Vu8bB3BSyjd7ZO+9n8deuS+EFEIRkpXVsCsqIZUko0QqkUSkUEZG
ZYVkpmFEKWV7nOwZv3P4Pf88r/frep3POee67nOfI+zqa+W+hYqKaoqaior4
Tw11pSW7PdMdAezNc6eg3Wn2E1qHha6jMyUs1soJbKjHLDpASOgeMq9ddaI6
royU1Nsf/9edgQoYaNoNcgxRkLEd4zahp8js3XAdO9dB9Obw7+B1zwKk82Of
6q3ko4i6+NXUalchSvA/fUBexB2JvVmRWF4pQXENvhPqUaeQUR04LAiWI4Zj
Fb6RFwKQV8vVW7MGb1Cvh1T2gnIQuvGlqWHKswol2RzlFzoRgg5Pbg9dMKxB
TO0jbc4Ml5BXQC7XfFct+ufw28tG+Ao6N29aNHu8Dmnp8tI7+V5D0ecxs5mV
evSXTspudi4a5UWoXP4r+AHZjS7nux28hSppu/ixl03o5YFDwvSet9HH6HNl
FIMWlHWggYYxMQlNJ1RSxjzbkY1zuJK1+n30wFLs+XTXJ5RdwMMusjcDZd4+
szSV/hn99hxUm8t7jPK+NhhNHf+CyF45qd38WajS7vgvbOUrylufsknnyUG/
XPJ3UQR7UPSZqztUw/PR2OP1YxMjPcg6/qUUcL5A04MWL8dffkOzPlf6Dky/
QFtPzOwfM+hDXfLvffKLCpFEgMalYc9+5Fdiq7/o9Aqp6f2a+9s1gLi33Hnk
Y1iJLliedB4XHEXWtiZaP5veo7XLatz9MaOIMSnYU9mzEYW/ov70aWkUuTSk
8jFs/YCu8N41qPg8hvSkEo1kUROKG6yTuH5tAp1Es9cXyltQ+jkBigSGoYOe
jZyTfR/R748jOmSnGbQYuvMNY9dXJHbCnPtZ0gwqyy3XThTvRB40xXNiLTPo
37Lk6EhgJxpRDcvn0pxFYnJTKfNMXWjiPocQFdsckpZ/efOEYTead9OnaW+Y
RwfviRlxZX5DdEspH04pLCNRhdsmlyX6kca1nvP7XJaR5b/OKTn8vr04OOWk
EpeRCE/23NXsftRAToj7vbSMHsVPrj9i+4munIg6aF+/ghSvSa363fqJqPpO
fzd2+IesMtoaJa/+Qhf6nwSzGFJB4I+hv+Kmv1HCE0PLcEcq4L+06iji+Rvl
ev+RxoKoYNilimvm0m/0bUW4tyWXCn5uC4hjKf2NNLhSd0cxU8M53Q4nA8E/
aN7i9pb1XmpoaXMevzb8B/nXhsVMBNBAPbNJs67tEFpkSczrvUED5ediuy56
D6FQl5y2pkwaWBMMH0+KGEIxVB3MTztpIONb82vL50MoR1ckyV1rK7CfDpRY
/TeEflbUpf6g3gb8zNpCcH8Yef7XU9nKsw0MF+K1RfKG0aQdpf+N8jY4zseE
9VcNo9VFDpEU923AIzTXMflnGHGpez45/GEbaNIhXyf5EWRRRFfw8SYtMB20
XCkqHUFdWwQ+Vj2lhedxKhNujSPI0UppKr+WFr4uzFjPdo+gU1P2yrGztEB6
ZGdZsDSCohSfl5rYbgfDS/elUjRHUdUz8+pawR3Q3qrsdbpoFClk3u4ozqcD
Sz6QCL05htjvkhaqP9DBFc0wVv+0MbRyo5Wv9Q8dRNAKPDB4PoYaA7d7DfL8
BxPhqcFR78eQq8GFNY5r/4GXgQ8leXUMJQ24ygY57YSwxHBfapdxFNK5bnH5
/E5oMvRh/s97HLk2PTgbn7QTMN/4tbngcaRQ2FmT3bwTeOzfZgbfHEeNl/bZ
dqvTA3PMqJJi5ThaFVK6qsnMAKkOfCwJ7BNogL0911CWAQI+pz8eFZhAH3ac
+mhpxAC/nj2fkZSeQHf+ZvGeCGGA4fnyh3a7JxCpmrvw/ggDRGnrYnfcJtAx
J+r+lWpG6DZi9H6SP4EGzb34+jWYYaiqXNFPiYLYG06JhRoyg5EzO0u4JgXp
7/aX47dihnt5v9XDgILSZc/rHDnJDKTWQ7/2m1OQw44Yh65UZviQ8CJQ5DgF
faopeNC+hQVKqpObBlIoiFqzONOHiQXOA5vUwiMKIr0oe87AxwLhmbZDq9kU
FJtW82a/KgvQ3dTZ9r2IgvZe+Nz33pMFZswVTGeaKKhSZYGvuoUFElV2dSXM
UxDl2YqYUw8LHDpt39q8QkF8olTya4MsUG73jG6RahKdY6HbrbPOAjo51h9k
dk4ilUmeo2VkVqCp0Q9bFZhEudm6qS/usEJrLpec155JlMwTyf/ImQ0KONV5
OK5NovnfbdnmPmwgXTrbon1jEh3K41RavcAG6T9G9x6On0Ss8NTocDIb1Azx
7vROnkQx7i2+DG1s4F1HW7UrexKFv2CtPafNDsqmrIXn6ybRj3NHTCVN2EGQ
sbRo+f0k2m2Q2fnFhh2+5NwX92+eRMtfVccVA9jhZkThW71Pk+j0ii37UA47
TJRwnj7dP4m8jB56WO3igAPn/gioLE6iBqaRv+uiHJDAfGq3xMokEu8hXcgj
c0C+V/Zu5rVJNHCyNn6HGQfEP/iu2UKDIYdbg2WVlzmA9l2q1RAjhiz6ZHfK
TnGAp6+fV7EohjQDygpoWnZBt2FIoPZeDH1c13b079kFT30Egwz3Ycgjtoq+
f2gXbDWc6zUxxVBCTsPxCmpOUNS/s1XfAkNjP76I+qtzQkGWuP/UYQw92D+V
/CODE0zbFldsPTCk1HPayPQFJwSraVYzeWGo0WNxtvwtJ/T1FtfWHMfQ7KV1
y6RuTsAk/r7i9MaQWRkDvSkjF4Qysb+OCcTQmphMePk5LmC4fu1EVhiGEgvz
FCSvcQGzek4txyUMyQD5e2IiF5i8S90VEYEhmyMaWn4FXHCDm6/X/CqGCm4Z
zUoMckHy4Pm58mgMOa+5eiVacMNRsxNu/YkYmr8xtGuLIzd83UGvz34HQzHc
J+p9T3KDtUtnhWEyhspV/EX2R3JDn1DZo7R7GGI9GdZH/YYbOBzPIuk0DL3r
SrHwleSBV99KQ54+wa/P1Xp2TpkHnlWH/76fjfePwng3BHiAZ+BWy/UcDP1H
E9F/3Y4HOFsLdJ1z8XkoePlk3uCBayttVn/zMPTjikpMD8YDTxuN0zOKMfSC
aVLReZUHfHvNGHxLMBRxP/vz0A5e+Mp98ojmKwyJv+DhnRXmBX2BBy/el2Lo
VC9VLuMhXlj2KOhsrsDQMrn1vUEZLwxL9L44W42hljeRJ5vqeEHl4r0c0RoM
pRkDk2UHL9QsFH1qw613tMjGcYwXxiHvo+A7DEVF3RsM5uODH2fD55/XY2hX
vztNfjgfGAuc6Q1qwhA5Zk2Xy4QfHrOG+E58wud9fNUtz4Yf1uTFbQI+Y0jF
aDla340f/N8ul8zjVqOa7zwVxg8TFxuml79gSOc0xaemhB+aREX6pjoxtNeh
L+2EiABoFHVsTf2GoX2a3+rWFQWgtdY+kL4XQ/t3dY8l7haA4inalPO4zT9+
VquyFYB9lHSxg30YOrSnuY0tXgD0eeqj5r7j85arWHuzgtf943K2/MKQK12Z
mBWdIOze4WTlhPvYUMm+4V2CML5Xd7wCt0f6yzssSoJwLMBz3mcA7yf7UwUP
L0FQYOVtbPqNoaDVZEemr4IQm3137uAQhoJ7kq5kDgiCnDbjXDru869u52r+
FQR7w0FmCm7dMuOVl9uEQEuqLTtiGO9vgIFxn5AQfGaTuvd4BEPGQ1r9pMNC
YOR4r7xyDD//5y8T144Kwe0ze3yXcV+p9ln+cUwItsTfCVMdx1DN/QyOWD8h
mPqKvXqKW/vAf6aj14Vgjq20IHoCQ4plPWWP3giBvoavAWkS709WYMNirRAs
j7t5u+I+lcDw5cAHIfi+qkGfiPvpKT3s31chUI7Znj+HW1T4qbg9JgTXXzM8
LcS/ozijgxNYRYRBk6RZxD6Fzy+INf24lDCcaPHq0MV9yO15XrWCMJgEZZz3
wn1L92ejj7Yw7DP8F1CBe+eM8XrTIWGQL2bktZvG0PoRzlOXrwnDkzemxhEz
GBIweXnuW6ww7E3IeJiFW0dt/zVyojBIvzJMasR9jjksoz9dGMYFqI4yzGJo
pm6oW7tCGPTqSkMScA/LvzKcnRAGQ2PL9htzGBK56O0uOyMMD8NqfubgdmgR
u+q6JAw3V6Qy6nF/PHG77uM2EWA5eUBjDXdFtp9BnoAIhA1wNJ2cx59/YVk9
DwsRCP39CTQXMNTgN+CcaiMC+lQmryxxU1XfC//iIAJM7x1HjuM+47ijWv+4
CGyn4r16D7djyqCuYIQImPa9LJrDTeZI1+kuEoGd4uohGYt4/90OOzBViMBB
0nn6UtxPihhDjKpFoPi+qFszbh6ri6+LW0RA9YjlqRncW+PttW4NioCOpxcG
Sxjq3MGhsY9TFAJvKqh9ws1s23L4Er8o7Cy1D/uNe1/25aAyUVEYLr59dxZ3
leH0KwmSKEhfNd69axlDORHtqjQmojCbdsbxMO4Lq9eV35wXBW/ZPv8O3G2n
jyWevyQK+vt6lH7hFqLozGlE4cevudX9xV33HXtVkiQKost6R5hWMERfZa1V
8EIUbnC899iHO+2SsF7GkCgI+2WeKMP9d2n5kTNFFAL23wqsx60f8GWL4Kwo
lPo7WH/CPex6rS6FWgzMacWyxnGT9lCMk/jEoK5lMpxvFV/vtOXmUVZi4F4q
cTUIN3tYQoGRnRgM3+k2jcDtsXCSeZuzGNDZTM3E4P5vRODTJW8xSH+6/OsR
bqsPV6wvRImBVlbl3ibcf25YOPhUioFYz6lYjn/4et4q81auXgxykj2CBHBH
hdAIjDeLwdZiMyNJ3PLer/o9e8RgKVgmUQP3WXO+Yy6zYrBus3PJDvd2lpHj
h2TEoev7R/m7uOevORg+JInDHsOLjA9xD619FBpTE4eSume9WbgbJsq7wgzE
wSPIXqcId2TjDcNnDuKglxbH14qbNlxReEu8OIxe7rjyj8ibf7xqmiQO4vRn
DWnW8Dxvru7kFPz4I01zO3A3HKGOl88Rh7IKMwl23JHqn1dta8Th1Ip8izRu
Wuxsd8GMOHxT3G1uhXvefbxoeUkcNFeCBQ4TeX1O8YZUElC8e+nnESKvaa9R
L70EpKs67XYn8p7wFNNKSECbxejhICLPsTL+qK0EnCdpqt4j8r4oncxxlADh
lljtVCJvf7bRjJsEBA6FqD0i8jRv/ovyl4BK48T/nhJ5HK4ni6MlQDeqTqEM
97bWbcY730qA9RGW8C+46b0fHPv+TgL28vKId+NmZ1AOL2iSgKjAr5W9uMXM
nMsPdkvAlaHZjwO497RWyD6YkYAbT1sD/+KOaPVllpeRhG0pKx106xiK9qaV
XydJQlqj4Sd63AkMqSYd6pKw5AYfmHBnmDVFnDGUBHeLohQO3DWtYnNvnSWB
qSryqxBuqraeHvNkScg4dr9YFfcOH795oTRJ0Ah9KKeBm5lxO9tMpiQYP6JN
1cItZK5imlwoCXoGLp4IN2qLq+xvlYTHsd6Ze3GHthk89tsqBXtUQzvscEf6
fKvS3ykF5GT/niO44xj9+9hZpUDhNVPvUdyp5mkc5YJSUMif2uyC+03b4jVq
bSmw4lVyO457pS3vVIK/FJgecbkShFugwyVlT7AUpF6xkjqHW/8zR9N8qBRI
yKH354l+dF2UPBIjBQbUe+Yv4ub6aTYgmi0Ffmw3eK7gVpuiHC7pk4Je6+tR
8bjtZx5Fev6WguiyXwM3cV+csy7hHpOC7e+5NRNw1y29ZQ1dkIKP0y49ibgP
bolrNWKVhubFrLF7uP3YFAy6jaXhQKyg3WPciRwD/tHm0vBB7dvZTNylnHfS
dayloZ5H/FYW7jXetX/prtKQeifpdTbuWLG2suMXpcEuZPvoM9y5qj4KK4XS
YDXrVFCEu01d5GheuTRYm+9IKcY9rdl5w6laGsz3/bpcgltTV3f0Xas0GMga
mJXibjRizIwZkYYzi3erKnAPHs7nFhCQgZ4lQeka3E9s/9U6iOGWOfSDsJed
6akUGRmYbAm9VYt7zH6skktdBkbr26fe4f57VMKNzUIG1lV3pjTgXj2Wlr8j
QgY6ysSTmnFXulEOG0fJALNCpFwL7jB3HerIOBlgvKVSS3iL57eDNCkycDYr
ZqSVWF8ndi39K5IB2+eZwh9xs/nFGcwMyoCqtYnJF9xf/L5PkCdkQF7/znvC
d/zl7vhNy0AuOWjPV2KegU0jlDUZcE+l1eok1sNZ2rgRTlnQMu1k78YtExLa
/d1EFrKiOmJ6cU+EtF7is5AFs9V984TzLvLJHrGRhYH7iY59uElhFRe7XWUh
cDJT9juxPiLmRT5fkIW7tKxlP3DrRfl4N+bJgsirHw9+4eYp7D8cVywLzO2a
q4Rney30D72WBdOtJ+0HiP4qKnP+bJQFoU9ObL9x03ctVC/8loXTTjTBf3B3
il9il+SRA4YFNqZh3AUHptcmhOTw93vwUcJR546NFkrKAVPWUC5h7VbDSl1V
OainouiP4E4//Z+XjYUcJIf89RzFffLd7ddXI+WANutQ1DjuPZStT/bHykFT
y8tGwgKcZ2+yJMrBh36jHRPrxPeBrXvqIznYyiJ2lbAaKz9TyRs5iC4fOEMh
9gOXJ65/puXglZmqKoa7J5rTLHdJDs4/ZztBuLA4St2PSh4Cbu1PI+y+4yT9
KoM82It/3PoXd1OB4is2aXl4uejeRDhprYzOwEkens/Ea04T/ZCs90lyl4eb
izyuhK8c6Pg8fFIevr5UjCYckD6aGhMsD89+LncTNtfnUeq8JQ8vrmv4z+Cm
jbxgf7xOHsS/HYydJZ7X/GtVr5vkYbF5awHh2c7bYowd8vBp0vIj4QHJ55OF
3+Wh3qOeZQ531Ye+iNV5eWg8R75JOJhB91m8tAIc+icUMo8bU93HPKCoAKef
CN4l7OFoc0ZFTQH0/rUUET5U4IN69BWA/qDGGGGy5cPPIg4KcHXJ/+AC8fwk
Uq2WxCnA73FVrkXcLm/pXXYkKQAd801Fwt2DXA32KQogmZtlRLhBjXxzPVsB
qOloTxPO6HYRM6lRAKvJ/GbCR/jemfbNKIAW7PZdIvK9p6ZLlhXg+kPdK4SD
qwTvxVMrwuHc1buE77iGDOozKYKqWWEN4U85qqFPZRTB/TYf8zLufao5BWdd
FIHqYtEjwj2RndYWXopwrmu0kLBX99ZVaV9FuL5j/B3hyAsue7+HKIIJneUg
4doanl8GdxUhti1ffAW3lnksK0u7InCvC6QS/vDwddnYV0WYctZ4Rth2atSx
rk8RZkzEygmfSTR6FjSmCM1fznzZqFPWhbEtJGCsZ6RbJfZP5fIKawES8DfF
nyDs4PAxtlaYBK61LGcJi14ddlYUJ4FQu88lwoWdHNvp5EhgbfImmfDHcwEH
32iSYK60qJYwfbXshIg1CZYdL7D+I9bDPcvGMFsSeBRX8BIuDQzK7DtCAu8n
fWKEXSXfOdxxJYFoyQe1jXqcfSudHwkE2y3tNupHr+f/jSZB3hW3e4Q11Aui
zeJIIJ40l06YgeWrR+4tEtxP8skhXFYnJOh2lwRWr7lLN+pyZfFdWSSYGD/6
eaO+PORXWY3n+49sXyPej1/ozXjrSFAfIMRI+Fi+knTwexI0lxqyE2Z0Df1F
biNBFb+d0Eb9A4dVVi8Jgs5nqG/U7+5RjpkngabToCvhP/4nmEaXSGA3Te1F
uHz/zXHDfyT4fIDRm7Dbeu/jdRoyLMsunCVc4RHIHshCBsEyxmjC7qoZc3Zy
ZKC5G5ZHODqOg+miIhkcGb1eEs4fjpJKVyKDyX+GJYTn7/keGdIggw/p+xvC
UWs6NQGGZHC7Gt1MOPd9V8wNRzKw3F8aItwmtP9JvgsZLA20xwhPn6us6nAj
Q4V9IIWwtlzWNOdJMvgpvZ8h3HIzwDYziAzAQ0W1jnvSjkHs7U0y0AY07yLM
WhS+++dtMiwxhHETVqOftaFJJkPxLRk+wmGV366bpJLhT/5xYcLMojnY16f4
8V+jZQkrTei/nqwlw9BZb13CNoavvrA0kMH5YS4QPp8mPanygQy60r/0Cb+z
YBa+0E6GmCotY8KHSr5Hbu8jQ8j1jAOEg0KDrYTmyGB938KJcLfdpQbKChmU
ZyyOEdZQjdZ6vUUJ7G3VPQkvjqeI2DArwVJHmc/G+eyqpm/IKsGD/ekhhL+p
NHrYKSnBRPtAGGFt5o5vEppKcOoM82XCqw0DtTVGSuCTr3idcKgK7e0FFyV4
+Cg+kfAPJqbt9V5KkLCok0wYjXNeSPBVgvtXv90jTJUhfUz+ohJ49A6nEY5g
MlM+dlcJ+gQO5BAeGLPOJj1UAgmaq7mEDRocedeylCBzZ95zwlsv+tHcK1KC
kbgvLwhfHbv9ua1NCYwjo8o28tJ6X0T0KkHc6vfXG9dnJRqnNqIEubQ7qwif
rSjcm0atDAqh03WEA3yWxa0YlaHB8sV7wr4i+jS0vMqgzmjeRNgruuOtt4oy
vr8pthN20+VOEdZThqtwpoOwy7Rz8FczZbgf9PAzYXv7v0q7PZXhuGlWF+GD
tWGUzHBlcHu8t5ewqQxTDv19ZeBlvPWDcDEP+7PZQmWoO37uF2G+ndz5fc3K
APMCfwhfWeF/WfdHGU5tjxoiPDEuUvz8nzJoHasYIfymRa4iRFEFzrImTBCO
zVOrNnVRAT6/Dmwjr8uy3SZZBX4u1k0Tfk7l/cO5VQWsXElzG/OViaKcoFEF
YSXpBcJNBx+vntZUha0TdYuE629er7NIU4XtWxeXCVe3+sbI0ahBXU7wKmHN
B8EeIX5q0HYU346I/fLEJWj5rgZ25y+sER6xd9bhN1EH63iadcIC+5GGT7E6
lIbYb5gk3vY9kksDalRiN2yw7nD5YYgGUEILNvzlBKO23KgG2Lo2btits2q6
zFoTf//1bLhDVvgQw2tNGI0f3LDupYgSFyEtsL5J2bDXYrlG6WUteMc6s+EE
36nX9MNaYNs7v2Gt4P2WnVbaEFS0tOGB8Kyhh5XaUFCwsmGPwAJxsqgOnOX6
t+Fx93K32ms6QB+5tuHJ0cGS97M6kLKVCv/9RX+9Wbe3uuyG5pJNt/dOUt9/
vxuG9ag3nG/SvOohrwuJzza9r+cit+otXXAZ2fSQF0mNZg6vT22aKnqbu6EL
gvhXm+Z59u32tVYEe9U2vaNX8dVebgDqn5vnu+wckNG6H4ChdNNvFRqSYyIA
rrzY9MIqd+z+cgCud5tm7rNl24kBpPZvWup18r0mMT3wXNy0Qnz+LMVGD+bX
N616rP4Ay3U9WJvY9HIYpcinSg/OFmy6+gEHV8ucHlwO2vTpfA7LWCl9OGn3
//xqjmjzI/qgb7LpigGqQ8yx+jCONm22bYL/U6U+8KttOs1v5G/rrD4Yi/+/
v71/3n2QMYCwXZsm6ZSflD5qAKL0m/Z9EMt2Pd4Ahv4/j1177SPr3huAMdWm
K2ck8EEbAA8xPnx+/wNIppF8
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
t0iFGGDTVd6MbXeTgvT7h/3EsY94bKw02Y9/vztBamwTFXncGjESj5eCQteX
r6Oxybx3DLteSEHeEeX+56y4fn7ObhxlUtD7RznjJnbOC/boHZU4rmaaGIct
ZHfq9ctGKaDtcRW0w2a84Kp/aUQK5HePTfzZSEUdG3l1d/FLQ8mwQL859snl
cxpvTkiDZTJjHBcLFTVH+maciJOGRYsZ6VVmKpKYNPyjmywNdjU5i+PYNf2/
il9dlQZTFh/j99hbKhz1C59Jw3gCj1w0dlacpPG9UWm4nLjWO8NERVN/F+96
TUrDu4sSMUPYJhHtG8RnpWGQzGn9CfubT1LNLXoZKHKpDC3CVt8+aX5VRAYo
JxgfR2JXMZdaJ9vJALeg2Es6bJ6Yy4U79uK4cMLwDCOe1/kQTiYvGehJ1dUd
wd40JvYpLlQGRKtn9zRg29WfcTyZLAN5nQdUrmHTUm3cwsplQP7Msq0mNgvX
2H4HJVnYJ+Myl8RARXNJbmbZ6rJgmajXcBp7dLVVYlxbFlQFw18dwa6dKO2M
MZWFZjXGNl/sxA+pZk/cZOF7US+fMTZzrJrkhguycO4+LX9tA843d3/Z8qos
CAkV989jj4YKdF2/JQuf9U5ITmHX7qO/oJIrCx8+0dOo2Ik6n5ddqmShRdJg
zzts5l9Huwp/y4IHyfF6KpHP/8eLxb+yYB328dcZIl+f5wUzOjk4yO++9zSR
r8FiR+8WOVhVVvI8ROTLEXrJLIfjOq3qLkQ+j/IL7i5ycO5ORJ0CNlMTk/nm
t3KQmhHysp0e9zP0tm//Ozn4E90S3YLNw6YRW9ggB4ao074BW8bKq9S+Sw6O
fVRWqcTe3lSmfPu3HFju3Zf8FDu+6SCnipI8ROWOv03CTgllVllTlwfdhWH3
BOzLbJk723TkYTSQtCkG+55VQ/wRM3kQfKeYdBS7qknmz1sveeBVseEIwKZr
7u62vi4PhtOChubYG8PC5ySy5GEqefySKTYnO8vW3w/k4eUz5hmELWGtaXm9
SB4u8Oa06mKj5vTygSZ5SA+sY1TGPt1sej+cUQE+WPZSuLATw3oqTDYrwCny
dkl27HT2Q3083ArwI99HYDN2pnUWb6m4AiiMukkwYb9pXkiiN1CA45nnM/7S
UdFSc/6By4cUYM+Z/IVhbLE271vboxRg9Z744UFsk8+8DXOnFSD8+3+zX7FT
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
Hf3n8t9yeGOm8GPln/8PKoRe4A==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
r2/4f22Wrz8=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["4", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.624984475431299*^9, {3.624984986869222*^9, 3.624985006835707*^9}, 
   3.625159861861018*^9, 3.62516032490208*^9, {3.625160477296027*^9, 
   3.625160498165033*^9}}]
}, Open  ]],

Cell["\<\
Now write calls to representing a situation where each gene represses itself \
but not the other, as well as a situation in which each gene represses the \
other but not itself.\
\>", "Text",
 CellChangeTimes->{{3.6248192849053173`*^9, 3.62481932952876*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nSolveRegVect", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.624983637807117*^9, 3.62498364236777*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
7P43
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
PQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
7P43
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
PQ==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["4", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.624985015105459*^9, 3.625160331121286*^9, 
  3.625160479723502*^9, 3.625160510124855*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nSolveRegVect", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.624983648157001*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwt1nc8ld8fAHC7hWzX3q69klmdD0KSmUpIdkZGKi0NJUVGlMjKt53ZTpKQ
hBCSERL3XiF7b7/z8Pvn3tf79TzP+ZzP53yecx4Jt0BbTwY6OjpD/EP8p19w
Y1H3yN5xyG6roAr+z3AY1DsgHoloqq8Od81eR20WUcHi4neRgKRTm3ZDMjpl
epCdWfwZ0nUsiTa6/BSZlIPTjNh7lJJdZdhGfYe8a67GTxoVIVueLCGrN4Xo
RlN1xdiRT2ihuXT3utCPyDs4izTdUob2ztd4q4SUotzLmldGxarQ+ntSVd9y
KlAxS4vIyItq1OjOwnhj+CuqjzpTMGRUg3rmL/ckKFah8YTioYEj31GQzvNT
d5K+oTQb6ZzxlkbUd+uBpqBwPep2zeMbEmtDXMahb0/aNKGBByvug31tyH9q
8I9vXRMap1m/+PfiF+oP5cszNfuJmHwnzAeMOpC5JnNBjU4zkg3WCft7pAv9
FPccv7PSgki/dh45TvqD9JkW3R2PtiLhc0NsE6F/UNqAZYt6SyuS/rjDcdy4
G82H3uxSeNKGtAy6p0ZbelCAFuulfrV2pNcTmRa0jYJ4RMqb2mLb0Y4rGkaj
mRQ0JmXbu/5fOzL9cuXmiA8VNUc86tDN6ED2ZrKKwws01JYkSL462onO2fi5
/BPrR533733+If0HLV/REuiK7kciaZWX/pn9QZfe0jc2zvWj/hukCtWAPyhc
KNmo8McAopsZcDB//QfF0splI68NopjfIYeVtLsRB+lmV+jkIAqTsmth3t+N
EnY7Jge5DiFDdVEd2RPdKCl/bIO9/jB6l9d0YVdeN8o8IzokOzKCzGNNU3wE
exBn86Qtm8ooUrQqutawpQfZBjqoXvMYRTq54r+S9/Sgn//J9J1tGEWxPt8F
bEJ70C+WooNu2WPoz3K697umHiSUKaHV0T2GFEbnrvn09yAn3Wtc+0njKC/u
p078Ug/67Wf7zezqOPqRQxs0l6YgSn3fNvXDE2ikmLvjtR8FSftaCmQnTqC9
+271OIRSkBfj6ynpmgnUXPr2UlQ0BfVtvZhH0p1EvdQDcXHZFCT/nRqVEDiJ
xuy5zvsUUpCv9+4jrI8nUZZ2PENzJQUNpvCK03FPoXtLZtWBVApS1jy3eMZs
CoHpiNN/YxQUUPundeLiFApseScasIzXbSU7/u/gFCL5/LLu5qOiaQ9Dxu8V
00jcxuyHlxEVaS8/6dq1NI1CDxzpemZBRaeT2IrKtswg8enaZ0kHqGihqvXE
28wZJGxvV3vWl4q2ue+wUWuZQf94xMuPH6eiC4sPlLPYZhFreF6iaCgV0akG
9qafnUXOtd6HbkZTkUFlUxn/i1mUavMp3eE2FV121bsX/3cWGXYoW3SmUhHT
bWb7q3ZzaGYLsytXFhVtmEutOqoyj3gYuMY9PlORzrW2s7td59HoJyWe4koq
8ublV5K7PY+C/GaEKbVUVKGeEEuZm0fW218rJrbg/D59R6VKC8js3S876Q4q
krFkG8s4vIByqpazr/yhonDf63sdviyg7UF/FN71UdHr2S9MOrMLaECazjtm
kIooEYxveRUXUYPS3QHtUSoyfHCB1HBzEdFGUi+wzVBRsHpRVd7nRdS1TidQ
b56K/vs0dzZ6ehFlK710R0s4/44TnaZOS4gm/IjvJwMNqfm+jJWJW0JfWRpz
jjDT0OHZEcRYtoSYYiu6fq6jodgI5bE/k0vIKF36vPhGGirm8btfTF5GSmKx
trtYaWjo/tO9aQ7LyHv5obIlOw0Jq/cynY1ZRhkymzo0OGjonIXrka0Tyyht
ek9/KjcNZbVnkLhlV1BhY32PBC8N/fLpqBq1X0Hk6JDmSD4a2jArcK7uxgpK
K7x2oomfhnQiDijlFK+gUaeyowwCNOTNk9gZObaC5o9RA3gEaWiPjc/XLVx0
kDCbrbBJiIY8SOsz7yvSQexIs9Vf7HNdj09zGtNBxT6p2GfCNJTw2NjmkjMd
cClYJdqK4Pn4U+VHTtHBxsxfnBTsMs0rDM7xdGBwpivDURTPb0GivSaLDhwb
/jYUYY+XlbzSL6eDPfSXYJ0Ynm/U4eisTjpgcdO8pI8tbrPsITBDB+f3xMs6
YOuQ0rdf56CHxwJSVe7Y1l36fDPy9HBcMmTJHtv78a9hTyN6KC9ftNfDvuR/
5muTEz3sWpzxXo+dpEnKNAqhh/4Vg9zPOH7ewtvTL+PogaR24+FR7IqyfTYS
z+jBeOhKLSP278hJ+Ztl9NCV1PE4EuczbX2LYaWdHg7eNM5fxvmzkzTa/afo
QUI70NMdW7ar/lUHOwM8HdywqwDXa8fjwGhzOQb4qHGraQnXd58/u2ehAQNQ
90WHamIf1czdLu/IAELhDVlOeD3CF8z5kk8wwK5x9eoQEg29joz8evIJA0i5
hV27jNezxlouk1rCAPdq2RdO4PWm8H89vfcXA+TtmdzoyENDXI+ZFNTZGKHg
2/xjRi4aOlZ2MXowmBF4wq1IDbi/Zjlv57bfYASFe6fkgzfR0AXXp3XVDxnB
McpMfCPux2i6Bo5nzYyAhJ9xiON+fbpDMtFTjwnc1smGDdLR0J/C8vTf9MwQ
lOhjv3OCio5sbCuuFWQGI49p+5AxKho+ONRVtIUZuBobEh6MUNHiLK9kqicz
3GrWjh79R0Uk7SOPD1QxQ8od/igHKhVZv9qQX3+TBcoXw+pTm6iohUG0/tMz
Frg2tvzobiMVOdtqjOWVsQDr2KePifVUdHTMYUvMJAu85Zs5FFlDRddVc96Z
2a+D+hsWKW7lVPQp27KkTGw9DNEq+udeUZHKw1sNr/M2QP+Xf4rht6iIJ1lt
pqRqA9y3c0dO8Xi/u1ErXEvdAOkJmlZacVRUeXydN01wIxxcsPo0GkVFbkbn
lnmvbYQh43LhsMtUlNjjpnjq8CZgnpYSEg2motDmFesrZzcBp8+FKNEgfH91
Wkhc4ibYJeq0IBGA479sLn3ybROw5Zdu0sD7aWXYbvtWbVbIWk9iP+2G6yOu
cVWXgw069FKcH+yloh6e71nGimzglPJVp9WGiqrWH623MWGD+znFiRzWVHRn
9JGQbygbmPdID97YQ0VqJQIvU/rYgK7I2DHXmIrcD9N3LZSww4NJ1+vpOlRE
s/QW7tLhgLEGvffaEjj/iqPSF4w5wEDgZe20GN7vth9TErHlAJ+pkfkCUSrK
VDy7zdGPA/aemk80EaYip/XRTi3pHHDNp+Z0BD8VNZbmp31n4IR2fkHjO+xU
RK/7+mHAZk7w2uEadpUNz+d5QQ6bMCeI0b4/OMVKRTEZpUXmWzkhdsrhhsdG
Ktp17kfH1yOckDCRFeLCQkXFmjPCJTWcwPC4Sb8Tn19D2QvSh9s4AR07NzO7
REHCUnTKyzROkBfI3s+PfYZzw/ZtK5zQ2v16yHGBgjSHBQ8VqHPBKeU2OqZZ
Csp6siP9+R0uOK+amvsNn49tokaPrB5wwQvKwXObsdffMc0dzucCngTV+/tG
Kcgz3PqjUhUXlHKK9/UNU5C4q1vn0wUuGP16oU5hkIKSBCNE/nPhBqsDJXX8
fylomlL3xDKAG06c2qAb3EtBdrn8GovnuMGANXTjdxoFccEzkwNJ3MDzs6E6
Dp/X0Z41gWx13ED3TUxAuYeCBlR45wvbuaGv7ApPSjcFmc0eCvfu54buTGbT
DdgsN0aSPzPxAPm4s+5wFwVdes5VdkafB+6+981t6KSg32cc95DNeMBAfviD
FfZ2o4fNTft54Knv58bvHRQ0/3PrP9VgHnCV8GdobqegEwv2PL1PeUAkkb5q
ro2CvE3uedny8ULyRPqGlGYKqtjcN7oixQuG5jOzW7Fl2tTO5arzQg0PW/KP
nxTU41cWt96CFwoN575zYzvF0wqKr/AC78T9W09+UFChg4rR0Xhe2HRXLMAa
W0D6VK3APV74Z+H+fb6Rgprfru85UcgLtr+iueywrTsUNymO8QK99hVOUgMF
5T06kdi6zAvjunuTa+opiC3wo1gEKx+YSjy5cBm7mt5Ks5vMBymagwfGv1PQ
TnLwoSRnPohg0ivprqMg3eCCfMYaPhB39AhfqKGg+hV952NtfBDKv3u0HNsr
5hNrVy8faMkqH43DTnha4VNIzw+TjX/CydgDv5ukjmnzQ0fCm3r3b7jeR+0b
f+/kh+BN2/duxeabb7+0x5YfDALyv67DNuKldJL9+eFo5JHT+dUUlGY+lvT7
Pj888zVK24Ct0XbCZM9zfkh9X2jVU0VBlV6zk+8/8oPdt0O/PmBPhq3YJLby
Q3kn9cgxbIsCNtY97CSY2Pl+XS/+3qMaxxe+FyKBy1MBgS/YZ3/w+JDlSaDX
5933EPvxsFAFw04SHBM1fuOFvSytcOn9GRI4W7C+G/9KQbdf5qqQr5HgXeiC
Vwu2Aqh33r5NgoHqDx+LsPc76ugF5ZPAvcbBLhI7P95kUpZGgvqjT3/LY5uI
Vd+/PU6CCknfc9zYHTkWNgx0AnAr7WTWUgV+fyrt8joFBYAyduzND2yXZTfv
29YC8MByl24E9vSNXj4GZwFoCFuWPIEdLeD7JdBPALzNq2+4Yb/XPCZpHiEA
TH7ijYBtXTZZX3BLADIf+WSrYfdanb4o+58A/EQmC+LYXH4XO+iLBEDPSXua
AfvpLMONwCoBYPi8MX3yCwXtiIjQ7WwWgHjbkRe92L7/xdwpGBOAeWs/kRrs
zy2p1oFkQZjeebc8Ffu2277JqS2CEL91xiUe22uIPTkUBOG06ILVNeyNjJe7
Ig8KQpi+mPgJ7I4Y/SscXoLQkGm37IudS5qSTQoWhEoXB3k3bGsV74CHNwSB
aS+9iw225HsJLsVkQdh47rW3GfakUfubFw8FQTPEsMAAO+mg5VLxR0G48YOJ
vAX7d7hmdNuIIOwMfyopgP1887CqyyIeP5vbgBv7csqTH73rheBA+nwaG7bM
c0GhSQkhWMeRvJ4Re1qvqfisihD8frbIu1yO++1LjBu9vhAoI12nOeyj7XRZ
7HZCgMsSO4q9w6vQItFFCM4f9jw9iM0xdnxMyF8Idjh73+nDfsXyV0c+Qgg6
uI/4dmOHx2d25CcIQSCFQ/Q39n5hh0ta94TgbYUFfTv2vHrtV6MCIVD/XGv7
E7umKMKvulwIohcOfWrEzjCFzTYNQmC0js6+Hjuoce5lS6cQfCO3CdVhGxx6
td95QAhSM9g31mBz9R2dp04LgXzuF4lqbGqwbIYfozD035Zyq8R+u9RlML5Z
GGyTLKorsK9fv0s7LSwM7VPeB79gO3DvjVyRE4bZsRT2cmylDFbliK3CIFa7
vr8Me1muop7VUBi+Vrb8LcX+/uriiVuWwuApq7yRcOYOXZKgozAEklWsSrCD
q8Y/ZB4RBic2urefsHfa5RwmnxCGTIHK7YT5ujwZ8y4Jw4uYbFoxdp+P2BPN
GGFgyf6eQ7hwsnX3h7vCwPvqYALh6IsJwwaPhSFHKziR8KGNexIqXwrDsQv+
bwirJDJrWX0ShkfaL8YI04l/avv5TRiiZjPNiHiNWafPO7UKg/uBzCLCD7dq
SFCownB8gGs3Md+Qkn/lPmPCsGDqNEbY1PyR9+iSMCCWPy+I/EjNzqynNorA
pQ/0N4h6DLiQni/xiQDDsnToZ+yifw17w6VEgMUjN5yoX2zIjZmNaiLw/cry
A6K+6tHLO0hmIlBoFilNrIeGz6JH7n4RKDBVelCFrWkyH2XoIQIdPlm637C1
6Kabj14UgQBXwWxivXU6JxbpY0TA3OF8ONEPuoVjkkkpIqBQnB5M9Mu2E0MB
pW9EYF8MT1Qz0a82/27v/ywCkV1aL1uxkUp/4b96EWhF8YO/sA37qCx8gyIg
51mR2IW9y6kjw1dSFCTbhbL7sXfr/ipfURWFSq2+fUS/m/O1DtzeLgqmvOns
I9iW9T+0PtmLgnJi8pNJbLud3+q440RBXbfEmw6/Xy5KhctFC6Jws9voLfF+
um0okLbdIAbmDMyMItjuvW92/+UTA5Wlw/vFif0k88UdTg0xeNoQspmMfZTn
mYqXtxiIklVLNbFPLSY5b/4pBjdeRfywxjbt1etSOyAOirrBlZHE8z+aBq8d
EodSsXGeGOzwkoD53+7isL754eGb2KUp93ljgsRB/8X2kTvY+lYb9/RHikO9
yeHJB9iqBW0F/xWJQzL38YsfsfmjTidwSUrA5n3cQ0PYWqe4Mn3kJOBVd2P9
KLadR05uiYoEFDRIP5/Ajt/xpzJAXwK+uFi6zmFvmjBdqbaTAKXOQ9FMeP9d
ceQ/euWaBOxjYF8UwP6r/NZ4chCPF9MmaYAted7fU3FCAgKifzobYTvVSF91
m5MAD5WRRGPset9b5fXMkiDXHz5lhl34JMgoV1QShnnPn7UlzgsJRQMva0ko
V3yXTpwXFUE9Lun7JUG+LzvaA5uu5O6lJidJsAqlhnhhn3ReX2LoIwmk9wrb
fbGdU2k7xC5LgsPUqfhj2Oq8mdtaX0lCtWPboYvYRz0OOG0ulITzI4qMYdiP
X7GHmpRIwisHroeXsQVtz394XSMJGxuft17FZopz0IunSQLLUh1bNHbzel6d
3fxSoDX1JicJm8O+5kCYiBS4/WViv4u9+8mVUwVSUhCoZu6Xgv3JePytrJoU
kOTaBNKJ8+vy962MZlLAZldoeh/73GLklqKzUjDUEDuYjV13wv322TApKBNU
l8/FFh/aNqVzXQrMku+65mGXd468fZMoBTVV3V+eY7N+2qeX/1wKFPstDr3B
zgiTMLjfKwVKytHfP2KPzs3/5zIkBafWt9QUYxsGNzGITUoBd92Zik/E+rld
K0+ll4YPYf/ySrHVdg6ZJgpLg7xZ/L4v2KUs7y2v20rDdp3f9DXYPBcT8k0O
SsNf7blKwl4zfhzMLtLQJLgYXYu9sU+0McxfGhq3dWz6jm1bFb7v3HVpWGiY
pTVgPzRwfqsbJw30dcaJjcT3wntt/tlEadhlVWpAfE+kZg20nnggDY9jvBKa
sKk3rJ0CiqXh0RMj7hZsLSaFj0pfpEHxR28O4euhjKL/vklDUe+MUSu2sv/b
riNt0tD++7JvG3aIpbC766Q0iJXyprRjr+Ps87FTkIErGcuRXUT8a07G99Rk
YPlM4DTh3uV68QEtGQhZYnX9Q/Tf4PuWi0YywHuXotaNHVF5wzjbSQY0jt75
0EOMj+gkpt1kIKeeUZBC1OPtiUXwkYG7fFUhhE0eHnrVfFIGLlOCFKnYLJdU
JRjiZOB5dU0YjYg//WBxT6IMNF25+YNwrz+pNSlVBv4caJHqJeI70scpP5UB
HipTCeEI7R+L9qUy4Jp//O9fYryRkNb8CRlY9AqY7ifG8/z3an5OBvyvPtQY
IMbrOBxnTCcLdlOP/QlXVO8yaWeVBYl1kn8IRzwWfM0iKwuc933e/SPyEYmL
s1GShYiFswOEvW4z+qVpyEK+xDnhQSKfy4MSGkgW3nEePE+Yxbk47pC9LBiG
smwZIuI3afg9dZaFZB1mZ8K95k9MJjxkIdab6zrhCt2bS9ePyUJAqGcb4Qhe
N7/XUTgexfzYMBE/utlk5aYseOYIJRL2YjSX3J0kC5tSeQoIm4xtaet6IAul
hnELhJlrmU03fZQFe0XmMyPE++Cf5t75WRa6YTCZMA/blkv51bKw4870O8LS
Fi7v97bKwi26iAnCO2sLFdMmZCEwkcV1FHuPv82ugHlZ4NMLPUvYjq3PA+jJ
YMWkeYuwuwVvBpWdDDSbkDLCl2sDOZQVyPCuJpU0hh3lz6K8okaGpeTTSoQT
2NLNGrTJ8FboOSJ836L68kljMoxE63sQzhpyuWe6hwzP7iWeJPwyZuaDwF4y
mLzYH0G4tFZ66qMLGdIEBB8TrvT/wHnzCBmib0u+IVzPZqviFkCGhv0Znwn/
sbh4hCWUDJVzC78J09W1tVkmkSGc5cnmceL7PSBoWjyDDB9eZggS5mBfxz3x
kAwMQ2IyhMUtNfckvSRDU9xXHcJyw9XePu/J4K03bkBYLdb1qn4JGcRm8nYT
RnWxxV21ZNik+NeBsEmATPuLJjLspnq5EbZkL5q50k6Gki1hPoT359ny7O8h
Q7CeThBhZ8t+Nbl+MngKxIYQ9hq+aDE/Qob0sfBQwgGxfL4102QQp4peJnyh
zuhBEJMcCKbtjCYcEfDrk+EmOUh50HSTcCz7sQ4eLjk4Y8aRSPhO3rq5XpIc
FObNJRNOt8zgfS8mBx6TCWmEHw5ratyQlQOX7b/vEc6J/WZ5SFkOhN1+3yf8
WsXNT1VTDqqvJD4iXFQ3e41eXw6c+ZmfEi4PiHv4w0AOvsWrZBGuYZctfbRL
DtZ5c+cQbsor6jxlJQeMm9/kEu6w3Dtvtl8O3izw5BMejL20Zdgd33+W9wXh
hbrcownH5CAtSvwl4aiW82THaDkweh63ep30x6JH6okchLQ0rI63rYeeszlX
Dpbz/VfjuVDfoOuv5WAsrXN1PuG9PgF6H+RAZUXyGeEnfSLpg6VyEK+NnhCu
Hmj4llEpBwnpW1bzGx68Om/9XQ44ntM9IKw1NnTgTYcctAnKZRB2mPgv4ggF
xwsLTyV8fmrfG4EBOYj2+bha3/K5j1wXZvD4LZUJhPcyxNaacMnD1hW3q4RD
mAwXZ0nyEK5bEkY4hWVaIVtMHh6oMlwg3LPR+fpmZXlg8ddZ7YcgbhWjVlN5
MFmM8iR8m7fnWJSlPDDQFFwJv+O/k7ltnzxMlb9zIrwstLyU6SYPutfT9hKO
ka4r8DkvD2KDeUA4a2uAysJLeVC5e4hEmHYgT0BUVAGOmPwqId6Xx/ZLZU7S
CvC798EHwt4H9xxNVVCA/d3+bwkPOAwUk7QVIJGHOYfw6CFZD25rBdB7sjuJ
8KJ7Rt76ywqw+/OAP2HuoFijCZoCzI1tECHcFNQ5qD6oAF3h0qv7xZ1jSneC
xhUgMNyYmzDpeHXf0LICWPSkbiAsGsIS28evCCrnkqaJ/UYh9EJrp5ki6G/O
bCBscD3AvzJXEURUC6MJC77sOhD7WhFSyvZdJzzZbm1o90ERyjUXrhB+rLqF
/0+lInBLe5wjzNoyUzJDUYTGI5m+hJtlwnjIgkoQ6/x+N+F8q/HlQXEluKlH
NSF8/Yx7/0uyEvzcQDIirF9rXLxjqxLUPU7RJ5x5YqP3fmslILezKhP2+3zr
w9UIJcjWyOUkvHOI6bF5jBIUxfqxExblD7nJeVsJCoK2bCJc72vvmf6fEjQk
dzER1uIS2fymSAmOV2TMEvs1netjN+q4Emh0Pesm3BbFb5E1pwQ+5SO/Cb98
fV07iE4Zwp9u7yDsud6PdZFNGQ6bjTUTrs5XfcstrwwhY29rCCcuF2wwOqwM
F+ZevV89P8hfAhI9leFheurqeRFu1fDjr58yLH6IfEM4OLM/Pfq0MnipnXlB
2NJQUKM5XhkiL/z3jDBLxDkHn3JlGIhhTSV8Pu/apw/VyuAbt/cu4cnmW9Ls
DcogLpKZRLiHnDP8slMZtj43u034U1XH5cVpZTA52xlD+DTbjuw4eRX4/nUp
jLCX8/6Tmloq8Pue9kXCdvkBqM1QBexywkMJq9vc+yHppAInZ/afIjxwm27x
TawKbHNv9CfcSiNVOKSqAIyl+hGu0FK/ufJEBWS6TvoQvt/qKm1WqgKXjh30
JOwo/HlPx4QKdN78eWh1Pp/E7sbRq4LkowlHwnfcQmmGm1XhWIqEA+HGp1sv
PFNQBeOLWfsJj5onVDvpqMLDMfp9hNlHhvk4TFShFjz3Et699Wl+iKsqnD5p
ZU044pzrrs5QVTAV8bEgXFYq2G2UrAq6Oi93E9azjOHi/K4KEV8bjQmfvG2S
fWpAFXr0s4wI2w+tSIwwqIGb1AsDwiE3nQLuc6gB04W/iPDtLe8L94mqQbW5
xQ7C9WeC9xbpqkHBkQv6q+tfojgouU8NvnRz6RJ2OxSZNxqlBl2qx7cSLpjv
DSouUQPFFdMtq/kk79wSPa0GFU1MGqv9tvX+1EEldQjtDFUnPHyQTfrjTXXY
IE5b9akLp23Fp9QhK3hi9f4Lmiy3Zlw1YDJEXpPw1YFbP+rqNOCbk+pqPO+o
ho/+mlug/ezgqvcobH7KmrIFTDmOaxEe/Cf5OmdpC7g0Vq86JlerZI+rJkhY
MGgTzqHz/+1SqwkUH+lVV+99sHhCdyv0Dm5f9ZebkeXWGVuBZn1g1SW1gdFK
jFrQrx2wat20016hQVqwM/fiql/6hkFNpxaIpYWvus/BZZuImTZcDDq9alFz
pBPwWhvodh1atZpMXWcESQfOPbJctdGK05V7oToQ0WG26iZfdn2lfh2wZzRf
tUfzp/GCfbpQ9sBi1Q2KEnZsH3RBonLPqneEXX7jKq4H5IM7V+09+17n3RU9
2PVIZ9UJgWMfWP/qgWaV+qr1TpvbNNvqQ+wJlVX3XHrUe69YH75RlVftdTxf
Rl1qG9y9uHb9n+d7j7Jr2/D+v+bhftqbr5Pb4GXN2v2j/lzral23w59kpVV/
bx+mT/m6HTZuXHOe2bdFL+UdQB5UXPXutvMCW+N3gKPU2vVebzUtxqkdcDFx
zXRRzJ7GrghctNfGF8z+detaLQK7njWvb1d9u0sA4EjA2nyuuATfrzUHuFW7
5o8qFUnRlwGchtc8sygQY/4e4BWd6qo5Ouy5N40ApHKvWe5D0t1qaQPQIK95
q/sXK85IA2jds+aSNF5SzZQBDJ1c84k8XpsYOUMouP7/50t4oywdDUEqZc2F
PXR2HDGGMP9kzRbMgyKNxYYg+WrNGUF9o7WThvC3aM2j7dTPVQpGwPhlzWrb
3vvJHzKCim9rDkyL4Y6MMwKfxjXz7XKIKP9qBMd/rbl4QnZuZQU/T13z/wBM
7P43
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwl13c81d8bAHBCkb1lu/fam1DCeewSUhkNZCQjo1ASISTZFe0hKVRGUl+E
hJ8ipMiIMi7ZmSkjfudz++fe1/t17uecxznP85wPKbeAfR4b6OjodPEH8X03
wm2j+tGnBqMwXfHsSIj+vUOTug6Sl1B7MPsRliu8qNsqIVBS8ia6bvldvtpL
E2nofHy4uSsL2X5XPvYwxxSFmB/kYJLMQz7395YIC+5HFQ7UM+uehahAOSJA
O8MJ0Ze8ml3tLEYcimk8tRIeiFKxIrO88hKRneWPNsb4IrM6cPwtUYYMEh96
NIQEIq+mC5cXjCvQvq4Rrc0qISixvbF+1vMN6oqLZ1N1DUcOPzdF/DZ9i8ql
ps7/2HgeeQU+EVrsrEG3BcPljIRiUeii5YsF7zqUlUo3tu52ESWcnbaaX/kf
mlg9NRo+nIDyo7fGzEg0IKnF8A2PTC+jqo2dYtPPGxFrrLnJK7urqDUhtHTK
uAlF8d+NjYzIQHNXqqbGPT+iuNN9T1UFb6E7eynP5jo/Iz83ZgV9uSyUffXU
0mxmG1o2dJT+HP8Q5X+pN5v1bkdlsyT/wblsVHXQe2B65Qtq+mUiIjGYgwZc
CwSmJLrR/Y7eZD5KARp/uO4+OdqNHiTEpkS8K0RzwzbPJ55/RS+qHx+ZKS1C
jD7zu8eNe1HNhYSWrX7FSCZw2/kRzz50w36Dos/SS6RtOPBrpnMQNbXk1jTH
VKKwvcddJiTG0BhXYilfSz1ai9He0pc0huKY+/46OL5DUa/oP39eGkOqsy/7
88bfoViRG8blbePIbrzcy3pTA0oZrpO5dHESuVbLBp1EH1BmqPiUzPQ0uqZX
JzCQ9RFRW0f11I/Mo9bc9EZ7+nZE8bHe8jRjHonEXO4wMWxHxxhKflGa5pGc
+cr5hqh2NKoVWSC0fQEF2Y+npq21o8lb/JJ0vL+Q0bWH4RMLX9DiUSOGj/WL
yLL+6rPyD52IZel2g6/KMpoxT94RJNqDtl3sPmvhuoxCUPU7Tose5MUvqCSX
voy4hpG1fkgPqle/kkJdWkaD+nLju1t7UKxP/P5D/1tBJQNrrTvO9SK63uBv
5o5/UUn11cJbNd+Qmk9xinTqX9T2Lu6+y9g3dOTPNGKo+YtMU5PbXnN+R1V8
x7OqZNeQmMzEiObh7yjMytVTa34NBQyFDOpMYfc9PsNtSgc6Pw4Wrf/tQ1ce
m+6NcqaDgOSntQqc/eiJ35D8dAgdSP+wj6VI9KOvK1I9TU/oYM+ua40XDPrR
NqG7+vFc9KB2kcuLOawfLdpc3bDeQw/9r/I/2U/0Iw4hjR6/X/Qg8ayC89qf
fiTT1/qil2MD6IgwB+QxDSA7Pw6PcsMNcKXJasFKYgCVXLr07lTOBoioDma4
YTOATtZEJk0GMkC59s8nkU8H0B/u9PyeRAZg0hpTXXw5gCJcc1sasxngZMXA
X/PqAZRE94krr4MBjoucaI5oH0C5BqQMD11GCH/t9tBoZQCppmi/st3PCBd3
WH+5wziIXn2z6DT2ZQStwIer7eyDqC48aAvpHiNccLof2S8xiPrL6+5+p2eC
hqGhLD+jQeS5ubuqWZgJgseT3ldbDKKfB6f6KjSZYOy3xYWFfYNo9Q8/6bYH
E0RpbWdbdxtEQjqejx0amKAkQWVX3vlBZPOCpbA1bSOsOZkm3iwbRJ0bxFvf
5G2ER2Nu6qLVg8h5n8ZsQc1GWJpZDIitH0S+s4c0kxc2QtmjxamNbYMoXvXZ
f7sObAK1e1EmveODiDOyumvbyU0Q+J8/Y/rMILrW0r4km7AJnqc0vdBcHETZ
fn93bKzYBA94zBmV6KnozVPr6hoJZmC7bu3OLEBFZituA8+3MYOBo07aJhEq
arII2fBgLzP4PLYbnZGgoq9j900iY5ihu+ORbIw8FS3Kzr7fMcIMLIzlkL+D
ilSyr34qKWCB3trjI3sdqYjvhtrv6gYWEBSvC3V3oaKVxGbR5iEW6KyPlXY5
SkXvgzZ5DQtvhtD9SwyivlTkZhy2xn9xM8wYRmo9PktFO3WEKKSszfDJ4+K4
UAQVqSq+3KVSuRl0faxYQ89T0SrPdLrZ/GbwNwvI3xBPRRmDboohR1hBmclJ
1zidisI71m1izrICyzO9TfLX8fyNd06nZrDCkKnNsbWbON7ijrc5H1jB/Vt+
z5n7OJ7zFge6dNhAxzM850UeFRWcGjk3tI8NqvuiWMSe4fm9Yx/O+LHB1Bv2
pZACPN/eqp/M2Wxw8/trD4YXOB5JjQvbudjBP0er9PRrKhrk+/jEVJEdPgfs
aQispKIGZt/WvWbsIPmIqu72hoquzTwS8QlnB2t13RGRWipSq95SfGuUHRh4
C8/SNVKRQMmrzscMHGAwp8p09wMV/c3Z/7dYnAPMShRiVZqpqDE1eecHWw4Y
lfRQUG+lIvcj9H0r1RwQGCDlWf6Fiiz232Nk7uWA9A1NwwydeH7zHQp8vzlg
svhZq3EXjlfl1CklZU64BVF3c77ieEk8t7ft5ITbzE+7PvTgeAUKq03cOUGp
NkxjpBfHuzbK6nSTE5Jvic0w9OH9nbug7l3CCTdKtB8y9eP1f5AcTn3khOkS
DcF1bCFPlU/1G7igvW+0p3uQioatvUT7tnFBitQQh+YPnB/1vpQIUy4Q63pD
Gcc20j+pJLaPCz7/2SRwe4SKMhXP6h0+zgXk4aX18VEq+pgVYbIcwgXbXHhU
EsaoaG1LjOXNWC5423vlEXmcihyZkxw773LB8/a6r6YTVJQYmXb09BMuONQc
2NyCXb6Y7sv/Hxf8eXs+aN8kFQkO3w3f38oFN26+NraYwvnvmBU718sFPUuD
WVXYwW2Pky6PcUGGzVEJlZ9U9Plt4Z2PG7ih7g5/5xo2/faSbH9ObjjJbgou
03h/i0qfsYtyg+HO3dKV2Mn33lbs1uIGPpnC194zVFTBX183bsgNf61O3yzD
Hk9qbLpkzQ1tu0Z2M83ifA9r633nyQ28725eTMMOmescOhbMDW7NJvqt2I+9
eyeZznOD13NfSbY5Kmrv71/ITuYGpUFTcxNshgPDq8a3uEFvcr3+DLbGxzFG
6mNuaOg9UJyH7WL2ky36BTfECVWJdGKnVs7xSVVzgzzjXX76eSqq2vpbtLqJ
GzwZ3YtlsaeerlCOdHPDwrlzjLuxRcl0ymvD3HDhy0Hx49gWtxi17s5xQ0uA
B088dig3i77eOh5/zj7/ADs3nt20h5UHjqy/+VyK3bHObXVWiAc4q8Zqm7CZ
QgTstkjzwO59f7q+YW/9KexUqs4DBRaqlElsdw8JDwcDHvAo7Hv5G/tKL9lv
0YIHHNmV79ItUFH1frlTGQ480GS5fWwj9nSj0rmtR3lgyk4mbzO2uJH6hbYT
PPCLS2CSFduyTCs58BwPiB5TeEuMh6npZnAn8MAt/Qs6m7Cf5BjcLbrGA48i
dzrTY3eLGz/a85AHTvNdM1nC6zNfM8//WcgDpkOpSz+xtdktXyZX8IB5p0PS
ILZHrE2lUgMP6OdysrVjp6/Y/u/DFx7o6eC7WItdE3iw2WeQB6RaJ1ieY8+O
OX1hmcbP133LvIMt6er2LXeFB+KomgfisPd0HRs2Z+YFAWcdPX/siD3Hp37w
8YLaUfWDtti9+sF/KSq8QG1TDhDBZn15hqlOlxem7tZEreLz1VU6x+5uzgvu
JYGrPdjXhePEHrjwwumLu9yvYS9SW3Ks/XnhbfM7fX9s23xBjdUwXkio3xlM
5BMP5Jk5XOeFvKhQ2Umcf0keTQHsLbzAJZXOpIA9rsK/XN7DCyL3FSUWcT7v
+uMU6zXGC3fUOZeqsTcmTt+oZeSDyq7vEvuxo4p4akJ38IFMjOtZH1wf30MP
W8ru4oOOK5zdytj6xtkd7fZ8wHLknvUMrq/lL1oTqoF8cDC+4FEgdvDKAb4f
uXwgd++DgD+uTy+z+8f2CfCD7EHl7+a4vus5R2fWyfzAOFs3T4ct3a0Wlq/O
D951r3PLcH8YPF6TymzFD41n3nEoEP3i8nBpVQw/1NtzpWzC/cSmV5FVcZYf
3kTNOJXjfrQ9sLSQoUkAPDi2FpBw/2pd3+F8slsA5L8fftczQEXHkt+w9f0Q
gJflfkIZ2Fdy673L6QXBnr3Hlxl7/Hs7+aSOIPCiZ3JzuF/e2T17/XuWIIhl
bWdv/4brszvYzLJIELZUXmq4jP3+2J+FskpB6Mxo7d+DvXB+fW9GlyAsp/HI
NuP+a1XKzmbJIQTsI9PQhPvzGkUhqixUCILaMp9/68b5VpyvIntRCJhv3a9+
gK0A6t/S04VAOKFK/xi2/eFtuicKhcBifODCDO7/hZfNFmSGhUDu+r7Dm7Fd
1ty80m22gNxUSuj+Diqq7bxtEyArDI7Re0T02/D8bnYLvzSFQUxp6R4P9rEp
jhvhIAwRPdNxo5+paDNDdN+lg8JwX6wjOgPbRsXLPztRGKZnNlAWPuHzjt2a
1D0tDLnuKy21+L4q4vyp6rIqDDpaOafvY0ffymn7wSwCmWT3c2HY0kXCIgtS
IkBhsX68Fdu3h+4Jh60IfPhSc/DpR5wf6s3vjEtFQHOP+nBeC35fqYg73lgn
AtQtAzsTse+ZA+feTyIgf1ia0Q/b0OmFvfO4CEjNKEaqY8fH3xw+IyoKyQqn
Q6rwfSrQ58FQECUKlwSl50eaqGjUWyJna7Io0NUVJbVgly90Wby+KQr1D9qC
X2I7bba88r5YFGbyUlRisbO1NKSoQ6JAqhrXlsZWT1ozENolBnm+ZP5T+P7W
8F49mm8vBo6uSledsbeaLScYHRWDYwo2bjuxtekWO3wjxeD2z68zoth6wVP+
b1+KwUXqvbIG/D5gsHci3b5WDHZ3k56+xEYqY+UTrWJQHVU08gDbaHRoo8Ck
GOinLRqEYe907L3nQxKHZdfkverYFtu/1q2risPbjKo4CezdAl3j6frioPOZ
j54D27q1TfvNAXEo4DKomWjA/cDkQwtvqjiY2FJdn2C7KJWvVayIg0ZvfpAm
thtLKWUfiwSwqZOypRuI+/+lxYiABFhZe3IIYR/LfH6NW0MCRlhfJf99j8+P
L0/lmJcEZJdmUz5g+88+tl05JQFDp75zvcEOaMk+mxYjATZ7ktVfYAfGZ9aX
35OAxKg77HewQ1avO3N+kYBUembxE9hnujNiswcloDrvzm0P7LOvrj7ZPiMB
CRfu7jyMbVBqvvKcSRLGL6SqmGMbBhqb90pKQvHxH1uksM1/6PapOUhC6tep
id53ON629smLTpIQ5qtx7wt2bLX/8nd3SXDVrjzZgv32VhZ/8glJEJ9kD6vG
3rFns+XYJUn42BrK+hj7kF72QUiThESt5or72GfkDTyvX5MEZY9tSTexXzIE
Rps+lITotaqYZGzV0u7SBxWS0Lf5eONpbOtHQfV/aiRhd+kh15PYvlfY2/c0
SMI+qiavL3aer+H03y843kTWeldsslSe9KFpSbhp7edkjS2YcOYKD0kKtvy3
f5MStnYIT6a3nBT0iL+TksO2Pfosv1pFCriTH+6lYF826H/vv0MK1LbvnhHF
Zp03X2+0lYLSRSTJia3QP8BGOiwFyaXDvazYO5vDhENdpSBh6fAzZuwLOYVa
sv5SoK14MXoD9vphQd+Yi1KQOH6b8Xc9vn93PQ/9miwFXFFyNgvYetq7L6qn
S0HRWc9ns9ihXJFZfZlSICb0K2MSe77uR9eOcil4ZigsQ8XmKY76caVaClit
mWb6sdXuCy+M1UuB/vOr779j+4Vac95ok4KFhSvZX7FHlF+ZLkxKAVCm6Nqw
Sef8PBTnpeCF/QvDT9iOTZQLbktSIGBckvIRu9Xnal0rEwkC6R9bNmFvLrcY
2sRGAstC7cpGbFOWDYyIhwRfWwy3N2CX55wwzhcnQafwpv312AuLsu5DFBLI
kV1n6rBVzPqiRRRJMGt76kYt9sMhq5pLOiQonGRlfoudJKVoeMyGBDvmC49U
YNefGHS5a0+CJ1Y3rV5j01XfjGp3JMEWwwqTcuxTzszVRt4kkH7606oUuyj/
TV9oAAlqd2Yd+Q97fPX0etEpEjhd6At9he18e9hAIpoE7GbH3pVg3xi/42wf
TwLPSM/lF9ht220jklNIYFbjqkV4Z1dN5cotEgh/LKp5jh0te/abxgMS7Leu
5CNccVr9r3cOCW4bavgXYavzZ+p1vSBBz8867UJs36MOjpzlJBByvvWoAPvx
C45ws2oSTD41FyEsvO/c65ImEvRb3RTOx7Z9sLVn4jMJTBx+PXyGnTozsUzq
JkFD3g1Nwoyph3QvD5OgLJ3i8RTb4Dv3ofcTJPAerNtI+IxyQ+j6LAlqqCIF
T7CLw6Nuav/B67myHCY89UGnzG+NBPyVweyE5USmu7IZydAxbPy/PGw3n8d/
ejaToeedYzThO2VOQrzcZGiyfmRCuIOZf5uFIBnsjjGwEeY60ORwXowM4suO
XbnYFjkxIaVkMnz+dT2PcOyi7vVpeTIIm96KJPzGdO6VjBoZMtt2HSK8nJ7X
4aRNBo7kpO2Etw65LKbrYTvtFCPsrykk0GREBgtVdybCudEftRh2keH4dM1s
Dvbgpzg73T1kEL1kNUhYTMrg1Ek7MmwcHe0gfODEr/Tcwzie32c/Er7y5llJ
nysZlLLHPhBu4jjaLuBFhoou4SbCG51FFqz8yaB8foH2e8j/zHshmAxylxw7
CYetXtKsOEsGh95ttPVagt3Tz54nw0flFlo8klN6v7bFk6F72ZAWb6CHgP3v
FDL4MJ0TJVz3bfrVywwyqP711CEsYN8gGHyHDF8uT9gR9mrJOqPxkAwsQTMh
hMvNwrtn8shwxubIXcJsb+x0C4vI0NotWU/YWUf1tt9/ZKiqEpsjXFTIvKpY
RYbpAgMp4nzsMl9X5n4gQ3NAajzhXKEMcc/PeL37adWEl9P8I6W7sW8eWCF8
77yUYdYPMgQ86TtD5MfM0vIDlykyeEieeE3YKLB9g8QC3l8JHzoi30bcLtbd
pqfAhlP6lwmrmUyZZ4hSIDCQ3ETka3RFfe5+MgUiz1dLEPndvjWThUeBAnL5
GqcIn5He/yFFhwK8OxykiXp4u7HMOn4fBW7Zj9wg6ocv8kqh2UEK9AQELRE+
9vs4F5MLBfQ97Q8T9bZ5VPzzeT8KSH8aIBH1uK8h1i4sngJfXtm+KcYeSrRx
9K+iAAfnbSmi/jdxj3rbKkjDR5HdxpXYixcdTe+rScP4sFgh4R9rrZL4zQTc
AqaFq4j+M1nWGWksDf9phM0RjnufaPrUURrobj/LrCbyJUpVakOqNATPqf4i
+tnG6dNdhfPSEHsn3oXoj4seEy+Wl6RhLKqolvCP3iOppnQyMDfsLPOBmL9x
p1kPmwy0pJmOE457LFyyUUYGntL/Pt5My8eqVKcDMiD0qN22FZupmcmctVIG
Tv639uILkQ9+d9y/1coAg/M51g5iv9g1owobZcD6C7gRpli5lO3vkoEKznT2
TmyT5nLFO/MyoH7V+nAXcT7NAVzKCrLA++XSZ+J+SPDbqLyuJgurifziPUS9
sN/d9UlHFrKVh7wIZ1k1Rp8ylQXdRMtVwm+bKb8qXWThk/Qh4W9Ef27p7ra+
Lgu2yd81+7CZ/U8sSt6ThZiU9iDCXBybeOezZaEoi+8FYUnrrZbXi2UhJzVE
lbi/UEtKVV+zLFy3GpUYwI5oMX54glEOxoaD+geJ/fH/+saIVQ68gq/yE/df
CsfJXj4eOYgw4bQgfNf6Hn+ZhBzwaUk+J1zR8uci/Q45+NRRFjKEvdKS73vl
pBzQoxsjw8T9+8n1tskZORgsIfP8IPK7jb9xMUIOlGal9AgndJ6TPZwkB4fy
wlIIC/VbDZJz5KA2pV5pBFt7dsrhZa8caHe9tRnFPjT/IM6TKgcGrYxBhM/9
snu5ZVwOvk18SCdct1TJE/FbDjZ7T3QQ3r8hpdmMRx4MQy/bjWGf4FUx7jKX
B53BS/rj2On8gycTrOUhqSbzAOH/BK9l6tnJg7jmniDCayJrfzPd5IGUGZJD
OJnSUup9Th5acoRYJ4h+IBM9IhIrD0rMHGTC7XLaAi0J8nBdN1uXsKjyvSCN
G/IwzlTsRfiJlr/KSrE83BUPqCbcokNyyi+Th9awsC+E57Z3JB6plocHyqrj
hLcbGIzVNstD7Js0HuL95L0ZR3bSqDyoTh88QnjYoWCLuLgC8PNPjxF+fOBv
jSNFAR4W9f4h7HXQ0ve2ggKcLErcNEXc14fGq4R0FOCJkTqF8IyTzFFeGwV4
G1x0iHCx8yn2ffYKsMW10pNw0JG6V2mOChCSmhZMeNHFjYXDWwHK85KSCa+6
3ytgjlaAMzdmKghXHZ1yMI9XAOmDJu8JR3ro0celKEClxdE2whs8v+5nuK0A
pFLWMcLMPgJLf18oQG8kO89PbN4TKcbzw3j9oejDhNtPfJtUn1SAgeI5d8LX
TipdOzGnAM5pur6EhYIaR6fWFGDE3y6csPjpjSmjgooga1h9i3D/aTsdWXFF
sH60/IDwg5Dsfg+KIij4ceYRpoQaaVLVFEH7SOMrwgrhEV3fdikCZU9GK+HJ
8ObzojaKELS/uINw/jlRxcP2ivBDvqCXsFpk+bkuN0XwizUZJawdvUhqC1OE
+MCVv4T/RJs2cUcrwpkEcYZp7LKY9FM28YqwMkhhJqx3QeN9c7oizCZ94yZs
GO/v9z5fESTNOSiEhYv7HFJKFKFy6JUc4YUeGyPb14pw7ZeRMuHHqpqC/e8V
gX55kzZhts7f1b+pirCtYJsZ4WE676eV44rwU2ttF+Eqha8ZMbOK4BSea0X4
ZESFD+e6Ikib59sS7pA+zycrrAQh/RdcCRfumVublFQCEZ/Io4TjQ93HimWV
4OdLV0/CO5pNqwy0lGAgY9CXMN/vV7mMekrwXSE6gPBPSbmrjUZK8L8YtkDC
mcGbvextlIAnhnqa8Nl7YftEHZTAVkE9lPD+95N6g05KoH/9eBjhjaIfuf2P
K0FFbW4k4eO1V19fiFOCtKB9FwmbTDE+3p2sBGRbvkuExQVPp3GnK8Gnv/UJ
hFt9DnjcfaAEm8fWkwnHVOnqyhcqQWL1nzTC2jxinC8rlKBLvPgq4VGPdSo0
KsHME5VrhG+XDZQ2dSrBZ9aTNwhbs9clHxhWgsjRsFuE6Vwfuw3NKcGvkb13
CHswH2dbZVeGHRPe9wk3Fqq+4pVXhvtWLQ8IqzksHFE0UQYx8/SHhDPWSlmM
jyhDAeenbNrfGxd2yLtOGYrznR8RPsNu8DRVXgXiNN9nErYt9EfdRiqgzEii
za++934byVEFOO443CU8nk63+jJFBZyPm98kXK+tnraeowKu/mzXCWd1uVJ2
vVWB/xT/Syd8WLTWsndeBW42t6cSvuYWPmzEqQo2tmK0/fqcqxWRp6AKqp5u
tP200MotPO2qChxCU7GEda2Tebg/qoL1BaazhE+lmz0NGVcFRmPLEMIHptal
pjeoQZHh1WDC6Zpl5XbiajBCT6LlB1u14iTJTg00+Cto+eUmW+t4zU0NTnna
uxH+L+VQM8sJNSC50LnQxp0uFcwkqEGZScxhwqV1khJHb6jBQzXHg4TZlUpT
Ox+pwZ8aEwfa+PKPE1XVarBbc9d+whxuEQPqLWogxemzl7B7A/++Rz1q8Ond
/T208RsmmkmLeP6PuywJlx8L4gviVgeG3ea0+vHQyvp1UEkdCrbfoNVX/Jre
20BTdQjhdDMh/ORdZ1KiszqMfvExItyUFnggO0QdZL4UAK0eDrJTKtPUYSu7
CiKsMWn0+meNOmTQ1esRDok4s0/ylzpQU0d1CUds3Xj1t6sGMM3u3Ub4wvjV
tpYWDfjIxaxD2CvhU6XfVk1oiEug1b+lAmcu2y1N4E7wo3lyglTy7K8mPM6M
pDk5X7va0nUrPLyfTfMzOr/vLs1bIWuqhebG/Q9Xg7drgR7dAs3/S7tUZ3NP
CwwquGjrVTcHJCkxaIOxlRzN2++cORZ+Qhti0/RoLvY5D03ftGHPz900jx5y
0RPbpQOiXfY0i+9G2/xLdEAxxplmNemWb3FC20BS7SjNxuuOMffDt0G4phfN
7T4cO5TGtkGtog/NRzvezJXabYcmCW+aPylK2bK/3g70M/+eNzgf/dJVUheE
1Z3+7c+fsm3/xeiC3YotzVcCZl+zjehCdcEemnXP7N7bsW8HJIpa0jwY9ejH
/aodoHNjF83Hggql1cl6ILnFnOYJj7KjNRf1QMjXmOafY8Mv3y3owbyiPs0z
fjybml31ofuDDs0fe37S33qnD2PJW2ku2PVh9ZiyAfi/0KDZovvcFq3LBqA2
qU7zDy81bYZfBuD1/Z/pEpg8TF0RmJj/+73w069XLzbjf5ua/pm5R/XVzi0A
o6yaNMe4BGY17wZor/w3XqlSfz0pGoDn+r/5fq9uSd5dBtCcqUYzV+8BXtZp
gL+s/yz3+vrNRooh+FSq0qySWrAwZW8IJpn/rOX+vz3clwzhye1/Xo6ceuH/
xhB+3P3n6jv8Qk2/DKHy8j8HF/DvTZYzgjiPf5ar5k+wPmwE1lL/XD5IZ8uV
bAQqKyo0WzFNin2uMoKEn/9878ToTPOCEQwt/vNMz1Btg4IxLHH8e15Nr+y4
vJMx8Cv/c8CdZN5LqcZw1PKfBXYeiqt7ZwyHvP+5al5maX3dGIZD/vn/qUGl
PQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
7P43
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwl13c81d8bAHBCkb1lu/fam1DCeewSUhkNZCQjo1ASISTZFe0hKVRGUl+E
hJ8ipMiIMi7ZmSkjfudz++fe1/t17uecxznP85wPKbeAfR4b6OjodPEH8X03
wm2j+tGnBqMwXfHsSIj+vUOTug6Sl1B7MPsRliu8qNsqIVBS8ia6bvldvtpL
E2nofHy4uSsL2X5XPvYwxxSFmB/kYJLMQz7395YIC+5HFQ7UM+uehahAOSJA
O8MJ0Ze8ml3tLEYcimk8tRIeiFKxIrO88hKRneWPNsb4IrM6cPwtUYYMEh96
NIQEIq+mC5cXjCvQvq4Rrc0qISixvbF+1vMN6oqLZ1N1DUcOPzdF/DZ9i8ql
ps7/2HgeeQU+EVrsrEG3BcPljIRiUeii5YsF7zqUlUo3tu52ESWcnbaaX/kf
mlg9NRo+nIDyo7fGzEg0IKnF8A2PTC+jqo2dYtPPGxFrrLnJK7urqDUhtHTK
uAlF8d+NjYzIQHNXqqbGPT+iuNN9T1UFb6E7eynP5jo/Iz83ZgV9uSyUffXU
0mxmG1o2dJT+HP8Q5X+pN5v1bkdlsyT/wblsVHXQe2B65Qtq+mUiIjGYgwZc
CwSmJLrR/Y7eZD5KARp/uO4+OdqNHiTEpkS8K0RzwzbPJ55/RS+qHx+ZKS1C
jD7zu8eNe1HNhYSWrX7FSCZw2/kRzz50w36Dos/SS6RtOPBrpnMQNbXk1jTH
VKKwvcddJiTG0BhXYilfSz1ai9He0pc0huKY+/46OL5DUa/oP39eGkOqsy/7
88bfoViRG8blbePIbrzcy3pTA0oZrpO5dHESuVbLBp1EH1BmqPiUzPQ0uqZX
JzCQ9RFRW0f11I/Mo9bc9EZ7+nZE8bHe8jRjHonEXO4wMWxHxxhKflGa5pGc
+cr5hqh2NKoVWSC0fQEF2Y+npq21o8lb/JJ0vL+Q0bWH4RMLX9DiUSOGj/WL
yLL+6rPyD52IZel2g6/KMpoxT94RJNqDtl3sPmvhuoxCUPU7Tose5MUvqCSX
voy4hpG1fkgPqle/kkJdWkaD+nLju1t7UKxP/P5D/1tBJQNrrTvO9SK63uBv
5o5/UUn11cJbNd+Qmk9xinTqX9T2Lu6+y9g3dOTPNGKo+YtMU5PbXnN+R1V8
x7OqZNeQmMzEiObh7yjMytVTa34NBQyFDOpMYfc9PsNtSgc6Pw4Wrf/tQ1ce
m+6NcqaDgOSntQqc/eiJ35D8dAgdSP+wj6VI9KOvK1I9TU/oYM+ua40XDPrR
NqG7+vFc9KB2kcuLOawfLdpc3bDeQw/9r/I/2U/0Iw4hjR6/X/Qg8ayC89qf
fiTT1/qil2MD6IgwB+QxDSA7Pw6PcsMNcKXJasFKYgCVXLr07lTOBoioDma4
YTOATtZEJk0GMkC59s8nkU8H0B/u9PyeRAZg0hpTXXw5gCJcc1sasxngZMXA
X/PqAZRE94krr4MBjoucaI5oH0C5BqQMD11GCH/t9tBoZQCppmi/st3PCBd3
WH+5wziIXn2z6DT2ZQStwIer7eyDqC48aAvpHiNccLof2S8xiPrL6+5+p2eC
hqGhLD+jQeS5ubuqWZgJgseT3ldbDKKfB6f6KjSZYOy3xYWFfYNo9Q8/6bYH
E0RpbWdbdxtEQjqejx0amKAkQWVX3vlBZPOCpbA1bSOsOZkm3iwbRJ0bxFvf
5G2ER2Nu6qLVg8h5n8ZsQc1GWJpZDIitH0S+s4c0kxc2QtmjxamNbYMoXvXZ
f7sObAK1e1EmveODiDOyumvbyU0Q+J8/Y/rMILrW0r4km7AJnqc0vdBcHETZ
fn93bKzYBA94zBmV6KnozVPr6hoJZmC7bu3OLEBFZituA8+3MYOBo07aJhEq
arII2fBgLzP4PLYbnZGgoq9j900iY5ihu+ORbIw8FS3Kzr7fMcIMLIzlkL+D
ilSyr34qKWCB3trjI3sdqYjvhtrv6gYWEBSvC3V3oaKVxGbR5iEW6KyPlXY5
SkXvgzZ5DQtvhtD9SwyivlTkZhy2xn9xM8wYRmo9PktFO3WEKKSszfDJ4+K4
UAQVqSq+3KVSuRl0faxYQ89T0SrPdLrZ/GbwNwvI3xBPRRmDboohR1hBmclJ
1zidisI71m1izrICyzO9TfLX8fyNd06nZrDCkKnNsbWbON7ijrc5H1jB/Vt+
z5n7OJ7zFge6dNhAxzM850UeFRWcGjk3tI8NqvuiWMSe4fm9Yx/O+LHB1Bv2
pZACPN/eqp/M2Wxw8/trD4YXOB5JjQvbudjBP0er9PRrKhrk+/jEVJEdPgfs
aQispKIGZt/WvWbsIPmIqu72hoquzTwS8QlnB2t13RGRWipSq95SfGuUHRh4
C8/SNVKRQMmrzscMHGAwp8p09wMV/c3Z/7dYnAPMShRiVZqpqDE1eecHWw4Y
lfRQUG+lIvcj9H0r1RwQGCDlWf6Fiiz232Nk7uWA9A1NwwydeH7zHQp8vzlg
svhZq3EXjlfl1CklZU64BVF3c77ieEk8t7ft5ITbzE+7PvTgeAUKq03cOUGp
NkxjpBfHuzbK6nSTE5Jvic0w9OH9nbug7l3CCTdKtB8y9eP1f5AcTn3khOkS
DcF1bCFPlU/1G7igvW+0p3uQioatvUT7tnFBitQQh+YPnB/1vpQIUy4Q63pD
Gcc20j+pJLaPCz7/2SRwe4SKMhXP6h0+zgXk4aX18VEq+pgVYbIcwgXbXHhU
EsaoaG1LjOXNWC5423vlEXmcihyZkxw773LB8/a6r6YTVJQYmXb09BMuONQc
2NyCXb6Y7sv/Hxf8eXs+aN8kFQkO3w3f38oFN26+NraYwvnvmBU718sFPUuD
WVXYwW2Pky6PcUGGzVEJlZ9U9Plt4Z2PG7ih7g5/5xo2/faSbH9ObjjJbgou
03h/i0qfsYtyg+HO3dKV2Mn33lbs1uIGPpnC194zVFTBX183bsgNf61O3yzD
Hk9qbLpkzQ1tu0Z2M83ifA9r633nyQ28725eTMMOmescOhbMDW7NJvqt2I+9
eyeZznOD13NfSbY5Kmrv71/ITuYGpUFTcxNshgPDq8a3uEFvcr3+DLbGxzFG
6mNuaOg9UJyH7WL2ky36BTfECVWJdGKnVs7xSVVzgzzjXX76eSqq2vpbtLqJ
GzwZ3YtlsaeerlCOdHPDwrlzjLuxRcl0ymvD3HDhy0Hx49gWtxi17s5xQ0uA
B088dig3i77eOh5/zj7/ADs3nt20h5UHjqy/+VyK3bHObXVWiAc4q8Zqm7CZ
QgTstkjzwO59f7q+YW/9KexUqs4DBRaqlElsdw8JDwcDHvAo7Hv5G/tKL9lv
0YIHHNmV79ItUFH1frlTGQ480GS5fWwj9nSj0rmtR3lgyk4mbzO2uJH6hbYT
PPCLS2CSFduyTCs58BwPiB5TeEuMh6npZnAn8MAt/Qs6m7Cf5BjcLbrGA48i
dzrTY3eLGz/a85AHTvNdM1nC6zNfM8//WcgDpkOpSz+xtdktXyZX8IB5p0PS
ILZHrE2lUgMP6OdysrVjp6/Y/u/DFx7o6eC7WItdE3iw2WeQB6RaJ1ieY8+O
OX1hmcbP133LvIMt6er2LXeFB+KomgfisPd0HRs2Z+YFAWcdPX/siD3Hp37w
8YLaUfWDtti9+sF/KSq8QG1TDhDBZn15hqlOlxem7tZEreLz1VU6x+5uzgvu
JYGrPdjXhePEHrjwwumLu9yvYS9SW3Ks/XnhbfM7fX9s23xBjdUwXkio3xlM
5BMP5Jk5XOeFvKhQ2Umcf0keTQHsLbzAJZXOpIA9rsK/XN7DCyL3FSUWcT7v
+uMU6zXGC3fUOZeqsTcmTt+oZeSDyq7vEvuxo4p4akJ38IFMjOtZH1wf30MP
W8ru4oOOK5zdytj6xtkd7fZ8wHLknvUMrq/lL1oTqoF8cDC+4FEgdvDKAb4f
uXwgd++DgD+uTy+z+8f2CfCD7EHl7+a4vus5R2fWyfzAOFs3T4ct3a0Wlq/O
D951r3PLcH8YPF6TymzFD41n3nEoEP3i8nBpVQw/1NtzpWzC/cSmV5FVcZYf
3kTNOJXjfrQ9sLSQoUkAPDi2FpBw/2pd3+F8slsA5L8fftczQEXHkt+w9f0Q
gJflfkIZ2Fdy673L6QXBnr3Hlxl7/Hs7+aSOIPCiZ3JzuF/e2T17/XuWIIhl
bWdv/4brszvYzLJIELZUXmq4jP3+2J+FskpB6Mxo7d+DvXB+fW9GlyAsp/HI
NuP+a1XKzmbJIQTsI9PQhPvzGkUhqixUCILaMp9/68b5VpyvIntRCJhv3a9+
gK0A6t/S04VAOKFK/xi2/eFtuicKhcBifODCDO7/hZfNFmSGhUDu+r7Dm7Fd
1ty80m22gNxUSuj+Diqq7bxtEyArDI7Re0T02/D8bnYLvzSFQUxp6R4P9rEp
jhvhIAwRPdNxo5+paDNDdN+lg8JwX6wjOgPbRsXLPztRGKZnNlAWPuHzjt2a
1D0tDLnuKy21+L4q4vyp6rIqDDpaOafvY0ffymn7wSwCmWT3c2HY0kXCIgtS
IkBhsX68Fdu3h+4Jh60IfPhSc/DpR5wf6s3vjEtFQHOP+nBeC35fqYg73lgn
AtQtAzsTse+ZA+feTyIgf1ia0Q/b0OmFvfO4CEjNKEaqY8fH3xw+IyoKyQqn
Q6rwfSrQ58FQECUKlwSl50eaqGjUWyJna7Io0NUVJbVgly90Wby+KQr1D9qC
X2I7bba88r5YFGbyUlRisbO1NKSoQ6JAqhrXlsZWT1ozENolBnm+ZP5T+P7W
8F49mm8vBo6uSledsbeaLScYHRWDYwo2bjuxtekWO3wjxeD2z68zoth6wVP+
b1+KwUXqvbIG/D5gsHci3b5WDHZ3k56+xEYqY+UTrWJQHVU08gDbaHRoo8Ck
GOinLRqEYe907L3nQxKHZdfkverYFtu/1q2risPbjKo4CezdAl3j6frioPOZ
j54D27q1TfvNAXEo4DKomWjA/cDkQwtvqjiY2FJdn2C7KJWvVayIg0ZvfpAm
thtLKWUfiwSwqZOypRuI+/+lxYiABFhZe3IIYR/LfH6NW0MCRlhfJf99j8+P
L0/lmJcEZJdmUz5g+88+tl05JQFDp75zvcEOaMk+mxYjATZ7ktVfYAfGZ9aX
35OAxKg77HewQ1avO3N+kYBUembxE9hnujNiswcloDrvzm0P7LOvrj7ZPiMB
CRfu7jyMbVBqvvKcSRLGL6SqmGMbBhqb90pKQvHxH1uksM1/6PapOUhC6tep
id53ON629smLTpIQ5qtx7wt2bLX/8nd3SXDVrjzZgv32VhZ/8glJEJ9kD6vG
3rFns+XYJUn42BrK+hj7kF72QUiThESt5or72GfkDTyvX5MEZY9tSTexXzIE
Rps+lITotaqYZGzV0u7SBxWS0Lf5eONpbOtHQfV/aiRhd+kh15PYvlfY2/c0
SMI+qiavL3aer+H03y843kTWeldsslSe9KFpSbhp7edkjS2YcOYKD0kKtvy3
f5MStnYIT6a3nBT0iL+TksO2Pfosv1pFCriTH+6lYF826H/vv0MK1LbvnhHF
Zp03X2+0lYLSRSTJia3QP8BGOiwFyaXDvazYO5vDhENdpSBh6fAzZuwLOYVa
sv5SoK14MXoD9vphQd+Yi1KQOH6b8Xc9vn93PQ/9miwFXFFyNgvYetq7L6qn
S0HRWc9ns9ihXJFZfZlSICb0K2MSe77uR9eOcil4ZigsQ8XmKY76caVaClit
mWb6sdXuCy+M1UuB/vOr779j+4Vac95ok4KFhSvZX7FHlF+ZLkxKAVCm6Nqw
Sef8PBTnpeCF/QvDT9iOTZQLbktSIGBckvIRu9Xnal0rEwkC6R9bNmFvLrcY
2sRGAstC7cpGbFOWDYyIhwRfWwy3N2CX55wwzhcnQafwpv312AuLsu5DFBLI
kV1n6rBVzPqiRRRJMGt76kYt9sMhq5pLOiQonGRlfoudJKVoeMyGBDvmC49U
YNefGHS5a0+CJ1Y3rV5j01XfjGp3JMEWwwqTcuxTzszVRt4kkH7606oUuyj/
TV9oAAlqd2Yd+Q97fPX0etEpEjhd6At9he18e9hAIpoE7GbH3pVg3xi/42wf
TwLPSM/lF9ht220jklNIYFbjqkV4Z1dN5cotEgh/LKp5jh0te/abxgMS7Leu
5CNccVr9r3cOCW4bavgXYavzZ+p1vSBBz8867UJs36MOjpzlJBByvvWoAPvx
C45ws2oSTD41FyEsvO/c65ImEvRb3RTOx7Z9sLVn4jMJTBx+PXyGnTozsUzq
JkFD3g1Nwoyph3QvD5OgLJ3i8RTb4Dv3ofcTJPAerNtI+IxyQ+j6LAlqqCIF
T7CLw6Nuav/B67myHCY89UGnzG+NBPyVweyE5USmu7IZydAxbPy/PGw3n8d/
ejaToeedYzThO2VOQrzcZGiyfmRCuIOZf5uFIBnsjjGwEeY60ORwXowM4suO
XbnYFjkxIaVkMnz+dT2PcOyi7vVpeTIIm96KJPzGdO6VjBoZMtt2HSK8nJ7X
4aRNBo7kpO2Etw65LKbrYTvtFCPsrykk0GREBgtVdybCudEftRh2keH4dM1s
Dvbgpzg73T1kEL1kNUhYTMrg1Ek7MmwcHe0gfODEr/Tcwzie32c/Er7y5llJ
nysZlLLHPhBu4jjaLuBFhoou4SbCG51FFqz8yaB8foH2e8j/zHshmAxylxw7
CYetXtKsOEsGh95ttPVagt3Tz54nw0flFlo8klN6v7bFk6F72ZAWb6CHgP3v
FDL4MJ0TJVz3bfrVywwyqP711CEsYN8gGHyHDF8uT9gR9mrJOqPxkAwsQTMh
hMvNwrtn8shwxubIXcJsb+x0C4vI0NotWU/YWUf1tt9/ZKiqEpsjXFTIvKpY
RYbpAgMp4nzsMl9X5n4gQ3NAajzhXKEMcc/PeL37adWEl9P8I6W7sW8eWCF8
77yUYdYPMgQ86TtD5MfM0vIDlykyeEieeE3YKLB9g8QC3l8JHzoi30bcLtbd
pqfAhlP6lwmrmUyZZ4hSIDCQ3ETka3RFfe5+MgUiz1dLEPndvjWThUeBAnL5
GqcIn5He/yFFhwK8OxykiXp4u7HMOn4fBW7Zj9wg6ocv8kqh2UEK9AQELRE+
9vs4F5MLBfQ97Q8T9bZ5VPzzeT8KSH8aIBH1uK8h1i4sngJfXtm+KcYeSrRx
9K+iAAfnbSmi/jdxj3rbKkjDR5HdxpXYixcdTe+rScP4sFgh4R9rrZL4zQTc
AqaFq4j+M1nWGWksDf9phM0RjnufaPrUURrobj/LrCbyJUpVakOqNATPqf4i
+tnG6dNdhfPSEHsn3oXoj4seEy+Wl6RhLKqolvCP3iOppnQyMDfsLPOBmL9x
p1kPmwy0pJmOE457LFyyUUYGntL/Pt5My8eqVKcDMiD0qN22FZupmcmctVIG
Tv639uILkQ9+d9y/1coAg/M51g5iv9g1owobZcD6C7gRpli5lO3vkoEKznT2
TmyT5nLFO/MyoH7V+nAXcT7NAVzKCrLA++XSZ+J+SPDbqLyuJgurifziPUS9
sN/d9UlHFrKVh7wIZ1k1Rp8ylQXdRMtVwm+bKb8qXWThk/Qh4W9Ef27p7ra+
Lgu2yd81+7CZ/U8sSt6ThZiU9iDCXBybeOezZaEoi+8FYUnrrZbXi2UhJzVE
lbi/UEtKVV+zLFy3GpUYwI5oMX54glEOxoaD+geJ/fH/+saIVQ68gq/yE/df
CsfJXj4eOYgw4bQgfNf6Hn+ZhBzwaUk+J1zR8uci/Q45+NRRFjKEvdKS73vl
pBzQoxsjw8T9+8n1tskZORgsIfP8IPK7jb9xMUIOlGal9AgndJ6TPZwkB4fy
wlIIC/VbDZJz5KA2pV5pBFt7dsrhZa8caHe9tRnFPjT/IM6TKgcGrYxBhM/9
snu5ZVwOvk18SCdct1TJE/FbDjZ7T3QQ3r8hpdmMRx4MQy/bjWGf4FUx7jKX
B53BS/rj2On8gycTrOUhqSbzAOH/BK9l6tnJg7jmniDCayJrfzPd5IGUGZJD
OJnSUup9Th5acoRYJ4h+IBM9IhIrD0rMHGTC7XLaAi0J8nBdN1uXsKjyvSCN
G/IwzlTsRfiJlr/KSrE83BUPqCbcokNyyi+Th9awsC+E57Z3JB6plocHyqrj
hLcbGIzVNstD7Js0HuL95L0ZR3bSqDyoTh88QnjYoWCLuLgC8PNPjxF+fOBv
jSNFAR4W9f4h7HXQ0ve2ggKcLErcNEXc14fGq4R0FOCJkTqF8IyTzFFeGwV4
G1x0iHCx8yn2ffYKsMW10pNw0JG6V2mOChCSmhZMeNHFjYXDWwHK85KSCa+6
3ytgjlaAMzdmKghXHZ1yMI9XAOmDJu8JR3ro0celKEClxdE2whs8v+5nuK0A
pFLWMcLMPgJLf18oQG8kO89PbN4TKcbzw3j9oejDhNtPfJtUn1SAgeI5d8LX
TipdOzGnAM5pur6EhYIaR6fWFGDE3y6csPjpjSmjgooga1h9i3D/aTsdWXFF
sH60/IDwg5Dsfg+KIij4ceYRpoQaaVLVFEH7SOMrwgrhEV3fdikCZU9GK+HJ
8ObzojaKELS/uINw/jlRxcP2ivBDvqCXsFpk+bkuN0XwizUZJawdvUhqC1OE
+MCVv4T/RJs2cUcrwpkEcYZp7LKY9FM28YqwMkhhJqx3QeN9c7oizCZ94yZs
GO/v9z5fESTNOSiEhYv7HFJKFKFy6JUc4YUeGyPb14pw7ZeRMuHHqpqC/e8V
gX55kzZhts7f1b+pirCtYJsZ4WE676eV44rwU2ttF+Eqha8ZMbOK4BSea0X4
ZESFD+e6Ikib59sS7pA+zycrrAQh/RdcCRfumVublFQCEZ/Io4TjQ93HimWV
4OdLV0/CO5pNqwy0lGAgY9CXMN/vV7mMekrwXSE6gPBPSbmrjUZK8L8YtkDC
mcGbvextlIAnhnqa8Nl7YftEHZTAVkE9lPD+95N6g05KoH/9eBjhjaIfuf2P
K0FFbW4k4eO1V19fiFOCtKB9FwmbTDE+3p2sBGRbvkuExQVPp3GnK8Gnv/UJ
hFt9DnjcfaAEm8fWkwnHVOnqyhcqQWL1nzTC2jxinC8rlKBLvPgq4VGPdSo0
KsHME5VrhG+XDZQ2dSrBZ9aTNwhbs9clHxhWgsjRsFuE6Vwfuw3NKcGvkb13
CHswH2dbZVeGHRPe9wk3Fqq+4pVXhvtWLQ8IqzksHFE0UQYx8/SHhDPWSlmM
jyhDAeenbNrfGxd2yLtOGYrznR8RPsNu8DRVXgXiNN9nErYt9EfdRiqgzEii
za++934byVEFOO443CU8nk63+jJFBZyPm98kXK+tnraeowKu/mzXCWd1uVJ2
vVWB/xT/Syd8WLTWsndeBW42t6cSvuYWPmzEqQo2tmK0/fqcqxWRp6AKqp5u
tP200MotPO2qChxCU7GEda2Tebg/qoL1BaazhE+lmz0NGVcFRmPLEMIHptal
pjeoQZHh1WDC6Zpl5XbiajBCT6LlB1u14iTJTg00+Cto+eUmW+t4zU0NTnna
uxH+L+VQM8sJNSC50LnQxp0uFcwkqEGZScxhwqV1khJHb6jBQzXHg4TZlUpT
Ox+pwZ8aEwfa+PKPE1XVarBbc9d+whxuEQPqLWogxemzl7B7A/++Rz1q8Ond
/T208RsmmkmLeP6PuywJlx8L4gviVgeG3ea0+vHQyvp1UEkdCrbfoNVX/Jre
20BTdQjhdDMh/ORdZ1KiszqMfvExItyUFnggO0QdZL4UAK0eDrJTKtPUYSu7
CiKsMWn0+meNOmTQ1esRDok4s0/ylzpQU0d1CUds3Xj1t6sGMM3u3Ub4wvjV
tpYWDfjIxaxD2CvhU6XfVk1oiEug1b+lAmcu2y1N4E7wo3lyglTy7K8mPM6M
pDk5X7va0nUrPLyfTfMzOr/vLs1bIWuqhebG/Q9Xg7drgR7dAs3/S7tUZ3NP
CwwquGjrVTcHJCkxaIOxlRzN2++cORZ+Qhti0/RoLvY5D03ftGHPz900jx5y
0RPbpQOiXfY0i+9G2/xLdEAxxplmNemWb3FC20BS7SjNxuuOMffDt0G4phfN
7T4cO5TGtkGtog/NRzvezJXabYcmCW+aPylK2bK/3g70M/+eNzgf/dJVUheE
1Z3+7c+fsm3/xeiC3YotzVcCZl+zjehCdcEemnXP7N7bsW8HJIpa0jwY9ejH
/aodoHNjF83Hggql1cl6ILnFnOYJj7KjNRf1QMjXmOafY8Mv3y3owbyiPs0z
fjybml31ofuDDs0fe37S33qnD2PJW2ku2PVh9ZiyAfi/0KDZovvcFq3LBqA2
qU7zDy81bYZfBuD1/Z/pEpg8TF0RmJj/+73w069XLzbjf5ua/pm5R/XVzi0A
o6yaNMe4BGY17wZor/w3XqlSfz0pGoDn+r/5fq9uSd5dBtCcqUYzV+8BXtZp
gL+s/yz3+vrNRooh+FSq0qySWrAwZW8IJpn/rOX+vz3clwzhye1/Xo6ceuH/
xhB+3P3n6jv8Qk2/DKHy8j8HF/DvTZYzgjiPf5ar5k+wPmwE1lL/XD5IZ8uV
bAQqKyo0WzFNin2uMoKEn/9878ToTPOCEQwt/vNMz1Btg4IxLHH8e15Nr+y4
vJMx8Cv/c8CdZN5LqcZw1PKfBXYeiqt7ZwyHvP+5al5maX3dGIZD/vn/qUGl
PQ==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["4", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.624985017775223*^9, 3.625160333734812*^9, 
  3.625160482286705*^9, 3.625160513661902*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 748},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification->1.25,
FrontEndVersion->"10.0 for Linux x86 (32-bit) (June 27, 2014)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Text"]], 
   Cell[
    StyleData["Text"]]}, Visible -> False, FrontEndVersion -> 
  "10.0 for Linux x86 (32-bit) (June 27, 2014)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 151, 2, 83, "Section"],
Cell[733, 26, 1058, 23, 106, "Text"],
Cell[1794, 51, 848, 21, 55, "DisplayFormulaNumbered"],
Cell[2645, 74, 1049, 31, 44, "Text"],
Cell[3697, 107, 1629, 41, 137, "Text"],
Cell[5329, 150, 1828, 50, 184, "Input"],
Cell[7160, 202, 1714, 50, 148, "Input"],
Cell[CellGroupData[{
Cell[8899, 256, 383, 12, 38, "Input"],
Cell[9285, 270, 101, 1, 38, "Output"]
}, Open  ]],
Cell[9401, 274, 942, 18, 122, "Text"],
Cell[10346, 294, 820, 19, 89, "Input"],
Cell[11169, 315, 250, 4, 44, "Text"],
Cell[CellGroupData[{
Cell[11444, 323, 110, 3, 39, "Input"],
Cell[11557, 328, 1330, 41, 99, "Output"]
}, Open  ]],
Cell[12902, 372, 376, 9, 67, "Text"],
Cell[CellGroupData[{
Cell[13303, 385, 419, 10, 39, "Input"],
Cell[13725, 397, 43375, 848, 244, "Output"]
}, Open  ]],
Cell[57115, 1248, 626, 10, 94, "Text"],
Cell[57744, 1260, 217, 5, 50, "Text"],
Cell[CellGroupData[{
Cell[57986, 1269, 511, 13, 38, "Input"],
Cell[58500, 1284, 43007, 847, 164, "Output"]
}, Open  ]],
Cell[101522, 2134, 294, 5, 40, "Text"],
Cell[CellGroupData[{
Cell[101841, 2143, 622, 16, 38, "Input"],
Cell[102466, 2161, 40693, 683, 293, "Output"]
}, Open  ]],
Cell[143174, 2847, 710, 11, 94, "Text"],
Cell[143887, 2860, 478, 9, 64, "Input"],
Cell[144368, 2871, 3728, 89, 373, "Input"],
Cell[148099, 2962, 256, 5, 67, "Text"],
Cell[148358, 2969, 250, 5, 38, "Input"],
Cell[148611, 2976, 40715, 683, 293, "Input"],
Cell[189329, 3661, 732, 21, 94, "Text"],
Cell[190064, 3684, 1551, 33, 114, "Input"],
Cell[191618, 3719, 92, 1, 38, "Input"],
Cell[CellGroupData[{
Cell[191735, 3724, 526, 9, 39, "Subsubsubsection"],
Cell[192264, 3735, 3594, 70, 522, "Text"],
Cell[195861, 3807, 383, 7, 67, "Text"],
Cell[196247, 3816, 2354, 61, 239, "Input"],
Cell[CellGroupData[{
Cell[198626, 3881, 1170, 28, 89, "Input"],
Cell[199799, 3911, 3871, 69, 339, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[203719, 3986, 527, 7, 48, "Subsubsubsection"],
Cell[204249, 3995, 226, 5, 50, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204512, 4005, 669, 10, 39, "Subsubsubsection"],
Cell[205184, 4017, 2480, 63, 335, "Text"],
Cell[207667, 4082, 3660, 101, 264, "Input"],
Cell[211330, 4185, 208, 4, 40, "Text"],
Cell[CellGroupData[{
Cell[211563, 4193, 373, 11, 38, "Input"],
Cell[211939, 4206, 2732, 72, 52, "Print"],
Cell[214674, 4280, 38738, 649, 293, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[253461, 4935, 646, 10, 39, "Subsubsubsection"],
Cell[254110, 4947, 432, 7, 94, "Text"],
Cell[254545, 4956, 6273, 165, 339, "Input"],
Cell[260821, 5123, 487, 8, 94, "Text"],
Cell[CellGroupData[{
Cell[261333, 5135, 634, 19, 38, "Input"],
Cell[261970, 5156, 57876, 1042, 295, "Output"]
}, Open  ]],
Cell[319861, 6201, 268, 5, 67, "Text"],
Cell[CellGroupData[{
Cell[320154, 6210, 535, 17, 38, "Input"],
Cell[320692, 6229, 61932, 1109, 295, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[382661, 7343, 512, 17, 38, "Input"],
Cell[383176, 7362, 61932, 1109, 328, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
